{
  "journal": [
    {
      "date": 1424460059453,
      "item": {
        "story": "",
        "title": "Solidity"
      },
      "type": "create"
    },
    {
      "item": {
        "type": "paragraph",
        "id": "7d1554bb6a8086c2",
        "text": "Solidity is roughly speaking, an object-oriented language designed for writing contracts in Ethereum. Contracts are (typically) small programs which govern the behaviour of accounts within the Ethereum state. These programs operate within the context of the Ethereum environment. Such accounts are able to pass messages between themselves as well as doing practically Turing complete computation.\n"
      },
      "id": "7d1554bb6a8086c2",
      "type": "add",
      "date": 1434658146919,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server TypeError: Object  has no method 'map'"
      }
    },
    {
      "type": "fork",
      "date": 1434658158001
    },
    {
      "type": "edit",
      "id": "7d1554bb6a8086c2",
      "item": {
        "type": "paragraph",
        "id": "7d1554bb6a8086c2",
        "text": "Solidity is roughly speaking, an object-oriented language designed for writing [[Cryptographic Contracts]]. Contracts are (typically) small programs which govern the behaviour of accounts within the Ethereum state. These programs operate within the context of the Ethereum environment. Such accounts are able to pass messages between themselves as well as doing practically Turing complete computation.\n"
      },
      "date": 1434658175138
    },
    {
      "type": "edit",
      "id": "7d1554bb6a8086c2",
      "item": {
        "type": "paragraph",
        "id": "7d1554bb6a8086c2",
        "text": "Solidity is roughly speaking, an object-oriented language designed for writing [[Cryptographic Contracts]]. \n"
      },
      "date": 1434658217972
    },
    {
      "type": "edit",
      "id": "5a232ed0a1fd6458",
      "item": {
        "type": "paragraph",
        "id": "5a232ed0a1fd6458",
        "text": "Solidity is perhaps the first example of a contract-oriented programming language; a slight tweak on the notion of object-orientation. While closely related to object-oriented languages, this is a language designed specifically to help express agreements that must encode ideas and relationships relevant to Real Life, or some formal model thereof. As such we see notions such as ownership, identity, protections and restrictions forming a core part of the vocabulary and idiomatic grammar.\n\n"
      },
      "date": 1434658232429
    },
    {
      "item": {
        "type": "factory",
        "id": "5c7ad3c499d7397d"
      },
      "id": "5c7ad3c499d7397d",
      "type": "add",
      "after": "7d1554bb6a8086c2",
      "date": 1448990905410
    },
    {
      "item": {
        "type": "factory",
        "id": "b2f122b2539d25c6"
      },
      "id": "b2f122b2539d25c6",
      "type": "add",
      "after": "5c7ad3c499d7397d",
      "date": 1448990926185
    },
    {
      "type": "remove",
      "id": "5c7ad3c499d7397d",
      "date": 1448990928690
    },
    {
      "type": "edit",
      "id": "b2f122b2539d25c6",
      "item": {
        "type": "html",
        "id": "b2f122b2539d25c6",
        "text": "<h3>Related Pages"
      },
      "date": 1448990939452
    },
    {
      "item": {
        "type": "factory",
        "id": "35ddc4c4ab3cde13"
      },
      "id": "35ddc4c4ab3cde13",
      "type": "add",
      "after": "b2f122b2539d25c6",
      "date": 1448990941355
    },
    {
      "type": "edit",
      "id": "35ddc4c4ab3cde13",
      "item": {
        "type": "html",
        "id": "35ddc4c4ab3cde13",
        "text": "<ul>\n<li>[[Dapp]]\n<li>\n<li>"
      },
      "date": 1448990963975
    },
    {
      "type": "edit",
      "id": "35ddc4c4ab3cde13",
      "item": {
        "type": "html",
        "id": "35ddc4c4ab3cde13",
        "text": "<ul>\n<li>[[DApp]]\n<li>\n<li>"
      },
      "date": 1448990972749
    },
    {
      "type": "edit",
      "id": "35ddc4c4ab3cde13",
      "item": {
        "type": "html",
        "id": "35ddc4c4ab3cde13",
        "text": "<ul>\n<li>[[DApp]]\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>"
      },
      "date": 1448991031050
    },
    {
      "type": "edit",
      "id": "7d1554bb6a8086c2",
      "item": {
        "type": "paragraph",
        "id": "7d1554bb6a8086c2",
        "text": "The Solidity Contract-Oriented Programming Language\nSolidity is roughly speaking, an object-oriented language designed for writing [[Cryptographic Contracts]]. \n"
      },
      "date": 1448991789493
    },
    {
      "type": "edit",
      "id": "7d1554bb6a8086c2",
      "item": {
        "type": "paragraph",
        "id": "7d1554bb6a8086c2",
        "text": "The Solidity Contract-Oriented Programming Language\nSolidity is roughly speaking, an object-oriented language designed for writing [[Cryptographic Contracts]]. "
      },
      "date": 1448991887384
    },
    {
      "type": "add",
      "id": "2f00bb8b8484f789",
      "item": {
        "type": "paragraph",
        "id": "2f00bb8b8484f789",
        "text": "To get started with Solidity check out [https://ethereum.github.io/solidity/docs/home/ Solidity documentation]"
      },
      "after": "7d1554bb6a8086c2",
      "date": 1448991924604
    },
    {
      "type": "add",
      "id": "ba19cd15b56e8a44",
      "item": {
        "type": "paragraph",
        "id": "ba19cd15b56e8a44",
        "text": "A contract in the sense of Solidity is a collection of code (its functions)"
      },
      "after": "7d1554bb6a8086c2",
      "date": 1448992137796
    },
    {
      "type": "edit",
      "id": "ba19cd15b56e8a44",
      "item": {
        "type": "paragraph",
        "id": "ba19cd15b56e8a44",
        "text": "A contract in the sense of Solidity is a collection of code (its functions) and data (its state) that resides at a specific address on the Ethereum blockchain."
      },
      "date": 1448992158924
    },
    {
      "type": "edit",
      "id": "ba19cd15b56e8a44",
      "item": {
        "type": "paragraph",
        "id": "ba19cd15b56e8a44",
        "text": "A contract in the sense of Solidity is a collection of code (its functions) and data (its state) that resides at a specific address on the [[Ethereum blockchain]] (or any other blockchain that supports Solidity, such as for example permissioned chain designed by [[Eris]])."
      },
      "date": 1448992221447
    },
    {
      "type": "edit",
      "id": "ba19cd15b56e8a44",
      "item": {
        "type": "paragraph",
        "id": "ba19cd15b56e8a44",
        "text": "A contract in the sense of Solidity is a collection of code (its functions) and data (its state) that resides at a specific address on the [[Ethereum blockchain]] (or any other blockchain that supports Solidity, permissioned[[Eris]] chain etc)."
      },
      "date": 1448992254221
    },
    {
      "type": "edit",
      "id": "ba19cd15b56e8a44",
      "item": {
        "type": "paragraph",
        "id": "ba19cd15b56e8a44",
        "text": "A contract in the sense of Solidity is a collection of code (its functions) and data (its state) that resides at a specific address on the [[Ethereum blockchain]] (or any other blockchain that supports Solidity, permissioned [[Eris]] chain etc)."
      },
      "date": 1448994446479
    },
    {
      "item": {
        "type": "factory",
        "id": "f583753d328a2dda"
      },
      "id": "f583753d328a2dda",
      "type": "add",
      "after": "35ddc4c4ab3cde13",
      "date": 1448999799007
    },
    {
      "type": "edit",
      "id": "f583753d328a2dda",
      "item": {
        "type": "html",
        "id": "f583753d328a2dda",
        "text": "<h3>Tutorials"
      },
      "date": 1448999810938
    },
    {
      "item": {
        "type": "factory",
        "id": "f549c81bca5a5e49"
      },
      "id": "f549c81bca5a5e49",
      "type": "add",
      "after": "f583753d328a2dda",
      "date": 1448999812552
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>\n<li>\n<li>\n<li>"
      },
      "date": 1448999833104
    },
    {
      "type": "edit",
      "id": "35ddc4c4ab3cde13",
      "item": {
        "type": "html",
        "id": "35ddc4c4ab3cde13",
        "text": "<ul>\n<li>[[DApp]]\n<li>\n<li>"
      },
      "date": 1448999837074
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>\n<li>\n<li>"
      },
      "date": 1448999841802
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>\n<li>"
      },
      "date": 1448999961472
    },
    {
      "type": "move",
      "order": [
        "7d1554bb6a8086c2",
        "ba19cd15b56e8a44",
        "2f00bb8b8484f789",
        "35ddc4c4ab3cde13",
        "f583753d328a2dda",
        "f549c81bca5a5e49",
        "b2f122b2539d25c6"
      ],
      "id": "b2f122b2539d25c6",
      "date": 1449000516359
    },
    {
      "type": "move",
      "order": [
        "7d1554bb6a8086c2",
        "ba19cd15b56e8a44",
        "2f00bb8b8484f789",
        "f583753d328a2dda",
        "f549c81bca5a5e49",
        "b2f122b2539d25c6",
        "35ddc4c4ab3cde13"
      ],
      "id": "35ddc4c4ab3cde13",
      "date": 1449000520803
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>"
      },
      "date": 1449000553176
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/12/solidity-2/ Solidity III Action Driven Architecture]"
      },
      "date": 1449000589406
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/12/solidity-2/ Solidity II Action Driven Architecture]"
      },
      "date": 1449000604148
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/12/solidity-2/ Solidity II Action Driven Architecture]\n<li>"
      },
      "date": 1449000615673
    },
    {
      "type": "edit",
      "id": "ba19cd15b56e8a44",
      "item": {
        "type": "paragraph",
        "id": "ba19cd15b56e8a44",
        "text": "A contract in the sense of Solidity is a collection of code (its functions) and data (its state) that resides at a specific address on the [[Ethereum blockchain]] (or any other [[Blockchain]] that supports Solidity, permissioned [[Eris]] chain etc)."
      },
      "date": 1449081703594
    },
    {
      "type": "edit",
      "id": "ba19cd15b56e8a44",
      "item": {
        "type": "paragraph",
        "id": "ba19cd15b56e8a44",
        "text": "A contract in the sense of Solidity is a collection of code (its functions) and data (its state) that resides at a specific address on the [[Ethereum blockchain]] (or any other [[Blockchain]] that supports Solidity, permissioned [[Eris]] chain etc). It is used to develop [[DApp]]s"
      },
      "date": 1449081825960
    },
    {
      "type": "edit",
      "id": "35ddc4c4ab3cde13",
      "item": {
        "type": "html",
        "id": "35ddc4c4ab3cde13",
        "text": "<ul>\n<li>[[DApp]]\n<li>[[Ethereum on Raspberry Pi]]\n<li>"
      },
      "date": 1449177569987
    },
    {
      "item": {
        "type": "factory",
        "id": "4020b922be293d22"
      },
      "id": "4020b922be293d22",
      "type": "add",
      "after": "35ddc4c4ab3cde13",
      "date": 1449195259587
    },
    {
      "type": "edit",
      "id": "4020b922be293d22",
      "item": {
        "type": "reference",
        "id": "4020b922be293d22",
        "site": "ksenya.cryptoacademy.org",
        "slug": "solidity-notary-contract",
        "title": "Solidity Notary Contract",
        "text": "Very basic contract for a notary (timestamping system) written as a design suggestion by [https://github.com/Ryanmtate Ryanmtate]"
      },
      "date": 1449195261271
    },
    {
      "type": "remove",
      "id": "4020b922be293d22",
      "date": 1449195274293
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/12/solidity-2/ Solidity II Action Driven Architecture]\n<li>"
      },
      "date": 1449195289780
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>[https://ethereum.gitbooks.io/frontier-guide/content/writing_contract.html Writing a contract]\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/12/solidity-2/ Solidity II Action Driven Architecture]\n<li>"
      },
      "date": 1449195337361
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>\n<li>[https://ethereum.gitbooks.io/frontier-guide/content/writing_contract.html Writing a contract]\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/12/solidity-2/ Solidity II Action Driven Architecture]\n"
      },
      "date": 1449195350474
    },
    {
      "type": "edit",
      "id": "f549c81bca5a5e49",
      "item": {
        "type": "html",
        "id": "f549c81bca5a5e49",
        "text": "<ul>\n<li>[https://www.youtube.com/playlist?list=PL_kFomDrqPoZBu5uxd8OBGColQPYbuz3i Andreas' Dapp tutorials]\n<li>[https://ethereum.gitbooks.io/frontier-guide/content/writing_contract.html Writing a contract]\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/12/solidity-2/ Solidity II Action Driven Architecture]\n"
      },
      "date": 1449196990060
    },
    {
      "type": "fork",
      "site": "ksenya.cryptoacademy.org",
      "date": 1450793574122
    },
    {
      "type": "fork",
      "site": "cryptoacademy.org",
      "date": 1511973186949
    },
    {
      "type": "fork",
      "date": 1511973210679
    },
    {
      "item": {
        "type": "factory",
        "id": "cbf438e83588f34e"
      },
      "id": "cbf438e83588f34e",
      "type": "add",
      "after": "35ddc4c4ab3cde13",
      "date": 1511973213772
    },
    {
      "type": "edit",
      "id": "cbf438e83588f34e",
      "item": {
        "type": "reference",
        "id": "cbf438e83588f34e",
        "site": "identity.thought.garden",
        "slug": "solidity-notary-contract",
        "title": "Solidity Notary Contract",
        "text": "Very basic contract for a notary (timestamping system) written as a design suggestion by [https://github.com/Ryanmtate Ryanmtate]"
      },
      "date": 1511973216493
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "7d1554bb6a8086c2",
      "text": "The Solidity Contract-Oriented Programming Language\nSolidity is roughly speaking, an object-oriented language designed for writing [[Cryptographic Contracts]]. "
    },
    {
      "type": "paragraph",
      "id": "ba19cd15b56e8a44",
      "text": "A contract in the sense of Solidity is a collection of code (its functions) and data (its state) that resides at a specific address on the [[Ethereum blockchain]] (or any other [[Blockchain]] that supports Solidity, permissioned [[Eris]] chain etc). It is used to develop [[DApp]]s"
    },
    {
      "type": "paragraph",
      "id": "2f00bb8b8484f789",
      "text": "To get started with Solidity check out [https://ethereum.github.io/solidity/docs/home/ Solidity documentation]"
    },
    {
      "type": "html",
      "id": "f583753d328a2dda",
      "text": "<h3>Tutorials"
    },
    {
      "type": "html",
      "id": "f549c81bca5a5e49",
      "text": "<ul>\n<li>[https://www.youtube.com/playlist?list=PL_kFomDrqPoZBu5uxd8OBGColQPYbuz3i Andreas' Dapp tutorials]\n<li>[https://ethereum.gitbooks.io/frontier-guide/content/writing_contract.html Writing a contract]\n<li>[https://dappsforbeginners.wordpress.com/tutorials/introduction-to-development-on-ethereum/ Dapps for Beginners]\n<li>[https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial Ethereum Dev Tutorial]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/ Solidity I by Andreas Olofsson]\n<li>[https://eng.erisindustries.com/tutorials/2015/03/12/solidity-2/ Solidity II Action Driven Architecture]\n"
    },
    {
      "type": "html",
      "id": "b2f122b2539d25c6",
      "text": "<h3>Related Pages"
    },
    {
      "type": "html",
      "id": "35ddc4c4ab3cde13",
      "text": "<ul>\n<li>[[DApp]]\n<li>[[Ethereum on Raspberry Pi]]\n<li>"
    },
    {
      "type": "reference",
      "id": "cbf438e83588f34e",
      "site": "identity.thought.garden",
      "slug": "solidity-notary-contract",
      "title": "Solidity Notary Contract",
      "text": "Very basic contract for a notary (timestamping system) written as a design suggestion by [https://github.com/Ryanmtate Ryanmtate]"
    }
  ],
  "title": "Solidity"
}