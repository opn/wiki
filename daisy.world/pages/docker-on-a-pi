{
  "title": "Docker on a Pi",
  "story": [
    {
      "type": "paragraph",
      "id": "e2f783a5d53ec045",
      "text": "There are a number of ways of getting Docker running on a Raspberry Pi. The best two strategies we came across were:"
    },
    {
      "type": "html",
      "id": "7460c039dd88000f",
      "text": "<ol>\n<li> [http://blog.hypriot.com/post/heavily-armed-after-major-upgrade-raspberry-pi-with-docker-1-dot-5-0/ Hypriot.com]\n<li> [http://resin.io resin.io]"
    },
    {
      "type": "markdown",
      "id": "49efaf46963b54aa",
      "text": "# Why combine docker and raspberry pi?"
    },
    {
      "type": "paragraph",
      "id": "18abd47df507aec1",
      "text": "It is nice to work with a Raspberry Pi because it is a great platform to connect devices. Deploying anything however, is kind of a pain. With dockerized apps we can develop and test our application on our own home machine, when it works we can deploy it to the raspberry - [http://blog.xebia.com/2014/08/25/docker-on-a-raspberry-pi/ blog.xebia.com]"
    },
    {
      "type": "paragraph",
      "id": "95994fce09695b15",
      "text": "We can do this without any pain or worries about corruption of the underlying operating system and tools. And last but not least, you can easily undo your tryouts."
    },
    {
      "type": "video",
      "id": "111c41c605366ae5",
      "text": "YOUTUBE yHytb1k3TfM\nhttp://blog.hypriot.com/heavily-armed...\nThis is a quick demo how to use Docker Kitematic to control a remote Docker Host running on a Raspberry Pi 2.\n"
    },
    {
      "type": "markdown",
      "id": "3896df8a1f62a19c",
      "text": "# What I don't like about docker on a raspberry pi"
    },
    {
      "type": "paragraph",
      "id": "372d42f0ac780be1",
      "text": "The slogan of docker to 'build, ship and run any app anywhere' is not entirely valid. You cannot develop your Dockerfile on your local machine and deploy the same application directly to your raspberry pi. "
    },
    {
      "type": "paragraph",
      "id": "e5318cd2d80b46d4",
      "text": "This is because each dockerfile includes a core image. For running your application on your local machine, you need a x86-based docker-image. For your raspberry pi you need an ARM-based image. That is a pity, because this means you can only build your docker-image for your Raspberry Pi on the raspberry pi, which is slow."
    },
    {
      "type": "video",
      "id": "922fec9ae826ce8f",
      "text": "VIMEO 108930903\nDoing this manually involves setting up an operating system, establishing a secure local network, configuring some means of recording and viewing logs, and providing some means of shipping new versions of code to devices in the field, amongst other equally vexing tasks. Resin.io handles all of this for you.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Docker on a Pi",
        "story": []
      },
      "date": 1438624996600
    },
    {
      "item": {
        "type": "factory",
        "id": "e2f783a5d53ec045"
      },
      "id": "e2f783a5d53ec045",
      "type": "add",
      "date": 1438624998312
    },
    {
      "type": "edit",
      "id": "e2f783a5d53ec045",
      "item": {
        "type": "paragraph",
        "id": "e2f783a5d53ec045",
        "text": "There are a number of ways of getting Docker running on a Raspberry Pi. here we list our experience:"
      },
      "date": 1438625032340
    },
    {
      "item": {
        "type": "factory",
        "id": "111c41c605366ae5"
      },
      "id": "111c41c605366ae5",
      "type": "add",
      "after": "e2f783a5d53ec045",
      "date": 1438625046273
    },
    {
      "type": "edit",
      "id": "111c41c605366ae5",
      "item": {
        "type": "video",
        "id": "111c41c605366ae5",
        "text": "YOUTUBE yHytb1k3TfM\n(double-click to edit caption)\n"
      },
      "date": 1438625054199
    },
    {
      "type": "edit",
      "id": "111c41c605366ae5",
      "item": {
        "type": "video",
        "id": "111c41c605366ae5",
        "text": "YOUTUBE yHytb1k3TfM\nhttp://blog.hypriot.com/heavily-armed...\nThis is a quick demo how to use Docker Kitematic to control a remote Docker Host running on a Raspberry Pi 2.\n"
      },
      "date": 1438635088672
    },
    {
      "item": {
        "type": "factory",
        "id": "49efaf46963b54aa"
      },
      "id": "49efaf46963b54aa",
      "type": "add",
      "after": "111c41c605366ae5",
      "date": 1438635266066
    },
    {
      "type": "edit",
      "id": "49efaf46963b54aa",
      "item": {
        "type": "paragraph",
        "id": "49efaf46963b54aa",
        "text": "# Why combine docker and raspberry pi?"
      },
      "date": 1438635273228
    },
    {
      "type": "edit",
      "id": "49efaf46963b54aa",
      "item": {
        "type": "markdown",
        "id": "49efaf46963b54aa",
        "text": "# Why combine docker and raspberry pi?"
      },
      "date": 1438635274910
    },
    {
      "type": "add",
      "id": "18abd47df507aec1",
      "item": {
        "type": "paragraph",
        "id": "18abd47df507aec1",
        "text": "It is nice to work with a Raspberry Pi because it is a great platform to connect devices. Deploying anything however, is kind of a pain. With dockerized apps we can develop and test our application on our own home machine, when it works we can deploy it to the raspberry. We can do this without any pain or worries about corruption of the underlying operating system and tools. And last but not least, you can easily undo your tryouts."
      },
      "after": "49efaf46963b54aa",
      "date": 1438635278518
    },
    {
      "item": {
        "type": "factory",
        "id": "3896df8a1f62a19c"
      },
      "id": "3896df8a1f62a19c",
      "type": "add",
      "after": "18abd47df507aec1",
      "date": 1438635369966
    },
    {
      "type": "edit",
      "id": "3896df8a1f62a19c",
      "item": {
        "type": "paragraph",
        "id": "3896df8a1f62a19c",
        "text": "# What I don't like about docker on a raspberry pi"
      },
      "date": 1438635379008
    },
    {
      "type": "edit",
      "id": "3896df8a1f62a19c",
      "item": {
        "type": "markdown",
        "id": "3896df8a1f62a19c",
        "text": "# What I don't like about docker on a raspberry pi"
      },
      "date": 1438635380612
    },
    {
      "type": "add",
      "id": "372d42f0ac780be1",
      "item": {
        "type": "paragraph",
        "id": "372d42f0ac780be1",
        "text": "The slogan of docker to 'build, ship and run any app anywhere' is not entirely valid. You cannot develop your Dockerfile on your local machine and deploy the same application directly to your raspberry pi. "
      },
      "after": "3896df8a1f62a19c",
      "date": 1438635387475
    },
    {
      "type": "add",
      "id": "e5318cd2d80b46d4",
      "item": {
        "type": "paragraph",
        "id": "e5318cd2d80b46d4",
        "text": "This is because each dockerfile includes a core image. For running your application on your local machine, you need a x86-based docker-image. For your raspberry pi you need an ARM-based image. That is a pity, because this means you can only build your docker-image for your Raspberry Pi on the raspberry pi, which is slow."
      },
      "after": "372d42f0ac780be1",
      "date": 1438635391121
    },
    {
      "type": "edit",
      "id": "18abd47df507aec1",
      "item": {
        "type": "paragraph",
        "id": "18abd47df507aec1",
        "text": "It is nice to work with a Raspberry Pi because it is a great platform to connect devices. Deploying anything however, is kind of a pain. With dockerized apps we can develop and test our application on our own home machine, when it works we can deploy it to the raspberry. "
      },
      "date": 1438635398676
    },
    {
      "type": "add",
      "id": "95994fce09695b15",
      "item": {
        "type": "paragraph",
        "id": "95994fce09695b15",
        "text": "We can do this without any pain or worries about corruption of the underlying operating system and tools. And last but not least, you can easily undo your tryouts."
      },
      "after": "18abd47df507aec1",
      "date": 1438635399524
    },
    {
      "type": "move",
      "order": [
        "e2f783a5d53ec045",
        "49efaf46963b54aa",
        "111c41c605366ae5",
        "18abd47df507aec1",
        "95994fce09695b15",
        "3896df8a1f62a19c",
        "372d42f0ac780be1",
        "e5318cd2d80b46d4"
      ],
      "id": "49efaf46963b54aa",
      "date": 1438635408801
    },
    {
      "type": "move",
      "order": [
        "e2f783a5d53ec045",
        "49efaf46963b54aa",
        "18abd47df507aec1",
        "111c41c605366ae5",
        "95994fce09695b15",
        "3896df8a1f62a19c",
        "372d42f0ac780be1",
        "e5318cd2d80b46d4"
      ],
      "id": "18abd47df507aec1",
      "date": 1438635411396
    },
    {
      "type": "move",
      "order": [
        "e2f783a5d53ec045",
        "49efaf46963b54aa",
        "18abd47df507aec1",
        "95994fce09695b15",
        "111c41c605366ae5",
        "3896df8a1f62a19c",
        "372d42f0ac780be1",
        "e5318cd2d80b46d4"
      ],
      "id": "95994fce09695b15",
      "date": 1438635418054
    },
    {
      "type": "edit",
      "id": "18abd47df507aec1",
      "item": {
        "type": "paragraph",
        "id": "18abd47df507aec1",
        "text": "It is nice to work with a Raspberry Pi because it is a great platform to connect devices. Deploying anything however, is kind of a pain. With dockerized apps we can develop and test our application on our own home machine, when it works we can deploy it to the raspberry - [http://blog.xebia.com/2014/08/25/docker-on-a-raspberry-pi/ blog.xebia.com]"
      },
      "date": 1438635481277
    },
    {
      "type": "edit",
      "id": "e2f783a5d53ec045",
      "item": {
        "type": "paragraph",
        "id": "e2f783a5d53ec045",
        "text": "There are a number of ways of getting Docker running on a Raspberry Pi. The best two strategies we came across were:"
      },
      "date": 1438635542650
    },
    {
      "type": "add",
      "id": "7460c039dd88000f",
      "item": {
        "type": "paragraph",
        "id": "7460c039dd88000f",
        "text": "<ol><li> [http://blog.hypriot.com/post/heavily-armed-after-major-upgrade-raspberry-pi-with-docker-1-dot-5-0/ hypriot.com]"
      },
      "after": "e2f783a5d53ec045",
      "date": 1438635573931
    },
    {
      "type": "edit",
      "id": "7460c039dd88000f",
      "item": {
        "type": "html",
        "id": "7460c039dd88000f",
        "text": "<ol><li> [http://blog.hypriot.com/post/heavily-armed-after-major-upgrade-raspberry-pi-with-docker-1-dot-5-0/ hypriot.com]"
      },
      "date": 1438635576191
    },
    {
      "type": "edit",
      "id": "7460c039dd88000f",
      "item": {
        "type": "html",
        "id": "7460c039dd88000f",
        "text": "<ol><li> [http://blog.hypriot.com/post/heavily-armed-after-major-upgrade-raspberry-pi-with-docker-1-dot-5-0/ Hypriot.com]"
      },
      "date": 1438636840574
    },
    {
      "type": "edit",
      "id": "7460c039dd88000f",
      "item": {
        "type": "html",
        "id": "7460c039dd88000f",
        "text": "<ol>\n<li> [http://blog.hypriot.com/post/heavily-armed-after-major-upgrade-raspberry-pi-with-docker-1-dot-5-0/ Hypriot.com]\n<li> [http://resin.io resin.io]"
      },
      "date": 1438636874873
    },
    {
      "item": {
        "type": "factory",
        "id": "922fec9ae826ce8f"
      },
      "id": "922fec9ae826ce8f",
      "type": "add",
      "after": "e5318cd2d80b46d4",
      "date": 1438637110594
    },
    {
      "type": "edit",
      "id": "922fec9ae826ce8f",
      "item": {
        "type": "video",
        "id": "922fec9ae826ce8f",
        "text": "VIMEO 108930903\n(double-click to edit caption)\n"
      },
      "date": 1438637118684
    },
    {
      "type": "edit",
      "id": "922fec9ae826ce8f",
      "item": {
        "type": "video",
        "id": "922fec9ae826ce8f",
        "text": "VIMEO 108930903\nDoing this manually involves setting up an operating system, establishing a secure local network, configuring some means of recording and viewing logs, and providing some means of shipping new versions of code to devices in the field, amongst other equally vexing tasks. Resin.io handles all of this for you.\n"
      },
      "date": 1438637164007
    }
  ]
}