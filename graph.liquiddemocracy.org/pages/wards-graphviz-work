{
  "title": "Wards GraphViz Work",
  "story": [
    {
      "type": "paragraph",
      "id": "01ada1aa87b7822f",
      "text": "I've mostly used the dot component of the suite of graph rendering programs."
    },
    {
      "type": "paragraph",
      "id": "56824398c63132fd",
      "text": "[[Claims]] rendered as interlinked sentences with arcs emerging from key words."
    },
    {
      "type": "paragraph",
      "id": "5445d277386ded63",
      "text": "[[Contiguous USA]] exercised dot's layout engine by recreating geography from topology."
    },
    {
      "type": "paragraph",
      "id": "3f4fe6a7550cc4d0",
      "text": "[[XML Import in Ruby]] where I first started producing intermediate snapshots in dot as a large program runs."
    },
    {
      "type": "paragraph",
      "id": "ea863d5c394488e5",
      "text": "[[IRLP Script Call Map]] scraped from idiomatic script invocations I could find with perl."
    },
    {
      "type": "paragraph",
      "id": "055df0010034d7b3",
      "text": "[[Exploratory Parsing]] where parse statistics offer drill down through clickable counts on arcs."
    },
    {
      "type": "paragraph",
      "id": "e91aa7a54fd8a23f",
      "text": "[[Excel Parslets]] scraped excel workbooks exported in custom json to plot data flow across spreadsheets. "
    },
    {
      "type": "paragraph",
      "id": "f56fd405ceeaa09d",
      "text": "[[Animals Decision Tree in Dot]] created as an illustration for this portfolio."
    },
    {
      "type": "html",
      "id": "02e160b468620d5c",
      "text": "<h3> Wards Technique"
    },
    {
      "type": "paragraph",
      "id": "024c500b837e0764",
      "text": "I'm usually writing short scripts that read data of my own or others. In a second pass, I emit that data in dot format."
    },
    {
      "type": "paragraph",
      "id": "6957a59bc7cd42ec",
      "text": "I've spent a lot of time coaxing my scripts to not output duplicate arcs. I've only noticed recently that if I declare a strict digraph graphviz will omit duplicates for me."
    },
    {
      "type": "paragraph",
      "id": "fefdd9f2e8a5994b",
      "text": "I have trouble remembering simple things, like how to make nodes other than white. I now maintain a wiki page of [[Graphviz Idioms]]."
    },
    {
      "type": "paragraph",
      "id": "198b8cd84128eb21",
      "text": "Use this transporter to create a single page drawing the graph in the lineup so far."
    },
    {
      "type": "transport",
      "id": "3fe77af6f4aa7db2",
      "text": "GRAPH POST http://home.c2.com:4010/graphviz"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Wards GraphViz Work",
        "story": []
      },
      "date": 1512326941085
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "01ada1aa87b7822f",
        "text": "I've mostly used the dot component of the suite of graph rendering programs."
      },
      "id": "01ada1aa87b7822f",
      "date": 1512326945139
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "56824398c63132fd",
        "text": "[[Claims]] rendered as interlinked sentences with arcs emerging from key words."
      },
      "after": "01ada1aa87b7822f",
      "id": "56824398c63132fd",
      "date": 1512326947499
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5445d277386ded63",
        "text": "[[Contiguous USA]] exercised dot's layout engine by recreating geography from topology."
      },
      "after": "56824398c63132fd",
      "id": "5445d277386ded63",
      "date": 1512326950302
    },
    {
      "type": "remove",
      "id": "56824398c63132fd",
      "date": 1512326957605
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "56824398c63132fd",
        "text": "[[Claims]] rendered as interlinked sentences with arcs emerging from key words."
      },
      "after": "01ada1aa87b7822f",
      "id": "56824398c63132fd",
      "date": 1512326970216
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3f4fe6a7550cc4d0",
        "text": "[[XML Import in Ruby]] where I first started producing intermediate snapshots in dot as a large program runs."
      },
      "after": "5445d277386ded63",
      "id": "3f4fe6a7550cc4d0",
      "date": 1512326976676
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ea863d5c394488e5",
        "text": "[[IRLP Script Call Map]] scraped from idiomatic script invocations I could find with perl."
      },
      "after": "3f4fe6a7550cc4d0",
      "id": "ea863d5c394488e5",
      "date": 1512326979394
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "055df0010034d7b3",
        "text": "[[Exploratory Parsing]] where parse statistics offer drill down through clickable counts on arcs."
      },
      "after": "ea863d5c394488e5",
      "id": "055df0010034d7b3",
      "date": 1512326982320
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e91aa7a54fd8a23f",
        "text": "[[Excel Parslets]] scraped excel workbooks exported in custom json to plot data flow across spreadsheets. "
      },
      "after": "055df0010034d7b3",
      "id": "e91aa7a54fd8a23f",
      "date": 1512326984827
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f56fd405ceeaa09d",
        "text": "[[Animals Decision Tree in Dot]] created as an illustration for this portfolio."
      },
      "after": "e91aa7a54fd8a23f",
      "id": "f56fd405ceeaa09d",
      "date": 1512326988314
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "02e160b468620d5c",
        "text": "<h3> Wards Technique"
      },
      "after": "f56fd405ceeaa09d",
      "id": "02e160b468620d5c",
      "date": 1512326994141
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "024c500b837e0764",
        "text": "I'm usually writing short scripts that read data of my own or others. In a second pass, I emit that data in dot format."
      },
      "after": "02e160b468620d5c",
      "id": "024c500b837e0764",
      "date": 1512326996590
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "6957a59bc7cd42ec",
        "text": "I've spent a lot of time coaxing my scripts to not output duplicate arcs. I've only noticed recently that if I declare a strict digraph graphviz will omit duplicates for me."
      },
      "after": "024c500b837e0764",
      "id": "6957a59bc7cd42ec",
      "date": 1512326999191
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "fefdd9f2e8a5994b",
        "text": "I have trouble remembering simple things, like how to make nodes other than white. I now maintain a wiki page of [[Graphviz Idioms]]."
      },
      "after": "6957a59bc7cd42ec",
      "id": "fefdd9f2e8a5994b",
      "date": 1512327001815
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "198b8cd84128eb21",
        "text": "Use this transporter to create a single page drawing the graph in the lineup so far."
      },
      "after": "fefdd9f2e8a5994b",
      "id": "198b8cd84128eb21",
      "date": 1512327014919
    },
    {
      "type": "add",
      "item": {
        "type": "transport",
        "id": "3fe77af6f4aa7db2",
        "text": "GRAPH POST http://home.c2.com:4010/graphviz"
      },
      "after": "198b8cd84128eb21",
      "id": "3fe77af6f4aa7db2",
      "date": 1512327017976
    }
  ]
}