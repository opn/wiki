{
  "title": "Layout methods",
  "journal": [
    {
      "date": 1512129293350,
      "type": "create",
      "item": {
        "story": "",
        "title": "pageTitle"
      }
    },
    {
      "type": "add",
      "id": "65e0a1b8-17e4-4e31-98e8-1557adf9899d",
      "item": {
        "type": "factory",
        "id": "65e0a1b8-17e4-4e31-98e8-1557adf9899d"
      },
      "date": 1512129293540
    },
    {
      "type": "edit",
      "id": "65e0a1b8-17e4-4e31-98e8-1557adf9899d",
      "item": {
        "id": "65e0a1b8-17e4-4e31-98e8-1557adf9899d",
        "type": "html",
        "text": "<div style='padding: 12px; background:#eee; width:96%; align=centered;'>\n<a href='https://commons.wikimedia.org/wiki/File:Social_Network_Analysis_Visualization.png' target='_blank'>\n<img style='display:block; margin:auto; width:100%;'\nsrc='https://upload.wikimedia.org/wikipedia/commons/9/9b/Social_Network_Analysis_Visualization.png'>\n</a>\n\n<p class=caption>\nA force-based network visualization.]]There are many different graph layout strategie\n- [https://commons.wikimedia.org/wiki/File:Social_Network_Analysis_Visualization.png wikimedia.org]\n</p></div>"
      },
      "date": 1512129293540
    },
    {
      "type": "add",
      "id": "fd2215fb-ecc8-4f58-afa2-fb15f06776bd",
      "after": "65e0a1b8-17e4-4e31-98e8-1557adf9899d",
      "item": {
        "type": "factory",
        "id": "fd2215fb-ecc8-4f58-afa2-fb15f06776bd"
      },
      "date": 1512129293542
    },
    {
      "type": "edit",
      "id": "fd2215fb-ecc8-4f58-afa2-fb15f06776bd",
      "item": {
        "id": "fd2215fb-ecc8-4f58-afa2-fb15f06776bd",
        "type": "paragraph",
        "text": "*In [[force-based layout]] systems, the graph drawing software modifies an initial vertex placement by continuously moving the vertices according to a system of forces based on physical metaphors related to systems of springs ([[spring (device)]]) or [[molecular mechanics]]. Typically, these systems combine attractive forces between adjacent vertices with repulsive forces between all pairs of vertices, in order to seek a layout in which edge lengths are small while vertices are well-separated. These systems may perform  [[gradient descent]] based minimization of an [[energy function]], or they may translate the forces directly into velocities or accelerations for the moving vertices."
      },
      "date": 1512129293542
    },
    {
      "type": "add",
      "id": "7a7b9c43-682f-4ff6-a5e3-2ce480a22ed5",
      "after": "fd2215fb-ecc8-4f58-afa2-fb15f06776bd",
      "item": {
        "type": "factory",
        "id": "7a7b9c43-682f-4ff6-a5e3-2ce480a22ed5"
      },
      "date": 1512129293543
    },
    {
      "type": "edit",
      "id": "7a7b9c43-682f-4ff6-a5e3-2ce480a22ed5",
      "item": {
        "id": "7a7b9c43-682f-4ff6-a5e3-2ce480a22ed5",
        "type": "paragraph",
        "text": "*[[Spectral layout]] methods use as coordinates the [[eigenvector]]s of a matrix ([[Matrix (mathematics)]]) such as the Laplacian ([[Discrete Laplace operator]]) derived from the [[adjacency matrix]] of the graph."
      },
      "date": 1512129293543
    },
    {
      "type": "add",
      "id": "d27dabf5-6dca-4d71-a125-a0b04c662d35",
      "after": "7a7b9c43-682f-4ff6-a5e3-2ce480a22ed5",
      "item": {
        "type": "factory",
        "id": "d27dabf5-6dca-4d71-a125-a0b04c662d35"
      },
      "date": 1512129293544
    },
    {
      "type": "edit",
      "id": "d27dabf5-6dca-4d71-a125-a0b04c662d35",
      "item": {
        "id": "d27dabf5-6dca-4d71-a125-a0b04c662d35",
        "type": "paragraph",
        "text": "*Orthogonal layout methods, which allow the edges of the graph to run horizontally or vertically, parallel to the coordinate axes of the layout. These methods were originally designed for [[VLSI]] and PCB ([[Printed circuit board]]) layout problems but they have also been adapted for graph drawing. They typically involve a multiphase approach in which an input graph is planarized by replacing crossing points by vertices, a topological embedding of the planarized graph is found, edge orientations are chosen to minimize bends, vertices are placed consistently with these orientations, and finally a layout compaction stage reduces the area of the drawing."
      },
      "date": 1512129293544
    },
    {
      "type": "add",
      "id": "ae3d99de-63cc-4ed9-b9f5-2e4a9ad8c5a5",
      "after": "d27dabf5-6dca-4d71-a125-a0b04c662d35",
      "item": {
        "type": "factory",
        "id": "ae3d99de-63cc-4ed9-b9f5-2e4a9ad8c5a5"
      },
      "date": 1512129293545
    },
    {
      "type": "edit",
      "id": "ae3d99de-63cc-4ed9-b9f5-2e4a9ad8c5a5",
      "item": {
        "id": "ae3d99de-63cc-4ed9-b9f5-2e4a9ad8c5a5",
        "type": "paragraph",
        "text": "*Tree layout algorithms these show a rooted tree ([[tree structure]])-like formation, suitable for trees ([[tree (graph theory)]]). Often, in a technique called \"balloon layout\", the children of each node in the tree are drawn on a circle surrounding the node, with the radii of these circles diminishing at lower levels in the tree so that these circles do not overlap."
      },
      "date": 1512129293545
    },
    {
      "type": "add",
      "id": "55d548e9-67c6-4fdc-98ac-461250336e45",
      "after": "ae3d99de-63cc-4ed9-b9f5-2e4a9ad8c5a5",
      "item": {
        "type": "factory",
        "id": "55d548e9-67c6-4fdc-98ac-461250336e45"
      },
      "date": 1512129293549
    },
    {
      "type": "edit",
      "id": "55d548e9-67c6-4fdc-98ac-461250336e45",
      "item": {
        "id": "55d548e9-67c6-4fdc-98ac-461250336e45",
        "type": "paragraph",
        "text": "*[[Layered graph drawing]] methods (often called Sugiyama-style drawing) are best suited for [[directed acyclic graph]]s or graphs that are nearly acyclic, such as the graphs of dependencies between modules or functions in a software system. In these methods, the nodes of the graph are arranged into horizontal layers using methods such as the [[Coffmanâ€“Graham algorithm]], in such a way that most edges go downwards from one layer to the next; after this step, the nodes within each layer are arranged in order to minimize crossings."
      },
      "date": 1512129293549
    },
    {
      "type": "add",
      "id": "05b21bb4-b1c4-4450-80b1-3529ad044d9b",
      "after": "55d548e9-67c6-4fdc-98ac-461250336e45",
      "item": {
        "type": "factory",
        "id": "05b21bb4-b1c4-4450-80b1-3529ad044d9b"
      },
      "date": 1512129293852
    },
    {
      "type": "edit",
      "id": "05b21bb4-b1c4-4450-80b1-3529ad044d9b",
      "item": {
        "id": "05b21bb4-b1c4-4450-80b1-3529ad044d9b",
        "type": "html",
        "text": "<div style='padding: 12px; background:#eee; width:96%; align=centered;'>\n<a href='https://commons.wikimedia.org/wiki/File:Goldner-Harary-linear.svg' target='_blank'>\n<img style='display:block; margin:auto; width:100%;'\nsrc='https://upload.wikimedia.org/wikipedia/commons/8/8d/Goldner-Harary-linear.svg'>\n</a>\n\n<p class=caption>\nArc diagram\n- [https://commons.wikimedia.org/wiki/File:Goldner-Harary-linear.svg wikimedia.org]\n</p></div>"
      },
      "date": 1512129293852
    },
    {
      "type": "add",
      "id": "fb91732a-4b6b-4b08-a2d6-41eaf31e3a97",
      "after": "05b21bb4-b1c4-4450-80b1-3529ad044d9b",
      "item": {
        "type": "factory",
        "id": "fb91732a-4b6b-4b08-a2d6-41eaf31e3a97"
      },
      "date": 1512129293853
    },
    {
      "type": "edit",
      "id": "fb91732a-4b6b-4b08-a2d6-41eaf31e3a97",
      "item": {
        "id": "fb91732a-4b6b-4b08-a2d6-41eaf31e3a97",
        "type": "paragraph",
        "text": "*[[Arc diagram]]s, a layout style dating back to the 1960s, place vertices on a line; edges may be drawn as semicircles above or below the line, or as smooth curves linked together from multiple semicircles."
      },
      "date": 1512129293853
    },
    {
      "type": "add",
      "id": "dce02911-51f4-4148-bafc-db7f1cb98d13",
      "after": "fb91732a-4b6b-4b08-a2d6-41eaf31e3a97",
      "item": {
        "type": "factory",
        "id": "dce02911-51f4-4148-bafc-db7f1cb98d13"
      },
      "date": 1512129293854
    },
    {
      "type": "edit",
      "id": "dce02911-51f4-4148-bafc-db7f1cb98d13",
      "item": {
        "id": "dce02911-51f4-4148-bafc-db7f1cb98d13",
        "type": "paragraph",
        "text": "*[[Circular layout]] methods place the vertices of the graph on a circle, choosing carefully the ordering of the vertices around the circle to reduce crossings and place adjacent vertices close to each other. Edges may be drawn either as chords of the circle or as arcs inside or outside of the circle. In some cases, multiple circles may be used."
      },
      "date": 1512129293854
    },
    {
      "type": "add",
      "id": "aa2f649b-a58f-4611-94a2-21fe93699dc7",
      "after": "dce02911-51f4-4148-bafc-db7f1cb98d13",
      "item": {
        "type": "factory",
        "id": "aa2f649b-a58f-4611-94a2-21fe93699dc7"
      },
      "date": 1512129293855
    },
    {
      "type": "edit",
      "id": "aa2f649b-a58f-4611-94a2-21fe93699dc7",
      "item": {
        "id": "aa2f649b-a58f-4611-94a2-21fe93699dc7",
        "type": "paragraph",
        "text": "*[[Dominance drawing]] places vertices in such a way that one vertex is upwards, rightwards, or both of another if and only if it is reachable ([[reachability]]) from the other vertex. In this way, the layout style makes the reachability relation of the graph visually apparent."
      },
      "date": 1512129293855
    },
    {
      "order": [
        "fd2215fb-ecc8-4f58-afa2-fb15f06776bd",
        "65e0a1b8-17e4-4e31-98e8-1557adf9899d",
        "7a7b9c43-682f-4ff6-a5e3-2ce480a22ed5",
        "d27dabf5-6dca-4d71-a125-a0b04c662d35",
        "ae3d99de-63cc-4ed9-b9f5-2e4a9ad8c5a5",
        "55d548e9-67c6-4fdc-98ac-461250336e45",
        "05b21bb4-b1c4-4450-80b1-3529ad044d9b",
        "fb91732a-4b6b-4b08-a2d6-41eaf31e3a97",
        "dce02911-51f4-4148-bafc-db7f1cb98d13",
        "aa2f649b-a58f-4611-94a2-21fe93699dc7"
      ],
      "id": "pID",
      "type": "move",
      "date": 1512129293856
    },
    {
      "type": "fork",
      "date": 1512129297301
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "fd2215fb-ecc8-4f58-afa2-fb15f06776bd",
      "text": "*In [[force-based layout]] systems, the graph drawing software modifies an initial vertex placement by continuously moving the vertices according to a system of forces based on physical metaphors related to systems of springs ([[spring (device)]]) or [[molecular mechanics]]. Typically, these systems combine attractive forces between adjacent vertices with repulsive forces between all pairs of vertices, in order to seek a layout in which edge lengths are small while vertices are well-separated. These systems may perform  [[gradient descent]] based minimization of an [[energy function]], or they may translate the forces directly into velocities or accelerations for the moving vertices."
    },
    {
      "type": "html",
      "id": "65e0a1b8-17e4-4e31-98e8-1557adf9899d",
      "text": "<div style='padding: 12px; background:#eee; width:96%; align=centered;'>\n<a href='https://commons.wikimedia.org/wiki/File:Social_Network_Analysis_Visualization.png' target='_blank'>\n<img style='display:block; margin:auto; width:100%;'\nsrc='https://upload.wikimedia.org/wikipedia/commons/9/9b/Social_Network_Analysis_Visualization.png'>\n</a>\n\n<p class=caption>\nA force-based network visualization.]]There are many different graph layout strategie\n- [https://commons.wikimedia.org/wiki/File:Social_Network_Analysis_Visualization.png wikimedia.org]\n</p></div>"
    },
    {
      "type": "paragraph",
      "id": "7a7b9c43-682f-4ff6-a5e3-2ce480a22ed5",
      "text": "*[[Spectral layout]] methods use as coordinates the [[eigenvector]]s of a matrix ([[Matrix (mathematics)]]) such as the Laplacian ([[Discrete Laplace operator]]) derived from the [[adjacency matrix]] of the graph."
    },
    {
      "type": "paragraph",
      "id": "d27dabf5-6dca-4d71-a125-a0b04c662d35",
      "text": "*Orthogonal layout methods, which allow the edges of the graph to run horizontally or vertically, parallel to the coordinate axes of the layout. These methods were originally designed for [[VLSI]] and PCB ([[Printed circuit board]]) layout problems but they have also been adapted for graph drawing. They typically involve a multiphase approach in which an input graph is planarized by replacing crossing points by vertices, a topological embedding of the planarized graph is found, edge orientations are chosen to minimize bends, vertices are placed consistently with these orientations, and finally a layout compaction stage reduces the area of the drawing."
    },
    {
      "type": "paragraph",
      "id": "ae3d99de-63cc-4ed9-b9f5-2e4a9ad8c5a5",
      "text": "*Tree layout algorithms these show a rooted tree ([[tree structure]])-like formation, suitable for trees ([[tree (graph theory)]]). Often, in a technique called \"balloon layout\", the children of each node in the tree are drawn on a circle surrounding the node, with the radii of these circles diminishing at lower levels in the tree so that these circles do not overlap."
    },
    {
      "type": "paragraph",
      "id": "55d548e9-67c6-4fdc-98ac-461250336e45",
      "text": "*[[Layered graph drawing]] methods (often called Sugiyama-style drawing) are best suited for [[directed acyclic graph]]s or graphs that are nearly acyclic, such as the graphs of dependencies between modules or functions in a software system. In these methods, the nodes of the graph are arranged into horizontal layers using methods such as the [[Coffmanâ€“Graham algorithm]], in such a way that most edges go downwards from one layer to the next; after this step, the nodes within each layer are arranged in order to minimize crossings."
    },
    {
      "type": "html",
      "id": "05b21bb4-b1c4-4450-80b1-3529ad044d9b",
      "text": "<div style='padding: 12px; background:#eee; width:96%; align=centered;'>\n<a href='https://commons.wikimedia.org/wiki/File:Goldner-Harary-linear.svg' target='_blank'>\n<img style='display:block; margin:auto; width:100%;'\nsrc='https://upload.wikimedia.org/wikipedia/commons/8/8d/Goldner-Harary-linear.svg'>\n</a>\n\n<p class=caption>\nArc diagram\n- [https://commons.wikimedia.org/wiki/File:Goldner-Harary-linear.svg wikimedia.org]\n</p></div>"
    },
    {
      "type": "paragraph",
      "id": "fb91732a-4b6b-4b08-a2d6-41eaf31e3a97",
      "text": "*[[Arc diagram]]s, a layout style dating back to the 1960s, place vertices on a line; edges may be drawn as semicircles above or below the line, or as smooth curves linked together from multiple semicircles."
    },
    {
      "type": "paragraph",
      "id": "dce02911-51f4-4148-bafc-db7f1cb98d13",
      "text": "*[[Circular layout]] methods place the vertices of the graph on a circle, choosing carefully the ordering of the vertices around the circle to reduce crossings and place adjacent vertices close to each other. Edges may be drawn either as chords of the circle or as arcs inside or outside of the circle. In some cases, multiple circles may be used."
    },
    {
      "type": "paragraph",
      "id": "aa2f649b-a58f-4611-94a2-21fe93699dc7",
      "text": "*[[Dominance drawing]] places vertices in such a way that one vertex is upwards, rightwards, or both of another if and only if it is reachable ([[reachability]]) from the other vertex. In this way, the layout style makes the reachability relation of the graph visually apparent."
    }
  ]
}