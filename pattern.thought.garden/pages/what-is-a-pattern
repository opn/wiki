{
  "title": "What is a pattern?",
  "journal": [
    {
      "date": 1507111948679,
      "type": "create",
      "item": {
        "story": "",
        "title": "pageTitle"
      }
    },
    {
      "type": "add",
      "id": "b608db19-f378-46f5-832f-9879f9fa0730",
      "item": {
        "type": "factory",
        "id": "b608db19-f378-46f5-832f-9879f9fa0730"
      },
      "date": 1507111948682
    },
    {
      "type": "edit",
      "id": "b608db19-f378-46f5-832f-9879f9fa0730",
      "item": {
        "id": "b608db19-f378-46f5-832f-9879f9fa0730",
        "type": "paragraph",
        "text": "See also [[Design pattern]]"
      },
      "date": 1507111948682
    },
    {
      "type": "add",
      "id": "ff3d840d-0692-4302-bc53-46d9c1d09669",
      "after": "b608db19-f378-46f5-832f-9879f9fa0730",
      "item": {
        "type": "factory",
        "id": "ff3d840d-0692-4302-bc53-46d9c1d09669"
      },
      "date": 1507111948682
    },
    {
      "type": "edit",
      "id": "ff3d840d-0692-4302-bc53-46d9c1d09669",
      "item": {
        "id": "ff3d840d-0692-4302-bc53-46d9c1d09669",
        "type": "paragraph",
        "text": "When a designer designs something – whether a house, computer program, or lamp – they must make many decisions about how to solve problems. A single problem is documented with its typical place (the [[syntax]]), and use (the [[grammar]]) with the most common and recognized good solution seen in the wild, like the examples seen in dictionaries ([[dictionary]]). Each such entry is a single [[design pattern]]. Each pattern has a name, a descriptive entry, and some cross-references, much like a dictionary entry. A documented pattern should explain why that solution is good in the pattern's contexts."
      },
      "date": 1507111948682
    },
    {
      "type": "add",
      "id": "89f03e65-3ca7-48f7-b3f1-0b7022a4fc10",
      "after": "ff3d840d-0692-4302-bc53-46d9c1d09669",
      "item": {
        "type": "factory",
        "id": "89f03e65-3ca7-48f7-b3f1-0b7022a4fc10"
      },
      "date": 1507111948683
    },
    {
      "type": "edit",
      "id": "89f03e65-3ca7-48f7-b3f1-0b7022a4fc10",
      "item": {
        "id": "89f03e65-3ca7-48f7-b3f1-0b7022a4fc10",
        "type": "paragraph",
        "text": "Elemental or universal ''patterns'' such as \"door\" or \"partnership\" are versatile ideals of design, either as found in experience or for use as components in practice, explicitly described as holistic resolutions of the forces in recurrent contexts and circumstances, whether in architecture, medicine, software development or governance, etc. Patterns might be invented or found and studied, such as the naturally occurring patterns of design that characterize human environments."
      },
      "date": 1507111948683
    },
    {
      "type": "add",
      "id": "5d2f6625-5bc7-4005-bdef-270e5bbeac77",
      "after": "89f03e65-3ca7-48f7-b3f1-0b7022a4fc10",
      "item": {
        "type": "factory",
        "id": "5d2f6625-5bc7-4005-bdef-270e5bbeac77"
      },
      "date": 1507111948684
    },
    {
      "type": "edit",
      "id": "5d2f6625-5bc7-4005-bdef-270e5bbeac77",
      "item": {
        "id": "5d2f6625-5bc7-4005-bdef-270e5bbeac77",
        "type": "paragraph",
        "text": "Like all languages, a pattern language has [[vocabulary]], [[syntax]], and [[grammar]] – but a pattern language applies to some complex activity other than communication. In pattern languages for design, the parts break down in this way:"
      },
      "date": 1507111948684
    },
    {
      "type": "add",
      "id": "b96f57c5-7a83-4a54-81f3-e7a0e8fc46ec",
      "after": "5d2f6625-5bc7-4005-bdef-270e5bbeac77",
      "item": {
        "type": "factory",
        "id": "b96f57c5-7a83-4a54-81f3-e7a0e8fc46ec"
      },
      "date": 1507111948684
    },
    {
      "type": "edit",
      "id": "b96f57c5-7a83-4a54-81f3-e7a0e8fc46ec",
      "item": {
        "id": "b96f57c5-7a83-4a54-81f3-e7a0e8fc46ec",
        "type": "markdown",
        "text": "* The language description – the ''vocabulary'' – is a collection of named, described solutions to problems in a field of interest. These are called ''design patterns''. So, for example, the language for architecture describes items like: settlements, buildings, rooms, windows, latches, etc.\n* Each solution includes ''syntax'', a description that shows where the solution fits in a larger, more comprehensive or more abstract design. This automatically links the solution into a web of other needed solutions. For example, rooms have ways to get light, and ways to get people in and out.\n* The solution includes ''grammar'' that describes how the solution solves a problem or produces a benefit. So, if the benefit is unneeded, the solution is not used. Perhaps that part of the design can be left empty to save money or other resources; if people do not need to wait to enter a room, a simple doorway can replace a waiting room.\n* In the language description, grammar and syntax cross index (often with a literal alphabetic index of pattern names) to other named solutions, so the designer can quickly think from one solution to related, needed solutions, and document them in a logical way. In Christopher Alexander's book ''A Pattern Language'', the patterns are in decreasing order by size, with a separate alphabetic index.\n* The web of relationships in the index of the language provides many paths through the design process."
      },
      "date": 1507111948684
    },
    {
      "type": "add",
      "id": "9a97b04c-ac6e-4ca6-9370-3aca3db00810",
      "after": "b96f57c5-7a83-4a54-81f3-e7a0e8fc46ec",
      "item": {
        "type": "factory",
        "id": "9a97b04c-ac6e-4ca6-9370-3aca3db00810"
      },
      "date": 1507111948685
    },
    {
      "type": "edit",
      "id": "9a97b04c-ac6e-4ca6-9370-3aca3db00810",
      "item": {
        "id": "9a97b04c-ac6e-4ca6-9370-3aca3db00810",
        "type": "paragraph",
        "text": "This simplifies the design work because designers can start the process from any part of the problem they understand and work toward the unknown parts. At the same time, if the pattern language has worked well for many projects, there is reason to believe that even a designer who does not completely understand the design problem at first will complete the design process, and the result will be usable. For example, skiers coming inside must shed snow and store equipment. The messy snow and boot cleaners should stay outside. The equipment needs care, so the racks should be inside."
      },
      "date": 1507111948685
    },
    {
      "order": [
        "b608db19-f378-46f5-832f-9879f9fa0730",
        "ff3d840d-0692-4302-bc53-46d9c1d09669",
        "89f03e65-3ca7-48f7-b3f1-0b7022a4fc10",
        "5d2f6625-5bc7-4005-bdef-270e5bbeac77",
        "b96f57c5-7a83-4a54-81f3-e7a0e8fc46ec",
        "9a97b04c-ac6e-4ca6-9370-3aca3db00810"
      ],
      "id": "pID",
      "type": "move",
      "date": 1507111948685
    },
    {
      "type": "fork",
      "date": 1507111955220
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "b608db19-f378-46f5-832f-9879f9fa0730",
      "text": "See also [[Design pattern]]"
    },
    {
      "type": "paragraph",
      "id": "ff3d840d-0692-4302-bc53-46d9c1d09669",
      "text": "When a designer designs something – whether a house, computer program, or lamp – they must make many decisions about how to solve problems. A single problem is documented with its typical place (the [[syntax]]), and use (the [[grammar]]) with the most common and recognized good solution seen in the wild, like the examples seen in dictionaries ([[dictionary]]). Each such entry is a single [[design pattern]]. Each pattern has a name, a descriptive entry, and some cross-references, much like a dictionary entry. A documented pattern should explain why that solution is good in the pattern's contexts."
    },
    {
      "type": "paragraph",
      "id": "89f03e65-3ca7-48f7-b3f1-0b7022a4fc10",
      "text": "Elemental or universal ''patterns'' such as \"door\" or \"partnership\" are versatile ideals of design, either as found in experience or for use as components in practice, explicitly described as holistic resolutions of the forces in recurrent contexts and circumstances, whether in architecture, medicine, software development or governance, etc. Patterns might be invented or found and studied, such as the naturally occurring patterns of design that characterize human environments."
    },
    {
      "type": "paragraph",
      "id": "5d2f6625-5bc7-4005-bdef-270e5bbeac77",
      "text": "Like all languages, a pattern language has [[vocabulary]], [[syntax]], and [[grammar]] – but a pattern language applies to some complex activity other than communication. In pattern languages for design, the parts break down in this way:"
    },
    {
      "type": "markdown",
      "id": "b96f57c5-7a83-4a54-81f3-e7a0e8fc46ec",
      "text": "* The language description – the ''vocabulary'' – is a collection of named, described solutions to problems in a field of interest. These are called ''design patterns''. So, for example, the language for architecture describes items like: settlements, buildings, rooms, windows, latches, etc.\n* Each solution includes ''syntax'', a description that shows where the solution fits in a larger, more comprehensive or more abstract design. This automatically links the solution into a web of other needed solutions. For example, rooms have ways to get light, and ways to get people in and out.\n* The solution includes ''grammar'' that describes how the solution solves a problem or produces a benefit. So, if the benefit is unneeded, the solution is not used. Perhaps that part of the design can be left empty to save money or other resources; if people do not need to wait to enter a room, a simple doorway can replace a waiting room.\n* In the language description, grammar and syntax cross index (often with a literal alphabetic index of pattern names) to other named solutions, so the designer can quickly think from one solution to related, needed solutions, and document them in a logical way. In Christopher Alexander's book ''A Pattern Language'', the patterns are in decreasing order by size, with a separate alphabetic index.\n* The web of relationships in the index of the language provides many paths through the design process."
    },
    {
      "type": "paragraph",
      "id": "9a97b04c-ac6e-4ca6-9370-3aca3db00810",
      "text": "This simplifies the design work because designers can start the process from any part of the problem they understand and work toward the unknown parts. At the same time, if the pattern language has worked well for many projects, there is reason to believe that even a designer who does not completely understand the design problem at first will complete the design process, and the result will be usable. For example, skiers coming inside must shed snow and store equipment. The messy snow and boot cleaners should stay outside. The equipment needs care, so the racks should be inside."
    }
  ]
}