{
  "title": "MediaStream Processing API",
  "story": [
    {
      "type": "paragraph",
      "id": "41180c974790ef08",
      "text": "A number of existing or proposed features for the Web platform deal with continuous real-time media:\n\n"
    },
    {
      "type": "markdown",
      "id": "a468843b300e708a",
      "text": "# HTML media elements\n\n- **Synchronization** of multiple HTML media elements\n- **Capture and recording** of local audio and video input\n- **Peer-to-peer streaming** of audio and video streams\n- **Advanced audio APIs** that allow complex mixing and effects processing"
    },
    {
      "type": "markdown",
      "id": "efceac0f6bbe98e8",
      "text": "# See also\n\n- Getting started with Web Audio Api - [https://www.html5rocks.com/en/tutorials/webaudio/intro/ html5rocks.com]\n- [https://www.w3.org/TR/webaudio/ w3.org]\n- [https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API developer.mozilla.org]\n- [[MediaStream Processing API]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "MediaStream Processing API",
        "story": []
      },
      "date": 1501838620921
    },
    {
      "item": {
        "type": "factory",
        "id": "41180c974790ef08"
      },
      "id": "41180c974790ef08",
      "type": "add",
      "date": 1501838621964
    },
    {
      "type": "edit",
      "id": "41180c974790ef08",
      "item": {
        "type": "paragraph",
        "id": "41180c974790ef08",
        "text": "A number of existing or proposed features for the Web platform deal with continuous real-time media:\n\nHTML media elements\nSynchronization of multiple HTML media elements (e.g. proposed HTML MediaController)\nCapture and recording of local audio and video input (e.g. proposed HTML Streams)\nPeer-to-peer streaming of audio and video streams (e.g. proposed WebRTC and HTML Streams)\nAdvanced audio APIs that allow complex mixing and effects processing (e.g. Mozilla's AudioData, Chrome's AudioNode)"
      },
      "date": 1501838624332
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "efceac0f6bbe98e8",
        "text": "# See also\n\n- Getting started with Web Audio Api - [https://www.html5rocks.com/en/tutorials/webaudio/intro/ html5rocks.com]\n- [https://www.w3.org/TR/webaudio/ w3.org]\n- [https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API developer.mozilla.org]\n- [[MediaStream Processing API]]"
      },
      "after": "41180c974790ef08",
      "id": "efceac0f6bbe98e8",
      "date": 1501838629723
    },
    {
      "type": "fork",
      "site": "david.feast.fm",
      "date": 1501838829424
    },
    {
      "type": "edit",
      "id": "41180c974790ef08",
      "item": {
        "type": "paragraph",
        "id": "41180c974790ef08",
        "text": "A number of existing or proposed features for the Web platform deal with continuous real-time media:\n\n"
      },
      "date": 1501838866517
    },
    {
      "type": "add",
      "id": "a468843b300e708a",
      "item": {
        "type": "paragraph",
        "id": "a468843b300e708a",
        "text": "# HTML media elements\nSynchronization of multiple HTML media elements (e.g. proposed HTML MediaController)\nCapture and recording of local audio and video input (e.g. proposed HTML Streams)\nPeer-to-peer streaming of audio and video streams (e.g. proposed WebRTC and HTML Streams)\nAdvanced audio APIs that allow complex mixing and effects processing (e.g. Mozilla's AudioData, Chrome's AudioNode)"
      },
      "after": "41180c974790ef08",
      "date": 1501838868154
    },
    {
      "type": "edit",
      "id": "a468843b300e708a",
      "item": {
        "type": "markdown",
        "id": "a468843b300e708a",
        "text": "# HTML media elements\nSynchronization of multiple HTML media elements (e.g. proposed HTML MediaController)\nCapture and recording of local audio and video input (e.g. proposed HTML Streams)\nPeer-to-peer streaming of audio and video streams (e.g. proposed WebRTC and HTML Streams)\nAdvanced audio APIs that allow complex mixing and effects processing (e.g. Mozilla's AudioData, Chrome's AudioNode)"
      },
      "date": 1501838869072
    },
    {
      "type": "edit",
      "id": "a468843b300e708a",
      "item": {
        "type": "markdown",
        "id": "a468843b300e708a",
        "text": "# HTML media elements\n\n- **Synchronization** of multiple HTML media elements (e.g. proposed HTML MediaController)\n- **Capture and recording** of local audio and video input (e.g. proposed HTML Streams)\n- **Peer-to-peer streaming** of audio and video streams (e.g. proposed WebRTC and HTML Streams)\n- **Advanced audio APIs** that allow complex mixing and effects processing (e.g. Mozilla's AudioData, Chrome's AudioNode)"
      },
      "date": 1501838920813
    },
    {
      "type": "edit",
      "id": "a468843b300e708a",
      "item": {
        "type": "markdown",
        "id": "a468843b300e708a",
        "text": "# HTML media elements\n\n- **Synchronization** of multiple HTML media elements\n- **Capture and recording** of local audio and video input\n- **Peer-to-peer streaming** of audio and video streams\n- **Advanced audio APIs** that allow complex mixing and effects processing"
      },
      "date": 1501838949885
    },
    {
      "type": "fork",
      "site": "api.c0de.academy",
      "date": 1501838970206
    },
    {
      "type": "fork",
      "site": "david.feast.fm",
      "date": 1501838986207
    }
  ]
}