{
  "title": "Daedalus (now Bloom)",
  "story": [
    {
      "type": "paragraph",
      "id": "b067abc7b73edeb2",
      "text": "Bloom is a programming language for the cloud and other distributed computing systems. BOOM is the research project at UC Berkeley that is developing Bloom, as part of a larger agenda to make it easy to build distributed software systems.\n"
    },
    {
      "type": "markdown",
      "id": "54f4f174ed2c9908",
      "text": "# What is Bud?\nBud is the first prototype implementation of Bloom. It integrates Bloom into Ruby as a Domain-Specific Language for distributed systems. By embedding in Ruby, Bud programmers get the new advantages of the Bloom language alongside the benefits of years of software investment in Ruby libraries (gems) and tools."
    },
    {
      "type": "video",
      "id": "ecf914d5252e5fb1",
      "text": "YOUTUBE R2Aa4PivG0g\nSuper cool video about [[Daedalus (now Bloom)]] - see [[About Time]] and [[Self-reference and Negation]]"
    },
    {
      "type": "markdown",
      "id": "4adc8ba9b828dcfc",
      "text": "# Notes"
    },
    {
      "type": "paragraph",
      "id": "202250b7c59edcf3",
      "text": "writers vs users straddling abstraction boundary\n\n"
    },
    {
      "type": "paragraph",
      "id": "23f45b190d9657c2",
      "text": "model-theoretic semantics for distributed systems? resilient to failure and tolerant of loose ordering.\n\n"
    },
    {
      "type": "paragraph",
      "id": "22793c81f3336e93",
      "text": "given what I know, what follows transitively\n\n"
    },
    {
      "type": "paragraph",
      "id": "6c315345363e41f0",
      "text": "least-fixed-point\n\n"
    },
    {
      "type": "paragraph",
      "id": "2176d97d01c18be1",
      "text": "web server is join of db with req stream\n\n"
    },
    {
      "type": "paragraph",
      "id": "f43f14b94bd8df65",
      "text": "lineage and derivation => debugging\n\n"
    },
    {
      "type": "paragraph",
      "id": "21fd4ff9673d75e0",
      "text": "self reference and negation required for paradoxes ... this sentence is false.\n\n"
    },
    {
      "type": "paragraph",
      "id": "ab0663bbc5551f07",
      "text": "distributed requires: time varying state, non-determinism.\nbad: x=x+1, snd(); rec()\n\n"
    },
    {
      "type": "paragraph",
      "id": "95c5384be9473a8f",
      "text": "reify time, a relativist model\n\n"
    },
    {
      "type": "paragraph",
      "id": "65ffab8f294f21ce",
      "text": "knowledge is local and ephemeral, computation is rendezvous\n\n"
    },
    {
      "type": "paragraph",
      "id": "952c1251a0b00077",
      "text": "deductive = instantaneous, \ninductive = deferred, \nasync = uncertain (arbitrary, nondeterministic)\n\n"
    },
    {
      "type": "paragraph",
      "id": "1fe124d5ff3426be",
      "text": "state is induction in time: rendezvous\n\n"
    },
    {
      "type": "paragraph",
      "id": "44f1713264b5c382",
      "text": "CALM theorem \n\n"
    },
    {
      "type": "paragraph",
      "id": "514f917a1786d81e",
      "text": "dedalus => bloom, blazes, lineage-driven fault injection, eve\n\n"
    },
    {
      "type": "paragraph",
      "id": "e3193d50ebacdda3",
      "text": "committing acts of abstraction: abstractions leak, deal with it"
    },
    {
      "type": "markdown",
      "id": "0fe9fc69897a9ffe",
      "text": "# See also"
    },
    {
      "type": "reference",
      "id": "e4d10f64407ddd6b",
      "site": "future.fedwiki.org",
      "slug": "about-time",
      "title": "About Time",
      "text": "Time and therefore change which leads to uncertainty are not built into our programming languages. Indeed nor is it built into much of our philosophy, or common sense modes of thinking.  What would a language look like that builds in the idea of time?"
    },
    {
      "type": "reference",
      "id": "048f66d4e5729839",
      "site": "future.fedwiki.org",
      "slug": "tau-chain",
      "title": "Tau Chain",
      "text": "Ï„-chain (pronounced tau-chain) is a decentralized peer-to-peer network having three unified faces: Rules, Proofs, and Computer Programs, allowing a generalization of virtually any centralized or decentralized P2P network, together with many new abilities, as we present on this note - [http://tauchain.org/tauchain.pdf pdf]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Daedalus (now Bloom)",
        "story": []
      },
      "date": 1475587438375
    },
    {
      "item": {
        "type": "factory",
        "id": "b067abc7b73edeb2"
      },
      "id": "b067abc7b73edeb2",
      "type": "add",
      "date": 1475587439629
    },
    {
      "type": "add",
      "item": {
        "type": "video",
        "id": "ecf914d5252e5fb1",
        "text": "YOUTUBE R2Aa4PivG0g\nSuper cool video about [[Daedalus (now Bloom)]] - see [[About Time]] and [[Self-reference and Negation]]"
      },
      "after": "b067abc7b73edeb2",
      "id": "ecf914d5252e5fb1",
      "date": 1475587443351
    },
    {
      "type": "edit",
      "id": "b067abc7b73edeb2",
      "item": {
        "type": "paragraph",
        "id": "b067abc7b73edeb2",
        "text": "Bloom is a programming language for the cloud and other distributed computing systems. BOOM is the research project at UC Berkeley that is developing Bloom, as part of a larger agenda to make it easy to build distributed software systems.\n"
      },
      "date": 1475587574685
    },
    {
      "type": "add",
      "id": "54f4f174ed2c9908",
      "item": {
        "type": "markdown",
        "id": "54f4f174ed2c9908",
        "text": "# What is Bud?\nBud is the first prototype implementation of Bloom. It integrates Bloom into Ruby as a Domain-Specific Language for distributed systems. By embedding in Ruby, Bud programmers get the new advantages of the Bloom language alongside the benefits of years of software investment in Ruby libraries (gems) and tools."
      },
      "after": "b067abc7b73edeb2",
      "date": 1475587579268
    },
    {
      "type": "edit",
      "id": "54f4f174ed2c9908",
      "item": {
        "type": "markdown",
        "id": "54f4f174ed2c9908",
        "text": "# What is Bud?\nBud is the first prototype implementation of Bloom. It integrates Bloom into Ruby as a Domain-Specific Language for distributed systems. By embedding in Ruby, Bud programmers get the new advantages of the Bloom language alongside the benefits of years of software investment in Ruby libraries (gems) and tools."
      },
      "date": 1475587580268
    },
    {
      "item": {
        "type": "markdown",
        "id": "4adc8ba9b828dcfc",
        "text": "# Notes"
      },
      "id": "4adc8ba9b828dcfc",
      "type": "add",
      "after": "ecf914d5252e5fb1",
      "date": 1475587599116
    },
    {
      "type": "edit",
      "id": "4adc8ba9b828dcfc",
      "item": {
        "type": "markdown",
        "id": "4adc8ba9b828dcfc",
        "text": "# Notes"
      },
      "date": 1475587606180
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "202250b7c59edcf3",
        "text": "writers vs users straddling abstraction boundary\n\n"
      },
      "after": "4adc8ba9b828dcfc",
      "id": "202250b7c59edcf3",
      "date": 1475587614929
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "23f45b190d9657c2",
        "text": "model-theoretic semantics for distributed systems? resilient to failure and tolerant of loose ordering.\n\n"
      },
      "after": "202250b7c59edcf3",
      "id": "23f45b190d9657c2",
      "date": 1475587617945
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "22793c81f3336e93",
        "text": "given what I know, what follows transitively\n\n"
      },
      "after": "23f45b190d9657c2",
      "id": "22793c81f3336e93",
      "date": 1475587620677
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "6c315345363e41f0",
        "text": "least-fixed-point\n\n"
      },
      "after": "22793c81f3336e93",
      "id": "6c315345363e41f0",
      "date": 1475587623609
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2176d97d01c18be1",
        "text": "web server is join of db with req stream\n\n"
      },
      "after": "6c315345363e41f0",
      "id": "2176d97d01c18be1",
      "date": 1475587626417
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f43f14b94bd8df65",
        "text": "lineage and derivation => debugging\n\n"
      },
      "after": "2176d97d01c18be1",
      "id": "f43f14b94bd8df65",
      "date": 1475587629059
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "21fd4ff9673d75e0",
        "text": "self reference and negation required for paradoxes ... this sentence is false.\n\n"
      },
      "after": "f43f14b94bd8df65",
      "id": "21fd4ff9673d75e0",
      "date": 1475587631970
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ab0663bbc5551f07",
        "text": "distributed requires: time varying state, non-determinism.\nbad: x=x+1, snd(); rec()\n\n"
      },
      "after": "21fd4ff9673d75e0",
      "id": "ab0663bbc5551f07",
      "date": 1475587634493
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "95c5384be9473a8f",
        "text": "reify time, a relativist model\n\n"
      },
      "after": "ab0663bbc5551f07",
      "id": "95c5384be9473a8f",
      "date": 1475587637011
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "65ffab8f294f21ce",
        "text": "knowledge is local and ephemeral, computation is rendezvous\n\n"
      },
      "after": "95c5384be9473a8f",
      "id": "65ffab8f294f21ce",
      "date": 1475587639703
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "952c1251a0b00077",
        "text": "deductive = instantaneous, \ninductive = deferred, \nasync = uncertain (arbitrary, nondeterministic)\n\n"
      },
      "after": "65ffab8f294f21ce",
      "id": "952c1251a0b00077",
      "date": 1475587642614
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1fe124d5ff3426be",
        "text": "state is induction in time: rendezvous\n\n"
      },
      "after": "952c1251a0b00077",
      "id": "1fe124d5ff3426be",
      "date": 1475587645977
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "44f1713264b5c382",
        "text": "CALM theorem \n\n"
      },
      "after": "1fe124d5ff3426be",
      "id": "44f1713264b5c382",
      "date": 1475587650060
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "514f917a1786d81e",
        "text": "dedalus => bloom, blazes, lineage-driven fault injection, eve\n\n"
      },
      "after": "44f1713264b5c382",
      "id": "514f917a1786d81e",
      "date": 1475587654579
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e3193d50ebacdda3",
        "text": "committing acts of abstraction: abstractions leak, deal with it"
      },
      "after": "44f1713264b5c382",
      "id": "e3193d50ebacdda3",
      "date": 1475587658769
    },
    {
      "type": "move",
      "order": [
        "b067abc7b73edeb2",
        "54f4f174ed2c9908",
        "ecf914d5252e5fb1",
        "4adc8ba9b828dcfc",
        "202250b7c59edcf3",
        "23f45b190d9657c2",
        "22793c81f3336e93",
        "6c315345363e41f0",
        "2176d97d01c18be1",
        "f43f14b94bd8df65",
        "21fd4ff9673d75e0",
        "ab0663bbc5551f07",
        "95c5384be9473a8f",
        "65ffab8f294f21ce",
        "952c1251a0b00077",
        "1fe124d5ff3426be",
        "44f1713264b5c382",
        "514f917a1786d81e",
        "e3193d50ebacdda3"
      ],
      "id": "e3193d50ebacdda3",
      "date": 1475587665445
    },
    {
      "type": "fork",
      "date": 1475587696920
    },
    {
      "item": {
        "type": "factory",
        "id": "ce72c89fd5f1bd7b"
      },
      "id": "ce72c89fd5f1bd7b",
      "type": "add",
      "after": "e3193d50ebacdda3",
      "date": 1475587698896
    },
    {
      "type": "move",
      "order": [
        "b067abc7b73edeb2",
        "ce72c89fd5f1bd7b",
        "54f4f174ed2c9908",
        "ecf914d5252e5fb1",
        "4adc8ba9b828dcfc",
        "202250b7c59edcf3",
        "23f45b190d9657c2",
        "22793c81f3336e93",
        "6c315345363e41f0",
        "2176d97d01c18be1",
        "f43f14b94bd8df65",
        "21fd4ff9673d75e0",
        "ab0663bbc5551f07",
        "95c5384be9473a8f",
        "65ffab8f294f21ce",
        "952c1251a0b00077",
        "1fe124d5ff3426be",
        "44f1713264b5c382",
        "514f917a1786d81e",
        "e3193d50ebacdda3"
      ],
      "id": "ce72c89fd5f1bd7b",
      "date": 1475587702703
    },
    {
      "type": "edit",
      "id": "ce72c89fd5f1bd7b",
      "item": {
        "type": "reference",
        "id": "ce72c89fd5f1bd7b",
        "site": "future.fedwiki.org",
        "slug": "daedalus-now-bloom",
        "title": "Daedalus (now Bloom)",
        "text": "Bloom is a programming language for the cloud and other distributed computing systems. BOOM is the research project at UC Berkeley that is developing Bloom, as part of a larger agenda to make it easy to build distributed software systems.\n"
      },
      "date": 1475587705085
    },
    {
      "type": "remove",
      "id": "ce72c89fd5f1bd7b",
      "date": 1475587712085
    },
    {
      "item": {
        "type": "factory",
        "id": "0fe9fc69897a9ffe"
      },
      "id": "0fe9fc69897a9ffe",
      "type": "add",
      "after": "e3193d50ebacdda3",
      "date": 1475587969860
    },
    {
      "type": "edit",
      "id": "0fe9fc69897a9ffe",
      "item": {
        "type": "markdown",
        "id": "0fe9fc69897a9ffe",
        "text": "# See also"
      },
      "date": 1475587975998
    },
    {
      "item": {
        "type": "factory",
        "id": "e4d10f64407ddd6b"
      },
      "id": "e4d10f64407ddd6b",
      "type": "add",
      "after": "0fe9fc69897a9ffe",
      "date": 1475587979213
    },
    {
      "type": "edit",
      "id": "e4d10f64407ddd6b",
      "item": {
        "type": "reference",
        "id": "e4d10f64407ddd6b",
        "site": "future.fedwiki.org",
        "slug": "about-time",
        "title": "About Time",
        "text": "Time and therefore change which leads to uncertainty are not built into our programming languages. Indeed nor is it built into much of our philosophy, or common sense modes of thinking.  What would a language look like that builds in the idea of time?"
      },
      "date": 1475587981259
    },
    {
      "item": {
        "type": "factory",
        "id": "048f66d4e5729839"
      },
      "id": "048f66d4e5729839",
      "type": "add",
      "after": "e4d10f64407ddd6b",
      "date": 1475587982408
    },
    {
      "type": "edit",
      "id": "048f66d4e5729839",
      "item": {
        "type": "reference",
        "id": "048f66d4e5729839",
        "site": "future.fedwiki.org",
        "slug": "tau-chain",
        "title": "Tau Chain",
        "text": "Ï„-chain (pronounced tau-chain) is a decentralized peer-to-peer network having three unified faces: Rules, Proofs, and Computer Programs, allowing a generalization of virtually any centralized or decentralized P2P network, together with many new abilities, as we present on this note - [http://tauchain.org/tauchain.pdf pdf]"
      },
      "date": 1475587985268
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1475588240608
    }
  ]
}