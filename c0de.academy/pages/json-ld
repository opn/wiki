{
  "journal": [
    {
      "date": 1427495365570,
      "item": {
        "story": "",
        "title": "JSON-LD"
      },
      "type": "create"
    },
    {
      "date": 1427495367777,
      "id": "997868bec8b4d8d8",
      "item": {
        "id": "997868bec8b4d8d8",
        "type": "factory"
      },
      "type": "add"
    },
    {
      "date": 1427495377816,
      "id": "997868bec8b4d8d8",
      "item": {
        "id": "997868bec8b4d8d8",
        "text": "JSON-LD, or JavaScript Object Notation for Linked Data, is a method of transporting Linked Data using JSON. ",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "997868bec8b4d8d8",
      "date": 1427495386216,
      "id": "e8bab59821d1acb3",
      "item": {
        "id": "e8bab59821d1acb3",
        "text": "It was a goal to require as little effort as possible from developers to transform their existing JSON to JSON-LD.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "after": "e8bab59821d1acb3",
      "date": 1427495392696,
      "id": "e1eac678accd2a78",
      "item": {
        "id": "e1eac678accd2a78",
        "text": "This allows data to be serialized in a way that is similar to traditional JSON.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "after": "e1eac678accd2a78",
      "date": 1427495397164,
      "id": "f81787c27e1b5474",
      "item": {
        "id": "f81787c27e1b5474",
        "text": "It is a World Wide Web Consortium Recommendation that has been developed by the JSON for Linking Data Community Group before it has been transferred to the RDF Working Group for review, improvement, and standardization.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "after": "f81787c27e1b5474",
      "date": 1427495408016,
      "id": "1014e1459898950f",
      "item": {
        "id": "1014e1459898950f",
        "text": "JSON-LD is designed around the concept of a \"context\" to provide additional mappings from JSON to an RDF model. The context links object properties in a JSON document to concepts in an ontology.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "after": "1014e1459898950f",
      "date": 1427495414648,
      "id": "20e76e944e8b056f",
      "item": {
        "id": "20e76e944e8b056f",
        "text": "In order to map the JSON-LD syntax to RDF, JSON-LD allows values to be coerced to a specified type or to be tagged with a language.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "after": "20e76e944e8b056f",
      "date": 1427495415749,
      "id": "bba6d194e78f82f0",
      "item": {
        "id": "bba6d194e78f82f0",
        "text": "A context can be embedded directly in a JSON-LD document or put into a separate file and referenced from different documents (from traditional JSON documents via an HTTP Link header).",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427495436946,
      "id": "997868bec8b4d8d8",
      "item": {
        "id": "997868bec8b4d8d8",
        "text": "JSON-LD, or JavaScript Object Notation for Linked Data, is a method of transporting Linked Data using JSON - [https://en.wikipedia.org/wiki/JSON-LD]",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "date": 1427495445461,
      "id": "997868bec8b4d8d8",
      "item": {
        "id": "997868bec8b4d8d8",
        "text": "JSON-LD, or JavaScript Object Notation for Linked Data, is a method of transporting Linked Data using JSON - [https://en.wikipedia.org/wiki/JSON-LD wikipedia]",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "date": 1427495518993,
      "id": "e1eac678accd2a78",
      "type": "remove"
    },
    {
      "date": 1427495529901,
      "id": "e8bab59821d1acb3",
      "item": {
        "id": "e8bab59821d1acb3",
        "text": "JSON-LD is a lightweight Linked Data format. It is easy for humans to read and write. It is based on the already successful JSON format and provides a way to help JSON data interoperate at Web-scale. JSON-LD is an ideal data format for programming environments, REST Web services, and unstructured databases such as CouchDB and MongoDB. ",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "e8bab59821d1acb3",
      "date": 1427495532634,
      "id": "68816e4802c1121e",
      "item": {
        "id": "68816e4802c1121e",
        "text": "It was a goal to require as little effort as possible from developers to transform their existing JSON to JSON-LD. This allows data to be serialized in a way that is similar to traditional JSON.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427495569826,
      "id": "e8bab59821d1acb3",
      "item": {
        "id": "e8bab59821d1acb3",
        "text": "JSON-LD is a lightweight Linked Data format. It is easy for humans to read and write. It is based on the already successful [[JSON]] format and provides a way to help JSON data interoperate at Web-scale. JSON-LD is an ideal data format for programming environments, [[REST]] Web services, and unstructured databases such as [[CouchDB]] and [[MongoDB]]. ",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "date": 1427495579823,
      "id": "68816e4802c1121e",
      "item": {
        "id": "68816e4802c1121e",
        "text": "It was a goal to require as little effort as possible from developers to transform their existing [[JSON]] to JSON-LD. This allows data to be serialized in a way that is similar to traditional JSON.",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "bba6d194e78f82f0",
      "date": 1427495603015,
      "id": "15069c37ace83330",
      "item": {
        "id": "15069c37ace83330",
        "type": "factory"
      },
      "type": "add"
    },
    {
      "date": 1427495607066,
      "id": "15069c37ace83330",
      "item": {
        "id": "15069c37ace83330",
        "text": "{\n  \"@context\": {\n    \"name\": \"http://xmlns.com/foaf/0.1/name\",\n    \"homepage\": {\n      \"@id\": \"http://xmlns.com/foaf/0.1/workplaceHomepage\",\n      \"@type\": \"@id\"\n    },\n    \"Person\": \"http://xmlns.com/foaf/0.1/Person\"\n  },\n  \"@id\": \"http://me.markus-lanthaler.com\",\n  \"@type\": \"Person\",\n  \"name\": \"Markus Lanthaler\",\n  \"homepage\": \"http://www.tugraz.at/\"\n}\n",
        "type": "code"
      },
      "type": "edit"
    },
    {
      "date": 1427495612092,
      "id": "15069c37ace83330",
      "order": [
        "997868bec8b4d8d8",
        "e8bab59821d1acb3",
        "15069c37ace83330",
        "68816e4802c1121e",
        "f81787c27e1b5474",
        "1014e1459898950f",
        "20e76e944e8b056f",
        "bba6d194e78f82f0"
      ],
      "type": "move"
    },
    {
      "item": {
        "type": "factory",
        "id": "8f28a404c7cbf1d2"
      },
      "id": "8f28a404c7cbf1d2",
      "type": "add",
      "after": "bba6d194e78f82f0",
      "date": 1452622538282
    },
    {
      "type": "edit",
      "id": "8f28a404c7cbf1d2",
      "item": {
        "type": "paragraph",
        "id": "8f28a404c7cbf1d2",
        "text": "# JSON-LD Signature"
      },
      "date": 1452622552463
    },
    {
      "type": "edit",
      "id": "8f28a404c7cbf1d2",
      "item": {
        "type": "markdown",
        "id": "8f28a404c7cbf1d2",
        "text": "# JSON-LD Signature"
      },
      "date": 1452622554653
    },
    {
      "type": "add",
      "id": "3e57b3d68abb1846",
      "item": {
        "type": "paragraph",
        "id": "3e57b3d68abb1846",
        "text": "The following algorithm specifies how to create a digital signature that can be later used to verify the authenticity and integrity of a Linked Data Document. A Linked Data Document, document, a private key, and an identifier for the public/private key pair, creator, are required inputs. Anonce and a domain may also be optionally specified as inputs. A Signed Linked Data Document is produced as output. Whenever this algorithm must encode strings, it uses UTF-8 encoding."
      },
      "after": "8f28a404c7cbf1d2",
      "date": 1452622713452
    },
    {
      "type": "add",
      "id": "90144091b40629a3",
      "item": {
        "type": "paragraph",
        "id": "90144091b40629a3",
        "text": "* Create a copy of document, output.\n* Remove any signature nodes from the default graph in output.\n* Generate a normalized document by normalizing document according to the URDNA2015 [RDF-DATASET-NORMALIZATION] algorithm.\n* Generate an ISO8601 combined date and time string, created containing the current date and time, accurate to at least one second, in Universal Time Code format. For example: 2011-09-23T20:21:34Z. * Add an entry to headers with a key ofhttp://purl.org/dc/elements/1.1/created and a value of created.\n* Create a value tbs that represents the data to be signed, and set it to the result of running the Create * Verify Hash Algorithm.\n* Digitally sign tbs using the private key and the the RSASSA-PKCS1-v1_5 [PKCS1] algorithm and base-64 encode the resulting value. The resulting base-64 encoded string is the signatureValue.\n* Add a signature node to output containing a Linked Data Signature using creator, created, signatureValue, and if given, the nonce, anddomain.\n* Return output as the Signed Linked Data Document - [https://www.npmjs.com/package/jsonld-signatures npmjs.com]"
      },
      "after": "3e57b3d68abb1846",
      "date": 1452622715637
    },
    {
      "type": "edit",
      "id": "90144091b40629a3",
      "item": {
        "type": "markdown",
        "id": "90144091b40629a3",
        "text": "* Create a copy of document, output.\n* Remove any signature nodes from the default graph in output.\n* Generate a normalized document by normalizing document according to the URDNA2015 [RDF-DATASET-NORMALIZATION] algorithm.\n* Generate an ISO8601 combined date and time string, created containing the current date and time, accurate to at least one second, in Universal Time Code format. For example: 2011-09-23T20:21:34Z. * Add an entry to headers with a key ofhttp://purl.org/dc/elements/1.1/created and a value of created.\n* Create a value tbs that represents the data to be signed, and set it to the result of running the Create * Verify Hash Algorithm.\n* Digitally sign tbs using the private key and the the RSASSA-PKCS1-v1_5 [PKCS1] algorithm and base-64 encode the resulting value. The resulting base-64 encoded string is the signatureValue.\n* Add a signature node to output containing a Linked Data Signature using creator, created, signatureValue, and if given, the nonce, anddomain.\n* Return output as the Signed Linked Data Document - [https://www.npmjs.com/package/jsonld-signatures npmjs.com]"
      },
      "date": 1452622716774
    },
    {
      "type": "edit",
      "id": "90144091b40629a3",
      "item": {
        "type": "markdown",
        "id": "90144091b40629a3",
        "text": "* Create a copy of document, output.\n* Remove any signature nodes from the default graph in output.\n* Generate a normalized document by normalizing document according to the URDNA2015 [RDF-DATASET-NORMALIZATION] algorithm.\n* Generate an ISO8601 combined date and time string, created containing the current date and time, accurate to at least one second, in Universal Time Code format. For example: 2011-09-23T20:21:34Z. * Add an entry to headers with a key of http://purl.org/dc/elements/1.1/ created and a value of created.\n* Create a value tbs that represents the data to be signed, and set it to the result of running the Create * Verify Hash Algorithm.\n* Digitally sign tbs using the private key and the the RSASSA-PKCS1-v1_5 [PKCS1] algorithm and base-64 encode the resulting value. The resulting base-64 encoded string is the signatureValue.\n* Add a signature node to output containing a Linked Data Signature using creator, created, signatureValue, and if given, the nonce, anddomain.\n* Return output as the Signed Linked Data Document - [https://www.npmjs.com/package/jsonld-signatures npmjs.com]"
      },
      "date": 1452622773067
    },
    {
      "type": "edit",
      "id": "3e57b3d68abb1846",
      "item": {
        "type": "paragraph",
        "id": "3e57b3d68abb1846",
        "text": "The following algorithm specifies how to create a digital signature that can be later used to verify the authenticity and integrity of a Linked Data Document - [https://web-payments.org/specs/source/ld-signatures/ dfas]"
      },
      "date": 1452622811191
    },
    {
      "type": "add",
      "id": "91263174bb280d4c",
      "item": {
        "type": "paragraph",
        "id": "91263174bb280d4c",
        "text": "A Linked Data Document, document, a private key, and an identifier for the public/private key pair, creator, are required inputs. Anonce and a domain may also be optionally specified as inputs. A Signed Linked Data Document is produced as output. Whenever this algorithm must encode strings, it uses UTF-8 encoding."
      },
      "after": "3e57b3d68abb1846",
      "date": 1452622812884
    },
    {
      "type": "edit",
      "id": "3e57b3d68abb1846",
      "item": {
        "type": "paragraph",
        "id": "3e57b3d68abb1846",
        "text": "The following algorithm specifies how to create a digital signature that can be later used to verify the authenticity and integrity of a Linked Data Document - [https://web-payments.org/specs/source/ld-signatures/ web-payments.org]"
      },
      "date": 1452622820224
    },
    {
      "type": "edit",
      "id": "90144091b40629a3",
      "item": {
        "type": "markdown",
        "id": "90144091b40629a3",
        "text": "* Create a copy of document, output.\n* Remove any signature nodes from the default graph in output.\n* Generate a normalized document by normalizing document according to the URDNA2015 [RDF-Dataset-Normalization] algorithm.\n* Generate an ISO8601 combined date and time string, created containing the current date and time, accurate to at least one second, in Universal Time Code format. For example: 2011-09-23T20:21:34Z. * Add an entry to headers with a key of http://purl.org/dc/elements/1.1/ created and a value of created.\n* Create a value tbs that represents the data to be signed, and set it to the result of running the Create * Verify Hash Algorithm.\n* Digitally sign tbs using the private key and the the RSASSA-PKCS1-v1_5 [PKCS1] algorithm and base-64 encode the resulting value. The resulting base-64 encoded string is the signatureValue.\n* Add a signature node to output containing a Linked Data Signature using creator, created, signatureValue, and if given, the nonce, anddomain.\n* Return output as the Signed Linked Data Document - [https://www.npmjs.com/package/jsonld-signatures npmjs.com]"
      },
      "date": 1452622892324
    },
    {
      "type": "edit",
      "id": "90144091b40629a3",
      "item": {
        "type": "markdown",
        "id": "90144091b40629a3",
        "text": "* Create a copy of document, output.\n* Remove any signature nodes from the default graph in output.\n* Generate a normalized document by normalizing document according to the URDNA2015 [[RDF-Dataset-Normalization]] algorithm.\n* Generate an ISO8601 combined date and time string, created containing the current date and time, accurate to at least one second, in Universal Time Code format. For example: 2011-09-23T20:21:34Z. * Add an entry to headers with a key of http://purl.org/dc/elements/1.1/ created and a value of created.\n* Create a value tbs that represents the data to be signed, and set it to the result of running the Create * Verify Hash Algorithm.\n* Digitally sign tbs using the private key and the the RSASSA-PKCS1-v1_5 [PKCS1] algorithm and base-64 encode the resulting value. The resulting base-64 encoded string is the signatureValue.\n* Add a signature node to output containing a Linked Data Signature using creator, created, signatureValue, and if given, the nonce, anddomain.\n* Return output as the Signed Linked Data Document - [https://www.npmjs.com/package/jsonld-signatures npmjs.com]"
      },
      "date": 1452622905451
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "666bb75a5f8774e4",
        "text": "This specification adds authentication and integrity protection to Linked Data documents through the use of public/private key cryptography without sacrificing Linked Data features such as extensibility and composability - [https://web-payments.org/specs/source/ld-signatures/#bib-RDF-DATASET-NORMALIZATION web-payments.org]"
      },
      "after": "8f28a404c7cbf1d2",
      "id": "666bb75a5f8774e4",
      "date": 1452623219988
    },
    {
      "type": "edit",
      "id": "8f28a404c7cbf1d2",
      "item": {
        "type": "markdown",
        "id": "8f28a404c7cbf1d2",
        "text": "# [[JSON-LD Signature]]"
      },
      "date": 1452623397579
    },
    {
      "type": "remove",
      "id": "666bb75a5f8774e4",
      "date": 1452623408586
    },
    {
      "type": "remove",
      "id": "3e57b3d68abb1846",
      "date": 1452623411289
    },
    {
      "type": "remove",
      "id": "91263174bb280d4c",
      "date": 1452623413117
    },
    {
      "type": "remove",
      "id": "90144091b40629a3",
      "date": 1452623415143
    },
    {
      "item": {
        "type": "factory",
        "id": "f886ac00e21a4c64"
      },
      "id": "f886ac00e21a4c64",
      "type": "add",
      "after": "8f28a404c7cbf1d2",
      "date": 1452623418598
    },
    {
      "type": "edit",
      "id": "f886ac00e21a4c64",
      "item": {
        "type": "reference",
        "id": "f886ac00e21a4c64",
        "site": "c0de.academy",
        "slug": "json-ld-signature",
        "title": "JSON-LD Signature",
        "text": "This specification adds authentication and integrity protection to Linked Data documents through the use of public/private key cryptography without sacrificing Linked Data features such as extensibility and composability - [https://web-payments.org/specs/source/ld-signatures/#bib-RDF-DATASET-NORMALIZATION web-payments.org]"
      },
      "date": 1452623420579
    },
    {
      "type": "remove",
      "id": "8f28a404c7cbf1d2",
      "date": 1452623422819
    },
    {
      "item": {
        "type": "factory",
        "id": "23adfa5d28cdbafc"
      },
      "id": "23adfa5d28cdbafc",
      "type": "add",
      "after": "f886ac00e21a4c64",
      "date": 1457828423058
    },
    {
      "type": "edit",
      "id": "68816e4802c1121e",
      "item": {
        "id": "68816e4802c1121e",
        "text": "It was a goal to require as little effort as possible from developers to transform their existing [[JSON]] to JSON-LD. This allows data to be serialized in a way that is similar to traditional JSON - [https://www.w3.org/TR/json-ld/ w3.org]",
        "type": "paragraph"
      },
      "date": 1457828467101
    },
    {
      "type": "move",
      "order": [
        "997868bec8b4d8d8",
        "e8bab59821d1acb3",
        "15069c37ace83330",
        "68816e4802c1121e",
        "23adfa5d28cdbafc",
        "f81787c27e1b5474",
        "1014e1459898950f",
        "20e76e944e8b056f",
        "bba6d194e78f82f0",
        "f886ac00e21a4c64"
      ],
      "id": "23adfa5d28cdbafc",
      "date": 1457999971954
    },
    {
      "type": "edit",
      "id": "23adfa5d28cdbafc",
      "item": {
        "type": "paragraph",
        "id": "23adfa5d28cdbafc",
        "text": "# Embedding in HTML"
      },
      "date": 1457999986122
    },
    {
      "type": "add",
      "id": "53cc7361098538a5",
      "item": {
        "type": "paragraph",
        "id": "53cc7361098538a5",
        "text": "- [https://www.w3.org/TR/json-ld/#embedding-json-ld-in-html-documents w3.org]"
      },
      "after": "23adfa5d28cdbafc",
      "date": 1458000024019
    },
    {
      "type": "edit",
      "id": "23adfa5d28cdbafc",
      "item": {
        "type": "markdown",
        "id": "23adfa5d28cdbafc",
        "text": "# Embedding in HTML"
      },
      "date": 1458000026256
    },
    {
      "type": "add",
      "id": "8e9261bbc8544e58",
      "item": {
        "type": "paragraph",
        "id": "8e9261bbc8544e58",
        "text": "# About"
      },
      "after": "53cc7361098538a5",
      "date": 1458000035716
    },
    {
      "type": "edit",
      "id": "8e9261bbc8544e58",
      "item": {
        "type": "markdown",
        "id": "8e9261bbc8544e58",
        "text": "# About"
      },
      "date": 1458000036911
    },
    {
      "type": "edit",
      "id": "53cc7361098538a5",
      "item": {
        "type": "paragraph",
        "id": "53cc7361098538a5",
        "text": "HTML script tags can be used to embed blocks of data in documents. This way, JSON-LD content can be easily embedded in HTML by placing it in a script element with the type attribute set to application/ld+json.\n\nEXAMPLE 62: Embedding JSON-LD in HTML\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
      },
      "date": 1458000074151
    },
    {
      "type": "add",
      "id": "286481db1461f24d",
      "item": {
        "type": "paragraph",
        "id": "286481db1461f24d",
        "text": "Depending on how the HTML document is served, certain strings may need to be escaped."
      },
      "after": "53cc7361098538a5",
      "date": 1458000076104
    },
    {
      "type": "edit",
      "id": "53cc7361098538a5",
      "item": {
        "type": "paragraph",
        "id": "53cc7361098538a5",
        "text": "HTML script tags can be used to embed blocks of data in documents. This way, JSON-LD content can be easily embedded in HTML by placing it in a script element with the type attribute set to application/ld+json - [https://www.w3.org/TR/json-ld/#embedding-json-ld-in-html-documents w3.org]"
      },
      "date": 1458000086270
    },
    {
      "type": "add",
      "id": "40647be756d6d0a9",
      "item": {
        "type": "paragraph",
        "id": "40647be756d6d0a9",
        "text": "<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
      },
      "after": "53cc7361098538a5",
      "date": 1458000098300
    },
    {
      "type": "edit",
      "id": "23adfa5d28cdbafc",
      "item": {
        "type": "markdown",
        "id": "23adfa5d28cdbafc",
        "text": "# Embedding JSON-LD in HTML"
      },
      "date": 1458000103832
    },
    {
      "item": {
        "type": "factory",
        "id": "169e06a7f63a5cab"
      },
      "id": "169e06a7f63a5cab",
      "type": "add",
      "after": "f886ac00e21a4c64",
      "date": 1458000109194
    },
    {
      "type": "move",
      "order": [
        "997868bec8b4d8d8",
        "e8bab59821d1acb3",
        "15069c37ace83330",
        "68816e4802c1121e",
        "23adfa5d28cdbafc",
        "53cc7361098538a5",
        "169e06a7f63a5cab",
        "40647be756d6d0a9",
        "286481db1461f24d",
        "8e9261bbc8544e58",
        "f81787c27e1b5474",
        "1014e1459898950f",
        "20e76e944e8b056f",
        "bba6d194e78f82f0",
        "f886ac00e21a4c64"
      ],
      "id": "169e06a7f63a5cab",
      "date": 1458000113956
    },
    {
      "type": "remove",
      "id": "40647be756d6d0a9",
      "date": 1458000118230
    },
    {
      "type": "edit",
      "id": "169e06a7f63a5cab",
      "item": {
        "type": "code",
        "id": "169e06a7f63a5cab",
        "text": "<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
      },
      "date": 1458000121720
    },
    {
      "item": {
        "type": "factory",
        "id": "7ff020468430a3d4"
      },
      "id": "7ff020468430a3d4",
      "type": "add",
      "after": "f886ac00e21a4c64",
      "date": 1458000129763
    },
    {
      "type": "edit",
      "id": "7ff020468430a3d4",
      "item": {
        "type": "html",
        "id": "7ff020468430a3d4",
        "text": "<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
      },
      "date": 1458000133074
    },
    {
      "item": {
        "type": "factory",
        "id": "23af41542aa8702c"
      },
      "id": "23af41542aa8702c",
      "type": "add",
      "after": "7ff020468430a3d4",
      "date": 1458000140101
    },
    {
      "type": "edit",
      "id": "23af41542aa8702c",
      "item": {
        "type": "html",
        "id": "23af41542aa8702c",
        "text": "OK\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
      },
      "date": 1458000147754
    },
    {
      "type": "edit",
      "id": "23af41542aa8702c",
      "item": {
        "type": "html",
        "id": "23af41542aa8702c",
        "text": "This is an HTML element that includes the above JSON-LD Javascript. Note, if you do not include any other text the HTML is saved, but there is no way to see or edit it!\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
      },
      "date": 1458000297423
    },
    {
      "type": "move",
      "order": [
        "997868bec8b4d8d8",
        "e8bab59821d1acb3",
        "15069c37ace83330",
        "68816e4802c1121e",
        "23adfa5d28cdbafc",
        "53cc7361098538a5",
        "169e06a7f63a5cab",
        "23af41542aa8702c",
        "286481db1461f24d",
        "8e9261bbc8544e58",
        "f81787c27e1b5474",
        "1014e1459898950f",
        "20e76e944e8b056f",
        "bba6d194e78f82f0",
        "f886ac00e21a4c64",
        "7ff020468430a3d4"
      ],
      "id": "23af41542aa8702c",
      "date": 1458000305124
    },
    {
      "type": "edit",
      "id": "23af41542aa8702c",
      "item": {
        "type": "html",
        "id": "23af41542aa8702c",
        "text": "This text-item (yes this one edit me), is an HTML element that includes the above JSON-LD Javascript. Note, if you do not include any other text the HTML is saved, but there is no way to see or edit it!\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
      },
      "date": 1458000329767
    },
    {
      "type": "edit",
      "id": "23af41542aa8702c",
      "item": {
        "type": "html",
        "id": "23af41542aa8702c",
        "text": "This text-item (yes this one edit me), is an HTML element that includes the above JSON-LD Javascript. Note, if you do not include any other text the HTML is saved, but there is no way to see or edit it!\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>\nShould check to see if it served and what that means?"
      },
      "date": 1458000642276
    },
    {
      "type": "add",
      "id": "0204555395b76618",
      "item": {
        "type": "paragraph",
        "id": "0204555395b76618",
        "text": "If you don’t know what JSON-LD is and you want to find out why it is useful, check out this video on Linked Data:"
      },
      "after": "68816e4802c1121e",
      "date": 1458030026735
    },
    {
      "type": "add",
      "id": "e66a66fc7dc49bc2",
      "item": {
        "type": "paragraph",
        "id": "e66a66fc7dc49bc2",
        "text": "and this one on an Introduction to JSON-LD:"
      },
      "after": "0204555395b76618",
      "date": 1458030033504
    },
    {
      "item": {
        "type": "factory",
        "id": "a43a181c088a182d"
      },
      "id": "a43a181c088a182d",
      "type": "add",
      "after": "7ff020468430a3d4",
      "date": 1458030035827
    },
    {
      "type": "move",
      "order": [
        "997868bec8b4d8d8",
        "e8bab59821d1acb3",
        "15069c37ace83330",
        "68816e4802c1121e",
        "0204555395b76618",
        "a43a181c088a182d",
        "e66a66fc7dc49bc2",
        "23adfa5d28cdbafc",
        "53cc7361098538a5",
        "169e06a7f63a5cab",
        "23af41542aa8702c",
        "286481db1461f24d",
        "8e9261bbc8544e58",
        "f81787c27e1b5474",
        "1014e1459898950f",
        "20e76e944e8b056f",
        "bba6d194e78f82f0",
        "f886ac00e21a4c64",
        "7ff020468430a3d4"
      ],
      "id": "a43a181c088a182d",
      "date": 1458030043816
    },
    {
      "item": {
        "type": "factory",
        "id": "7da0651f05fda9ca"
      },
      "id": "7da0651f05fda9ca",
      "type": "add",
      "after": "7ff020468430a3d4",
      "date": 1458030046051
    },
    {
      "type": "move",
      "order": [
        "997868bec8b4d8d8",
        "e8bab59821d1acb3",
        "15069c37ace83330",
        "68816e4802c1121e",
        "0204555395b76618",
        "a43a181c088a182d",
        "e66a66fc7dc49bc2",
        "7da0651f05fda9ca",
        "23adfa5d28cdbafc",
        "53cc7361098538a5",
        "169e06a7f63a5cab",
        "23af41542aa8702c",
        "286481db1461f24d",
        "8e9261bbc8544e58",
        "f81787c27e1b5474",
        "1014e1459898950f",
        "20e76e944e8b056f",
        "bba6d194e78f82f0",
        "f886ac00e21a4c64",
        "7ff020468430a3d4"
      ],
      "id": "7da0651f05fda9ca",
      "date": 1458030052173
    },
    {
      "type": "edit",
      "id": "a43a181c088a182d",
      "item": {
        "type": "video",
        "id": "a43a181c088a182d",
        "text": "YOUTUBE 4x_xzT5eF5Q\n(double-click to edit caption)\n"
      },
      "date": 1458030064025
    },
    {
      "type": "edit",
      "id": "a43a181c088a182d",
      "item": {
        "type": "video",
        "id": "a43a181c088a182d",
        "text": "YOUTUBE 4x_xzT5eF5Q\nA short non-technical introduction to Linked Data, Google's Knowledge Graph, and Facebook's Open Graph Protocol."
      },
      "date": 1458030093517
    },
    {
      "type": "edit",
      "id": "7da0651f05fda9ca",
      "item": {
        "type": "video",
        "id": "7da0651f05fda9ca",
        "text": "YOUTUBE vioCbTo3C-4\n(double-click to edit caption)\n"
      },
      "date": 1458030110340
    },
    {
      "type": "edit",
      "id": "7da0651f05fda9ca",
      "item": {
        "type": "video",
        "id": "7da0651f05fda9ca",
        "text": "YOUTUBE vioCbTo3C-4\nA short introduction to JSON-LD for Web developers, designers, and hobbyists. It covers how to express basic Linked Data in JSON. "
      },
      "date": 1458030138031
    },
    {
      "type": "edit",
      "id": "53cc7361098538a5",
      "item": {
        "type": "paragraph",
        "id": "53cc7361098538a5",
        "text": "Here is a post about outlines the things that make JSON-LD different from the traditional Semantic Web / Linked Data stack of technologies and why we decided to design it the way that we did."
      },
      "date": 1458030221144
    },
    {
      "type": "add",
      "id": "ba32ecb9b0d126fd",
      "item": {
        "type": "paragraph",
        "id": "ba32ecb9b0d126fd",
        "text": "HTML script tags can be used to embed blocks of data in documents. This way, JSON-LD content can be easily embedded in HTML by placing it in a script element with the type attribute set to application/ld+json - [https://www.w3.org/TR/json-ld/#embedding-json-ld-in-html-documents w3.org]"
      },
      "after": "53cc7361098538a5",
      "date": 1458030223334
    },
    {
      "type": "edit",
      "id": "53cc7361098538a5",
      "item": {
        "type": "paragraph",
        "id": "53cc7361098538a5",
        "text": "Here is a post about the things that make JSON-LD different from the traditional [[Semantic Web]] / Linked Data stack of technologies and why we decided to design it the way that we did."
      },
      "date": 1458030235544
    },
    {
      "type": "move",
      "order": [
        "997868bec8b4d8d8",
        "53cc7361098538a5",
        "e8bab59821d1acb3",
        "15069c37ace83330",
        "68816e4802c1121e",
        "0204555395b76618",
        "a43a181c088a182d",
        "e66a66fc7dc49bc2",
        "7da0651f05fda9ca",
        "23adfa5d28cdbafc",
        "ba32ecb9b0d126fd",
        "169e06a7f63a5cab",
        "23af41542aa8702c",
        "286481db1461f24d",
        "8e9261bbc8544e58",
        "f81787c27e1b5474",
        "1014e1459898950f",
        "20e76e944e8b056f",
        "bba6d194e78f82f0",
        "f886ac00e21a4c64",
        "7ff020468430a3d4"
      ],
      "id": "53cc7361098538a5",
      "date": 1458030251726
    },
    {
      "type": "edit",
      "id": "e8bab59821d1acb3",
      "item": {
        "id": "e8bab59821d1acb3",
        "text": "JSON-LD is a lightweight [[Linked Data]] format. It is easy for humans to read and write. It is based on the already successful [[JSON]] format and provides a way to help JSON data interoperate at Web-scale. JSON-LD is an ideal data format for programming environments, [[REST]] Web services, and unstructured databases such as [[CouchDB]] and [[MongoDB]]. ",
        "type": "paragraph"
      },
      "date": 1458030280729
    },
    {
      "type": "move",
      "order": [
        "997868bec8b4d8d8",
        "e8bab59821d1acb3",
        "15069c37ace83330",
        "68816e4802c1121e",
        "53cc7361098538a5",
        "0204555395b76618",
        "a43a181c088a182d",
        "e66a66fc7dc49bc2",
        "7da0651f05fda9ca",
        "23adfa5d28cdbafc",
        "ba32ecb9b0d126fd",
        "169e06a7f63a5cab",
        "23af41542aa8702c",
        "286481db1461f24d",
        "8e9261bbc8544e58",
        "f81787c27e1b5474",
        "1014e1459898950f",
        "20e76e944e8b056f",
        "bba6d194e78f82f0",
        "f886ac00e21a4c64",
        "7ff020468430a3d4"
      ],
      "id": "53cc7361098538a5",
      "date": 1458030284951
    },
    {
      "type": "add",
      "id": "d53a9ecb48f6690a",
      "item": {
        "type": "paragraph",
        "id": "d53a9ecb48f6690a",
        "text": "# Basics"
      },
      "after": "53cc7361098538a5",
      "date": 1458030309218
    },
    {
      "type": "edit",
      "id": "d53a9ecb48f6690a",
      "item": {
        "type": "markdown",
        "id": "d53a9ecb48f6690a",
        "text": "# Basics"
      },
      "date": 1458030310078
    },
    {
      "type": "edit",
      "id": "68816e4802c1121e",
      "item": {
        "id": "68816e4802c1121e",
        "text": "# Goals",
        "type": "paragraph"
      },
      "date": 1458030318017
    },
    {
      "type": "add",
      "id": "41b753609083dac1",
      "item": {
        "type": "paragraph",
        "id": "41b753609083dac1",
        "text": "It was a goal to require as little effort as possible from developers to transform their existing [[JSON]] to JSON-LD. This allows data to be serialized in a way that is similar to traditional JSON - [https://www.w3.org/TR/json-ld/ w3.org]"
      },
      "after": "68816e4802c1121e",
      "date": 1458030319283
    },
    {
      "type": "edit",
      "id": "68816e4802c1121e",
      "item": {
        "id": "68816e4802c1121e",
        "text": "# Goals",
        "type": "markdown"
      },
      "date": 1458030320270
    },
    {
      "type": "edit",
      "id": "997868bec8b4d8d8",
      "item": {
        "id": "997868bec8b4d8d8",
        "text": "JSON-LD, or JavaScript Object Notation for [[Linked Data]], is a method of transporting Linked Data using [[JSON]] - [https://en.wikipedia.org/wiki/JSON-LD wikipedia]",
        "type": "paragraph"
      },
      "date": 1458030342964
    },
    {
      "type": "edit",
      "id": "997868bec8b4d8d8",
      "item": {
        "id": "997868bec8b4d8d8",
        "text": "JSON-LD, or JavaScript Object Notation for Linked Data, is a method of transporting [[Linked Data]] using [[JSON]] - [https://en.wikipedia.org/wiki/JSON-LD wikipedia]",
        "type": "paragraph"
      },
      "date": 1458030368609
    },
    {
      "type": "add",
      "id": "525cd55c3b7a1982",
      "item": {
        "type": "paragraph",
        "id": "525cd55c3b7a1982",
        "text": "It's also well worth reading [[Why I Hate the Semantic Web]] - [http://manu.sporny.org/2014/json-ld-origins-2/ manu.sporny.org]"
      },
      "after": "53cc7361098538a5",
      "date": 1458033169550
    }
  ],
  "story": [
    {
      "id": "997868bec8b4d8d8",
      "text": "JSON-LD, or JavaScript Object Notation for Linked Data, is a method of transporting [[Linked Data]] using [[JSON]] - [https://en.wikipedia.org/wiki/JSON-LD wikipedia]",
      "type": "paragraph"
    },
    {
      "id": "e8bab59821d1acb3",
      "text": "JSON-LD is a lightweight [[Linked Data]] format. It is easy for humans to read and write. It is based on the already successful [[JSON]] format and provides a way to help JSON data interoperate at Web-scale. JSON-LD is an ideal data format for programming environments, [[REST]] Web services, and unstructured databases such as [[CouchDB]] and [[MongoDB]]. ",
      "type": "paragraph"
    },
    {
      "id": "15069c37ace83330",
      "text": "{\n  \"@context\": {\n    \"name\": \"http://xmlns.com/foaf/0.1/name\",\n    \"homepage\": {\n      \"@id\": \"http://xmlns.com/foaf/0.1/workplaceHomepage\",\n      \"@type\": \"@id\"\n    },\n    \"Person\": \"http://xmlns.com/foaf/0.1/Person\"\n  },\n  \"@id\": \"http://me.markus-lanthaler.com\",\n  \"@type\": \"Person\",\n  \"name\": \"Markus Lanthaler\",\n  \"homepage\": \"http://www.tugraz.at/\"\n}\n",
      "type": "code"
    },
    {
      "id": "68816e4802c1121e",
      "text": "# Goals",
      "type": "markdown"
    },
    {
      "type": "paragraph",
      "id": "41b753609083dac1",
      "text": "It was a goal to require as little effort as possible from developers to transform their existing [[JSON]] to JSON-LD. This allows data to be serialized in a way that is similar to traditional JSON - [https://www.w3.org/TR/json-ld/ w3.org]"
    },
    {
      "type": "paragraph",
      "id": "53cc7361098538a5",
      "text": "Here is a post about the things that make JSON-LD different from the traditional [[Semantic Web]] / Linked Data stack of technologies and why we decided to design it the way that we did."
    },
    {
      "type": "paragraph",
      "id": "525cd55c3b7a1982",
      "text": "It's also well worth reading [[Why I Hate the Semantic Web]] - [http://manu.sporny.org/2014/json-ld-origins-2/ manu.sporny.org]"
    },
    {
      "type": "markdown",
      "id": "d53a9ecb48f6690a",
      "text": "# Basics"
    },
    {
      "type": "paragraph",
      "id": "0204555395b76618",
      "text": "If you don’t know what JSON-LD is and you want to find out why it is useful, check out this video on Linked Data:"
    },
    {
      "type": "video",
      "id": "a43a181c088a182d",
      "text": "YOUTUBE 4x_xzT5eF5Q\nA short non-technical introduction to Linked Data, Google's Knowledge Graph, and Facebook's Open Graph Protocol."
    },
    {
      "type": "paragraph",
      "id": "e66a66fc7dc49bc2",
      "text": "and this one on an Introduction to JSON-LD:"
    },
    {
      "type": "video",
      "id": "7da0651f05fda9ca",
      "text": "YOUTUBE vioCbTo3C-4\nA short introduction to JSON-LD for Web developers, designers, and hobbyists. It covers how to express basic Linked Data in JSON. "
    },
    {
      "type": "markdown",
      "id": "23adfa5d28cdbafc",
      "text": "# Embedding JSON-LD in HTML"
    },
    {
      "type": "paragraph",
      "id": "ba32ecb9b0d126fd",
      "text": "HTML script tags can be used to embed blocks of data in documents. This way, JSON-LD content can be easily embedded in HTML by placing it in a script element with the type attribute set to application/ld+json - [https://www.w3.org/TR/json-ld/#embedding-json-ld-in-html-documents w3.org]"
    },
    {
      "type": "code",
      "id": "169e06a7f63a5cab",
      "text": "<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
    },
    {
      "type": "html",
      "id": "23af41542aa8702c",
      "text": "This text-item (yes this one edit me), is an HTML element that includes the above JSON-LD Javascript. Note, if you do not include any other text the HTML is saved, but there is no way to see or edit it!\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>\nShould check to see if it served and what that means?"
    },
    {
      "type": "paragraph",
      "id": "286481db1461f24d",
      "text": "Depending on how the HTML document is served, certain strings may need to be escaped."
    },
    {
      "type": "markdown",
      "id": "8e9261bbc8544e58",
      "text": "# About"
    },
    {
      "id": "f81787c27e1b5474",
      "text": "It is a World Wide Web Consortium Recommendation that has been developed by the JSON for Linking Data Community Group before it has been transferred to the RDF Working Group for review, improvement, and standardization.",
      "type": "paragraph"
    },
    {
      "id": "1014e1459898950f",
      "text": "JSON-LD is designed around the concept of a \"context\" to provide additional mappings from JSON to an RDF model. The context links object properties in a JSON document to concepts in an ontology.",
      "type": "paragraph"
    },
    {
      "id": "20e76e944e8b056f",
      "text": "In order to map the JSON-LD syntax to RDF, JSON-LD allows values to be coerced to a specified type or to be tagged with a language.",
      "type": "paragraph"
    },
    {
      "id": "bba6d194e78f82f0",
      "text": "A context can be embedded directly in a JSON-LD document or put into a separate file and referenced from different documents (from traditional JSON documents via an HTTP Link header).",
      "type": "paragraph"
    },
    {
      "type": "reference",
      "id": "f886ac00e21a4c64",
      "site": "c0de.academy",
      "slug": "json-ld-signature",
      "title": "JSON-LD Signature",
      "text": "This specification adds authentication and integrity protection to Linked Data documents through the use of public/private key cryptography without sacrificing Linked Data features such as extensibility and composability - [https://web-payments.org/specs/source/ld-signatures/#bib-RDF-DATASET-NORMALIZATION web-payments.org]"
    },
    {
      "type": "html",
      "id": "7ff020468430a3d4",
      "text": "<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://json-ld.org/contexts/person.jsonld\",\n  \"@id\": \"http://dbpedia.org/resource/John_Lennon\",\n  \"name\": \"John Lennon\",\n  \"born\": \"1940-10-09\",\n  \"spouse\": \"http://dbpedia.org/resource/Cynthia_Lennon\"\n}\n</script>"
    }
  ],
  "title": "JSON-LD"
}