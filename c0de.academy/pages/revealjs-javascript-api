{
  "title": "Reveal.js JavaScript API",
  "story": [
    {
      "type": "code",
      "id": "d67e765f724f8d7e",
      "text": "// Navigation\nReveal.slide( indexh, indexv, indexf );\nReveal.left();\nReveal.right();\nReveal.up();\nReveal.down();\nReveal.prev();\nReveal.next();\nReveal.prevFragment();\nReveal.nextFragment();\n\n// Toggle presentation states, optionally pass true/false to force on/off\nReveal.toggleOverview();\nReveal.togglePause();\nReveal.toggleAutoSlide();\n\n// Change a config value at runtime\nReveal.configure({ controls: true });\n\n// Returns the present configuration options\nReveal.getConfig();\n\n// Fetch the current scale of the presentation\nReveal.getScale();\n\n// Retrieves the previous and current slide elements\nReveal.getPreviousSlide();\nReveal.getCurrentSlide();\n\nReveal.getIndices(); // { h: 0, v: 0 } }\nReveal.getProgress(); // 0-1\nReveal.getTotalSlides();\n\n// Returns the speaker notes for the current slide\nReveal.getSlideNotes();\n\n// State checks\nReveal.isFirstSlide();\nReveal.isLastSlide();\nReveal.isOverview();\nReveal.isPaused();\nReveal.isAutoSliding();"
    },
    {
      "type": "paragraph",
      "id": "e213c2a56204c372",
      "text": "The Reveal object exposes a JavaScript API for controlling navigation and reading state:"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Reveal.js JavaScript API",
        "story": []
      },
      "date": 1459402200760
    },
    {
      "item": {
        "type": "factory",
        "id": "e213c2a56204c372"
      },
      "id": "e213c2a56204c372",
      "type": "add",
      "date": 1459402202640
    },
    {
      "type": "edit",
      "id": "e213c2a56204c372",
      "item": {
        "type": "paragraph",
        "id": "e213c2a56204c372",
        "text": "The Reveal object exposes a JavaScript API for controlling navigation and reading state:"
      },
      "date": 1459402256586
    },
    {
      "item": {
        "type": "factory",
        "id": "d67e765f724f8d7e"
      },
      "id": "d67e765f724f8d7e",
      "type": "add",
      "after": "a5437b878c9597b2",
      "date": 1459402263438
    },
    {
      "type": "edit",
      "id": "d67e765f724f8d7e",
      "item": {
        "type": "code",
        "id": "d67e765f724f8d7e",
        "text": "// Navigation\nReveal.slide( indexh, indexv, indexf );\nReveal.left();\nReveal.right();\nReveal.up();\nReveal.down();\nReveal.prev();\nReveal.next();\nReveal.prevFragment();\nReveal.nextFragment();\n\n// Toggle presentation states, optionally pass true/false to force on/off\nReveal.toggleOverview();\nReveal.togglePause();\nReveal.toggleAutoSlide();\n\n// Change a config value at runtime\nReveal.configure({ controls: true });\n\n// Returns the present configuration options\nReveal.getConfig();\n\n// Fetch the current scale of the presentation\nReveal.getScale();\n\n// Retrieves the previous and current slide elements\nReveal.getPreviousSlide();\nReveal.getCurrentSlide();\n\nReveal.getIndices(); // { h: 0, v: 0 } }\nReveal.getProgress(); // 0-1\nReveal.getTotalSlides();\n\n// Returns the speaker notes for the current slide\nReveal.getSlideNotes();\n\n// State checks\nReveal.isFirstSlide();\nReveal.isLastSlide();\nReveal.isOverview();\nReveal.isPaused();\nReveal.isAutoSliding();"
      },
      "date": 1459402266559
    }
  ]
}