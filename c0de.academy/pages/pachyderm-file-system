{
  "title": "Pachyderm File System",
  "story": [
    {
      "type": "paragraph",
      "id": "6d5f1db67afd5bc8",
      "text": "Pachyderm is a distributed file system and analytics engine built specifically for containerized infrastructures - [https://github.com/pachyderm/pfs/ github]"
    },
    {
      "type": "paragraph",
      "id": "a4abe01f64e3f8a9",
      "text": "You deploy it with [[Docker]], just like the other applications in your stack. Furthermore, analysis jobs are specified as containers, rather than .jars, letting you perform distributed computation using any tools you want."
    },
    {
      "type": "html",
      "id": "09108e06f01611ef",
      "text": "<H3>Key Features</H3>\n<UL><LI>\n    Fault-tolerant architecture built on [[CoreOS]]</LI><LI>\n    Git-like distributed file system</LI><LI>\n    Containerized analytics engine\n</LI></UL>"
    },
    {
      "type": "paragraph",
      "id": "0d824bca92f14b69",
      "text": "Pachyderm will eventually be a complete replacement for [[Hadoop]], built on top of a modern toolchain instead of the JVM. Hadoop is a mature ecosystem, so there's a long way to go before pfs will fully match its feature set. However, thanks to innovative tools like [[btrfs]], [[Docker]], and [[CoreOS]], we can build an order of magnitude more functionality with much less code."
    },
    {
      "type": "html",
      "id": "c7070d2be1246f14",
      "text": "<H3>What is a \"git-like file system\"?"
    },
    {
      "type": "paragraph",
      "id": "e08d4179dcea734e",
      "text": "Pfs is implemented as a distributed layer on top of btrfs, the same copy-on-write file system that powers Docker. Btrfs already offers git-like semantics on a single machine; pfs scales these out to an entire cluster. This allows features such as:"
    },
    {
      "type": "html",
      "id": "540dc088beccfef9",
      "text": "<UL><LI>\n    Commit-based history: File systems are generally single-state entities. Pfs, on the other hand, provides a rich history of every previous state of your cluster. You can always revert to a prior commit in the event of a disaster.</LI><LI>\n    Branching: Thanks to btrfs's copy-on-write semantics, branching is ridiculously cheap in pfs. Each user can experiment freely in their own branch without impacting anyone else or the underlying data. Branches can easily be merged back in the main cluster.</LI><LI>\n    Cloning: Btrfs's send/receive functionality allows pfs to efficiently copy an entire cluster's worth of data while still maintaining its commit history.\n</LI></UL>"
    },
    {
      "type": "html",
      "id": "d037890ba2182c5c",
      "text": "<H3>What is \"containerized analytics?\""
    },
    {
      "type": "paragraph",
      "id": "277d44a81663d2ad",
      "text": "Rather than thinking in terms of map or reduce jobs, pps thinks in terms of pipelines expressed within a container. A pipeline is a generic way expressing computation over large datasets and it’s containerized to make it easily portable, isolated, and easy to monitor. In Pachyderm, all analysis runs in containers. You can write them in any language you want and include any libraries. For example, suppose you want to perform computer vision on a large set of images. Creating this job is as simple as running npm install opencv inside a Docker container."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Pachyderm File System",
        "story": []
      },
      "date": 1434535993523
    },
    {
      "item": {
        "type": "factory",
        "id": "6d5f1db67afd5bc8"
      },
      "id": "6d5f1db67afd5bc8",
      "type": "add",
      "date": 1434535995050
    },
    {
      "type": "edit",
      "id": "6d5f1db67afd5bc8",
      "item": {
        "type": "paragraph",
        "id": "6d5f1db67afd5bc8",
        "text": "Pachyderm is a distributed file system and analytics engine built specifically for containerized infrastructures. You deploy it with [[Docker]], just like the other applications in your stack. Furthermore, analysis jobs are specified as containers, rather than .jars, letting you perform distributed computation using any tools you want."
      },
      "date": 1434536018671
    },
    {
      "type": "add",
      "id": "09108e06f01611ef",
      "item": {
        "type": "paragraph",
        "id": "09108e06f01611ef",
        "text": "<H3>Key Features</H3>\n<UL><LI>\n    Fault-tolerant architecture built on [[CoreOS]]</LI><LI>\n    Git-like distributed file system</LI><LI>\n    Containerized analytics engine\n</LI></UL>"
      },
      "after": "6d5f1db67afd5bc8",
      "date": 1434536077032
    },
    {
      "type": "edit",
      "id": "09108e06f01611ef",
      "item": {
        "type": "html",
        "id": "09108e06f01611ef",
        "text": "<H3>Key Features</H3>\n<UL><LI>\n    Fault-tolerant architecture built on [[CoreOS]]</LI><LI>\n    Git-like distributed file system</LI><LI>\n    Containerized analytics engine\n</LI></UL>"
      },
      "date": 1434536078207
    },
    {
      "type": "add",
      "id": "0d824bca92f14b69",
      "item": {
        "type": "paragraph",
        "id": "0d824bca92f14b69",
        "text": "Pachyderm will eventually be a complete replacement for [[Hadoop]], built on top of a modern toolchain instead of the JVM. Hadoop is a mature ecosystem, so there's a long way to go before pfs will fully match its feature set. However, thanks to innovative tools like [[btrfs]], [[Docker]], and [[CoreOS]], we can build an order of magnitude more functionality with much less code."
      },
      "after": "09108e06f01611ef",
      "date": 1434536112666
    },
    {
      "type": "add",
      "id": "c7070d2be1246f14",
      "item": {
        "type": "paragraph",
        "id": "c7070d2be1246f14",
        "text": "<H3>What is a \"git-like file system\"?"
      },
      "after": "0d824bca92f14b69",
      "date": 1434536118213
    },
    {
      "type": "add",
      "id": "e08d4179dcea734e",
      "item": {
        "type": "paragraph",
        "id": "e08d4179dcea734e",
        "text": "Pfs is implemented as a distributed layer on top of btrfs, the same copy-on-write file system that powers Docker. Btrfs already offers git-like semantics on a single machine; pfs scales these out to an entire cluster. This allows features such as:"
      },
      "after": "c7070d2be1246f14",
      "date": 1434536125989
    },
    {
      "type": "add",
      "id": "540dc088beccfef9",
      "item": {
        "type": "paragraph",
        "id": "540dc088beccfef9",
        "text": "<UL><LI>\n    Commit-based history: File systems are generally single-state entities. Pfs, on the other hand, provides a rich history of every previous state of your cluster. You can always revert to a prior commit in the event of a disaster.</LI><LI>\n    Branching: Thanks to btrfs's copy-on-write semantics, branching is ridiculously cheap in pfs. Each user can experiment freely in their own branch without impacting anyone else or the underlying data. Branches can easily be merged back in the main cluster.</LI><LI>\n    Cloning: Btrfs's send/receive functionality allows pfs to efficiently copy an entire cluster's worth of data while still maintaining its commit history.\n</LI></UL>"
      },
      "after": "e08d4179dcea734e",
      "date": 1434536157989
    },
    {
      "type": "edit",
      "id": "540dc088beccfef9",
      "item": {
        "type": "html",
        "id": "540dc088beccfef9",
        "text": "<UL><LI>\n    Commit-based history: File systems are generally single-state entities. Pfs, on the other hand, provides a rich history of every previous state of your cluster. You can always revert to a prior commit in the event of a disaster.</LI><LI>\n    Branching: Thanks to btrfs's copy-on-write semantics, branching is ridiculously cheap in pfs. Each user can experiment freely in their own branch without impacting anyone else or the underlying data. Branches can easily be merged back in the main cluster.</LI><LI>\n    Cloning: Btrfs's send/receive functionality allows pfs to efficiently copy an entire cluster's worth of data while still maintaining its commit history.\n</LI></UL>"
      },
      "date": 1434536159700
    },
    {
      "type": "edit",
      "id": "c7070d2be1246f14",
      "item": {
        "type": "html",
        "id": "c7070d2be1246f14",
        "text": "<H3>What is a \"git-like file system\"?"
      },
      "date": 1434536162241
    },
    {
      "type": "add",
      "id": "d037890ba2182c5c",
      "item": {
        "type": "paragraph",
        "id": "d037890ba2182c5c",
        "text": "<H3>What is \"containerized analytics?\""
      },
      "after": "540dc088beccfef9",
      "date": 1434536168572
    },
    {
      "type": "add",
      "id": "277d44a81663d2ad",
      "item": {
        "type": "paragraph",
        "id": "277d44a81663d2ad",
        "text": "Rather than thinking in terms of map or reduce jobs, pps thinks in terms of pipelines expressed within a container. A pipeline is a generic way expressing computation over large datasets and it’s containerized to make it easily portable, isolated, and easy to monitor. In Pachyderm, all analysis runs in containers. You can write them in any language you want and include any libraries. For example, suppose you want to perform computer vision on a large set of images. Creating this job is as simple as running npm install opencv inside a Docker container."
      },
      "after": "d037890ba2182c5c",
      "date": 1434536172409
    },
    {
      "type": "edit",
      "id": "d037890ba2182c5c",
      "item": {
        "type": "html",
        "id": "d037890ba2182c5c",
        "text": "<H3>What is \"containerized analytics?\""
      },
      "date": 1434536173778
    },
    {
      "type": "edit",
      "id": "6d5f1db67afd5bc8",
      "item": {
        "type": "paragraph",
        "id": "6d5f1db67afd5bc8",
        "text": "Pachyderm is a distributed file system and analytics engine built specifically for containerized infrastructures. You deploy it with [[Docker]], just like the other applications in your stack. Furthermore, analysis jobs are specified as containers, rather than .jars, letting you perform distributed computation using any tools you want - [https://github.com/pachyderm/pfs/ github]"
      },
      "date": 1434536189582
    },
    {
      "type": "edit",
      "id": "6d5f1db67afd5bc8",
      "item": {
        "type": "paragraph",
        "id": "6d5f1db67afd5bc8",
        "text": "Pachyderm is a distributed file system and analytics engine built specifically for containerized infrastructures - [https://github.com/pachyderm/pfs/ github]"
      },
      "date": 1434536221575
    },
    {
      "type": "add",
      "id": "a4abe01f64e3f8a9",
      "item": {
        "type": "paragraph",
        "id": "a4abe01f64e3f8a9",
        "text": "You deploy it with [[Docker]], just like the other applications in your stack. Furthermore, analysis jobs are specified as containers, rather than .jars, letting you perform distributed computation using any tools you want."
      },
      "after": "6d5f1db67afd5bc8",
      "date": 1434536222617
    }
  ]
}