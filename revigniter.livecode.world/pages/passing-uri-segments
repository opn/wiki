{
  "title": "Passing URI Segments",
  "story": [
    {
      "type": "paragraph",
      "id": "ce43aea5116a66fd",
      "text": "If your URI contains more than two segments you can retrieve them using the [[rigFetchSegment]]() function."
    },
    {
      "type": "paragraph",
      "id": "be5c05d8094bc162",
      "text": "For example, lets say you have a URI like this:"
    },
    {
      "type": "code",
      "id": "4a429bb53d6e4521",
      "text": "example.com/index.lc/products/shoes/sandals/123"
    },
    {
      "type": "paragraph",
      "id": "5dbe15cf43873211",
      "text": "and given the code below:"
    },
    {
      "type": "code",
      "id": "0d1ec1f11458046b",
      "text": "<?rev\n# PUT YOUR HANDLER NAMES  INTO THE GLOBAL gControllerHandlers AS A COMMA SEPARATED LIST\nput \"index,shoes\" into gControllerHandlers\n\ncommand shoes\n  put rigFetchSegment(3) && rigFetchSegment(4)\nend shoes"
    },
    {
      "type": "paragraph",
      "id": "9174c458b9d75200",
      "text": "the function rigFetchSegment(3) will return \"sandals\" and rigFetchSegment(4) will return \"123\"."
    },
    {
      "type": "html",
      "id": "20084356ff8e69ce",
      "text": "<blockquote><b style='color: red'>Important: </b>\n\nIf you are using the URI Routing feature, the re-routed segments must be retrieved using the [[rigFetchRsegment]]() function.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Passing URI Segments",
        "story": []
      },
      "date": 1459807035004
    },
    {
      "item": {
        "type": "factory",
        "id": "4a429bb53d6e4521"
      },
      "id": "4a429bb53d6e4521",
      "type": "add",
      "date": 1459807035993
    },
    {
      "item": {
        "type": "factory",
        "id": "0d1ec1f11458046b"
      },
      "id": "0d1ec1f11458046b",
      "type": "add",
      "after": "4a429bb53d6e4521",
      "date": 1459807037601
    },
    {
      "item": {
        "type": "factory",
        "id": "c01035810121246a"
      },
      "id": "c01035810121246a",
      "type": "add",
      "after": "0d1ec1f11458046b",
      "date": 1459807038371
    },
    {
      "item": {
        "type": "factory",
        "id": "e3114f9183758009"
      },
      "id": "e3114f9183758009",
      "type": "add",
      "after": "c01035810121246a",
      "date": 1459807039285
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ce43aea5116a66fd",
        "text": "If your URI contains more than two segments you can retrieve them using the rigFetchSegment() function.\n\nFor example, lets say you have a URI like this:"
      },
      "id": "ce43aea5116a66fd",
      "date": 1459807043251
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4d6170f5f73fb34d",
        "text": "\nexample.com/index.lc/products/shoes/sandals/123"
      },
      "after": "ce43aea5116a66fd",
      "id": "4d6170f5f73fb34d",
      "date": 1459807046082
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5dbe15cf43873211",
        "text": "The function rigFetchSegment(3) will return \"sandals\" and rigFetchSegment(4) will return \"123\" (URI segments 3 and 4):"
      },
      "after": "4d6170f5f73fb34d",
      "id": "5dbe15cf43873211",
      "date": 1459807049785
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9cc0d9bb9d65b842",
        "text": "<?rev\n\n# PUT YOUR HANDLER NAMES  INTO THE GLOBAL gControllerHandlers AS A COMMA SEPARATED LIST\nput \"index,shoes\" into gControllerHandlers\n\ncommand shoes\n\tput rigFetchSegment(3) && rigFetchSegment(4)\nend shoes"
      },
      "after": "5dbe15cf43873211",
      "id": "9cc0d9bb9d65b842",
      "date": 1459807053096
    },
    {
      "type": "move",
      "order": [
        "ce43aea5116a66fd",
        "4d6170f5f73fb34d",
        "4a429bb53d6e4521",
        "5dbe15cf43873211",
        "9cc0d9bb9d65b842",
        "0d1ec1f11458046b",
        "c01035810121246a",
        "e3114f9183758009"
      ],
      "id": "4a429bb53d6e4521",
      "date": 1459807055328
    },
    {
      "type": "remove",
      "id": "4d6170f5f73fb34d",
      "date": 1459807058555
    },
    {
      "type": "edit",
      "id": "4a429bb53d6e4521",
      "item": {
        "type": "code",
        "id": "4a429bb53d6e4521",
        "text": "example.com/index.lc/products/shoes/sandals/123"
      },
      "date": 1459807061438
    },
    {
      "type": "remove",
      "id": "9cc0d9bb9d65b842",
      "date": 1459807068906
    },
    {
      "type": "edit",
      "id": "0d1ec1f11458046b",
      "item": {
        "type": "code",
        "id": "0d1ec1f11458046b",
        "text": "<?rev\n\n# PUT YOUR HANDLER NAMES  INTO THE GLOBAL gControllerHandlers AS A COMMA SEPARATED LIST\nput \"index,shoes\" into gControllerHandlers\n\ncommand shoes\n\tput rigFetchSegment(3) && rigFetchSegment(4)\nend shoes"
      },
      "date": 1459807074455
    },
    {
      "type": "edit",
      "id": "0d1ec1f11458046b",
      "item": {
        "type": "code",
        "id": "0d1ec1f11458046b",
        "text": "<?rev\n\n# PUT YOUR HANDLER NAMES  INTO THE GLOBAL gControllerHandlers AS A COMMA SEPARATED LIST\nput \"index,shoes\" into gControllerHandlers\n\ncommand shoes\n  put rigFetchSegment(3) && rigFetchSegment(4)\nend shoes"
      },
      "date": 1459807081071
    },
    {
      "type": "edit",
      "id": "0d1ec1f11458046b",
      "item": {
        "type": "code",
        "id": "0d1ec1f11458046b",
        "text": "<?rev\n# PUT YOUR HANDLER NAMES  INTO THE GLOBAL gControllerHandlers AS A COMMA SEPARATED LIST\nput \"index,shoes\" into gControllerHandlers\n\ncommand shoes\n  put rigFetchSegment(3) && rigFetchSegment(4)\nend shoes"
      },
      "date": 1459807084847
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3205790f35559d64",
        "text": "Important:  If you are using the URI Routing feature, the re-routed segments must be retrieved using the rigFetchRsegment() function.\nDefining a Default Controller\n\nrevIgniter can be told to load a default controller when a URI is not present, as will be the case when only your site root URL is requested. To specify a default controller, open your application/config/routes.lc file and set this variable:\n\nput \"Blog\" into gRoute[1][\"defaultController\"]\nWhere Blog is the name of the controller library you want used. If you now load your main index.lc file without specifying any URI segments you'll see your Hello World message by default.\n\nRemapping Handler Calls\n\nAs noted above, the second segment of the URI typically determines which handler in the controller gets called. revIgniter permits you to override this behavior through the use of the _remap handler:\n\ncommand _remap\n\t-- Some code here...\nend _remap\nImportant:  If your controller contains a handler named _remap, it will always get called regardless of what your URI contains. It overrides the normal behavior in which the URI determines which handler is called, allowing you to define your own handler routing rules.\nThe overridden handler call (typically the second segment of the URI) will be passed as a parameter to the _remap handler:\n\ncommand _remap pHandler\n\tif pHandler is \"someHandler\" then\n\t\tdo handler\n\telse\n\t\tdo defaultHandler\n\tend if\nend _remap\nProcessing Output\n\nrevIgniter has an output library that takes care of sending your final rendered data to the web browser automatically. More information on this can be found in the Views and Output library pages. In some cases, however, you might want to post-process the finalized data in some way and send it to the browser yourself. revIgniter permits you to add a handler named _output to your controller that will receive the finalized output data.\n\nImportant:  If your controller contains a handler named _output, it will always be called by the output library instead of puting the finalized data directly. The first parameter of the handler will contain the finalized output.\n\nHere is an example:\n\ncommand _output pOutput\n\tput pOutput\nend _output\nPlease note that your _output handler will receive the data in its finalized state. Benchmark data will be rendered, cache files written (if you have caching enabled), and headers will be sent (if you use that feature) before it is handed off to the _output handler. If you are using this feature the page execution timer might not be perfectly accurate since it will not take into acccount any further processing you do. For an alternate way to control output before any of the final processing is done, please see the available handlers in the Output Library.\nPrivate Handlers\n\nIn some cases you may want certain handlers hidden from public access. To make a handler private, simply add an underscore as the name prefix and it will not be served via a URL request. For example, if you were to have a handler like this:\n\ncommand _utility\n\t-- some code\nend _utility\nTrying to access it via the URL, like this, will not work:\n\nexample.com/index.lc/blog/_utility/\nOrganizing Your Controllers into Sub-folders\n\nIf you are building a large application you might find it convenient to organize your controllers into sub-folders. revIgniter permits you to do this.\n\nSimply create folders within your application/controllers directory and place your controller libraries within them.\n\nNote:  When using this feature the first segment of your URI must specify the folder. For example, lets say you have a controller located here:\n\napplication/controllers/products/shoes.lc\nTo call the above controller your URI will look something like this:\n\nexample.com/index.lc/products/shoes/show/123\nEach of your sub-folders may contain a default controller which will be called if the URL contains only the sub-folder. Simply name your default controller as specified in your application/config/routes.lc file\n\nrevIgniter also permits you to remap your URIs using its URI Routing feature.\n\nReserved Handler Names\n\nSince your controller script will extend the main application controller you must be careful not to name your handlers identically to the ones used by that library. See Reserved Names for a full list."
      },
      "after": "0d1ec1f11458046b",
      "id": "3205790f35559d64",
      "date": 1459807091502
    },
    {
      "type": "edit",
      "id": "3205790f35559d64",
      "item": {
        "type": "paragraph",
        "id": "3205790f35559d64",
        "text": "Important:  If you are using the URI Routing feature, the re-routed segments must be retrieved using the rigFetchRsegment() function.\nDefining a Default Controller\n\nrevIgniter can be told to load a default controller when a URI is not present, as will be the case when only your site root URL is requested. To specify a default controller, open your application/config/routes.lc file and set this variable:\n\nput \"Blog\" into gRoute[1][\"defaultController\"]\nWhere Blog is the name of the controller library you want used. If you now load your main index.lc file without specifying any URI segments you'll see your Hello World message by default.\n\nRemapping Handler Calls\n\nAs noted above, the second segment of the URI typically determines which handler in the controller gets called. revIgniter permits you to override this behavior through the use of the _remap handler:\n\ncommand _remap\n\t-- Some code here...\nend _remap\nImportant:  If your controller contains a handler named _remap, it will always get called regardless of what your URI contains. It overrides the normal behavior in which the URI determines which handler is called, allowing you to define your own handler routing rules.\nThe overridden handler call (typically the second segment of the URI) will be passed as a parameter to the _remap handler:\n\ncommand _remap pHandler\n\tif pHandler is \"someHandler\" then\n\t\tdo handler\n\telse\n\t\tdo defaultHandler\n\tend if\nend _remap\nProcessing Output\n\nrevIgniter has an output library that takes care of sending your final rendered data to the web browser automatically. More information on this can be found in the Views and Output library pages. In some cases, however, you might want to post-process the finalized data in some way and send it to the browser yourself. revIgniter permits you to add a handler named _output to your controller that will receive the finalized output data.\n\nImportant:  If your controller contains a handler named _output, it will always be called by the output library instead of puting the finalized data directly. The first parameter of the handler will contain the finalized output.\n\nHere is an example:\n\ncommand _output pOutput\n\tput pOutput\nend _output\nPlease note that your _output handler will receive the data in its finalized state. Benchmark data will be rendered, cache files written (if you have caching enabled), and headers will be sent (if you use that feature) before it is handed off to the _output handler. If you are using this feature the page execution timer might not be perfectly accurate since it will not take into acccount any further processing you do. For an alternate way to control output before any of the final processing is done, please see the available handlers in the Output Library.\nPrivate Handlers\n\nIn some cases you may want certain handlers hidden from public access. To make a handler private, simply add an underscore as the name prefix and it will not be served via a URL request. For example, if you were to have a handler like this:\n\ncommand _utility\n\t-- some code\nend _utility\nTrying to access it via the URL, like this, will not work:\n\nexample.com/index.lc/blog/_utility/\nOrganizing Your Controllers into Sub-folders\n\nIf you are building a large application you might find it convenient to organize your controllers into sub-folders. revIgniter permits you to do this.\n\nSimply create folders within your application/controllers directory and place your controller libraries within them.\n\nNote:  When using this feature the first segment of your URI must specify the folder. For example, lets say you have a controller located here:\n\napplication/controllers/products/shoes.lc\nTo call the above controller your URI will look something like this:\n\nexample.com/index.lc/products/shoes/show/123\nEach of your sub-folders may contain a default controller which will be called if the URL contains only the sub-folder. Simply name your default controller as specified in your application/config/routes.lc file\n\nrevIgniter also permits you to remap your URIs using its URI Routing feature.\n\n"
      },
      "date": 1459807096513
    },
    {
      "type": "add",
      "id": "3125c9a11cfca548",
      "item": {
        "type": "paragraph",
        "id": "3125c9a11cfca548",
        "text": "[[Reserved Handler Names]]\n\nSince your controller script will extend the main application controller you must be careful not to name your handlers identically to the ones used by that library. See Reserved Names for a full list."
      },
      "after": "3205790f35559d64",
      "date": 1459807106287
    },
    {
      "type": "remove",
      "id": "3125c9a11cfca548",
      "date": 1459807116919
    },
    {
      "type": "edit",
      "id": "c01035810121246a",
      "item": {
        "type": "reference",
        "id": "c01035810121246a",
        "site": "revigniter.livecode.world",
        "slug": "reserved-handler-names",
        "title": "Reserved Handler Names",
        "text": "Since your controller script will extend the main application controller you must be careful not to name your handlers identically to the ones used by that library."
      },
      "date": 1459807138092
    },
    {
      "type": "edit",
      "id": "3205790f35559d64",
      "item": {
        "type": "paragraph",
        "id": "3205790f35559d64",
        "text": "[[Important]]:  If you are using the URI Routing feature, the re-routed segments must be retrieved using the rigFetchRsegment() function.\n"
      },
      "date": 1459807167336
    },
    {
      "type": "add",
      "id": "4e027b1e041fa8f5",
      "item": {
        "type": "paragraph",
        "id": "4e027b1e041fa8f5",
        "text": "# Defining a Default Controller"
      },
      "after": "3205790f35559d64",
      "date": 1459807170623
    },
    {
      "type": "add",
      "id": "eec28a85eb41d738",
      "item": {
        "type": "paragraph",
        "id": "eec28a85eb41d738",
        "text": "revIgniter can be told to load a default controller when a URI is not present, as will be the case when only your site root URL is requested. To specify a default controller, open your application/config/routes.lc file and set this variable:\n\nput \"Blog\" into gRoute[1][\"defaultController\"]\nWhere Blog is the name of the controller library you want used. If you now load your main index.lc file without specifying any URI segments you'll see your Hello World message by default.\n\n"
      },
      "after": "4e027b1e041fa8f5",
      "date": 1459807180418
    },
    {
      "type": "add",
      "id": "32cbc1a3d5a0e1c2",
      "item": {
        "type": "paragraph",
        "id": "32cbc1a3d5a0e1c2",
        "text": "# [[Remapping Handler Calls]]\n\nAs noted above, the second segment of the URI typically determines which handler in the controller gets called. revIgniter permits you to override this behavior through the use of the _remap handler:\n\ncommand _remap\n\t-- Some code here...\nend _remap\nImportant:  If your controller contains a handler named _remap, it will always get called regardless of what your URI contains. It overrides the normal behavior in which the URI determines which handler is called, allowing you to define your own handler routing rules.\nThe overridden handler call (typically the second segment of the URI) will be passed as a parameter to the _remap handler:\n\ncommand _remap pHandler\n\tif pHandler is \"someHandler\" then\n\t\tdo handler\n\telse\n\t\tdo defaultHandler\n\tend if\nend _remap\nProcessing Output\n\nrevIgniter has an output library that takes care of sending your final rendered data to the web browser automatically. More information on this can be found in the Views and Output library pages. In some cases, however, you might want to post-process the finalized data in some way and send it to the browser yourself. revIgniter permits you to add a handler named _output to your controller that will receive the finalized output data.\n\nImportant:  If your controller contains a handler named _output, it will always be called by the output library instead of puting the finalized data directly. The first parameter of the handler will contain the finalized output.\n\nHere is an example:\n\ncommand _output pOutput\n\tput pOutput\nend _output\nPlease note that your _output handler will receive the data in its finalized state. Benchmark data will be rendered, cache files written (if you have caching enabled), and headers will be sent (if you use that feature) before it is handed off to the _output handler. If you are using this feature the page execution timer might not be perfectly accurate since it will not take into acccount any further processing you do. For an alternate way to control output before any of the final processing is done, please see the available handlers in the Output Library.\nPrivate Handlers\n\nIn some cases you may want certain handlers hidden from public access. To make a handler private, simply add an underscore as the name prefix and it will not be served via a URL request. For example, if you were to have a handler like this:\n\ncommand _utility\n\t-- some code\nend _utility\nTrying to access it via the URL, like this, will not work:\n\nexample.com/index.lc/blog/_utility/\nOrganizing Your Controllers into Sub-folders\n\nIf you are building a large application you might find it convenient to organize your controllers into sub-folders. revIgniter permits you to do this.\n\nSimply create folders within your application/controllers directory and place your controller libraries within them.\n\nNote:  When using this feature the first segment of your URI must specify the folder. For example, lets say you have a controller located here:\n\napplication/controllers/products/shoes.lc\nTo call the above controller your URI will look something like this:\n\nexample.com/index.lc/products/shoes/show/123\nEach of your sub-folders may contain a default controller which will be called if the URL contains only the sub-folder. Simply name your default controller as specified in your application/config/routes.lc file\n\nrevIgniter also permits you to remap your URIs using its URI Routing feature."
      },
      "after": "eec28a85eb41d738",
      "date": 1459807191148
    },
    {
      "type": "edit",
      "id": "4e027b1e041fa8f5",
      "item": {
        "type": "paragraph",
        "id": "4e027b1e041fa8f5",
        "text": "# [[Defining a Default Controller]]"
      },
      "date": 1459807198137
    },
    {
      "type": "remove",
      "id": "eec28a85eb41d738",
      "date": 1459807208713
    },
    {
      "type": "add",
      "item": {
        "type": "factory",
        "id": "af434a4f79a858c4"
      },
      "after": "3205790f35559d64",
      "id": "af434a4f79a858c4",
      "date": 1459807243021
    },
    {
      "type": "edit",
      "id": "af434a4f79a858c4",
      "item": {
        "type": "reference",
        "id": "af434a4f79a858c4",
        "site": "revigniter.livecode.world",
        "slug": "defining-a-default-controller",
        "title": "Defining a Default Controller",
        "text": "revIgniter can be told to load a default controller when a URI is not present, as will be the case when only your site root URL is requested. To specify a default controller, open your application/config/routes.lc file and set this variable:"
      },
      "date": 1459807244685
    },
    {
      "type": "remove",
      "id": "4e027b1e041fa8f5",
      "date": 1459807248457
    },
    {
      "type": "edit",
      "id": "af434a4f79a858c4",
      "item": {
        "type": "reference",
        "id": "af434a4f79a858c4",
        "site": "revigniter.livecode.world",
        "slug": "defining-a-default-controller",
        "title": "Defining a Default Controller",
        "text": "revIgniter can be told to load a default controller when a URI is not present, as will be the case when only your site root URL is requested."
      },
      "date": 1459807274428
    },
    {
      "type": "remove",
      "id": "32cbc1a3d5a0e1c2",
      "date": 1459807285992
    },
    {
      "type": "edit",
      "id": "e3114f9183758009",
      "item": {
        "type": "reference",
        "id": "e3114f9183758009",
        "site": "revigniter.livecode.world",
        "slug": "remapping-handler-calls",
        "title": "Remapping Handler Calls",
        "text": "As noted above, the second segment of the URI typically determines which handler in the controller gets called. "
      },
      "date": 1459807735884
    },
    {
      "item": {
        "type": "factory",
        "id": "e6d99ecd04806f7e"
      },
      "id": "e6d99ecd04806f7e",
      "type": "add",
      "after": "e3114f9183758009",
      "date": 1459807737315
    },
    {
      "type": "edit",
      "id": "e6d99ecd04806f7e",
      "item": {
        "type": "reference",
        "id": "e6d99ecd04806f7e",
        "site": "revigniter.livecode.world",
        "slug": "processing-output",
        "title": "Processing Output",
        "text": "revIgniter has an output library that takes care of sending your final rendered data to the web browser automatically. More information on this can be found in the Views and Output library pages. "
      },
      "date": 1459807741231
    },
    {
      "type": "move",
      "order": [
        "ce43aea5116a66fd",
        "4a429bb53d6e4521",
        "5dbe15cf43873211",
        "0d1ec1f11458046b",
        "3205790f35559d64",
        "af434a4f79a858c4",
        "e3114f9183758009",
        "c01035810121246a",
        "e6d99ecd04806f7e"
      ],
      "id": "e3114f9183758009",
      "date": 1459807743479
    },
    {
      "type": "move",
      "order": [
        "ce43aea5116a66fd",
        "4a429bb53d6e4521",
        "5dbe15cf43873211",
        "0d1ec1f11458046b",
        "3205790f35559d64",
        "af434a4f79a858c4",
        "e3114f9183758009",
        "e6d99ecd04806f7e",
        "c01035810121246a"
      ],
      "id": "e6d99ecd04806f7e",
      "date": 1459807745096
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "id": "00bc50954167a6b8",
        "site": "revigniter.livecode.world",
        "slug": "private-handlers",
        "title": "Private Handlers",
        "text": "In some cases you may want certain handlers hidden from public access. To make a handler private, simply add an underscore as the name prefix and it will not be served via a URL request. "
      },
      "after": "e6d99ecd04806f7e",
      "id": "00bc50954167a6b8",
      "date": 1459807770678
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "id": "2233cc4259ce1537",
        "site": "revigniter.livecode.world",
        "slug": "organizing-controllers-into-sub-folders",
        "title": "Organizing Controllers into Sub-folders",
        "text": "If you are building a large application you might find it convenient to organize your controllers into sub-folders. revIgniter permits you to do this."
      },
      "after": "00bc50954167a6b8",
      "id": "2233cc4259ce1537",
      "date": 1459807772753
    },
    {
      "type": "remove",
      "id": "af434a4f79a858c4",
      "date": 1459807878915
    },
    {
      "type": "remove",
      "id": "e3114f9183758009",
      "date": 1459807880964
    },
    {
      "type": "remove",
      "id": "e6d99ecd04806f7e",
      "date": 1459807883161
    },
    {
      "type": "remove",
      "id": "00bc50954167a6b8",
      "date": 1459807885121
    },
    {
      "type": "remove",
      "id": "2233cc4259ce1537",
      "date": 1459807888774
    },
    {
      "type": "remove",
      "id": "c01035810121246a",
      "date": 1459807891638
    },
    {
      "type": "edit",
      "id": "ce43aea5116a66fd",
      "item": {
        "type": "paragraph",
        "id": "ce43aea5116a66fd",
        "text": "If your URI contains more than two segments you can retrieve them using the [[rigFetchSegment]]() function."
      },
      "date": 1459975610295
    },
    {
      "type": "add",
      "id": "be5c05d8094bc162",
      "item": {
        "type": "paragraph",
        "id": "be5c05d8094bc162",
        "text": "For example, lets say you have a URI like this:"
      },
      "after": "ce43aea5116a66fd",
      "date": 1459975614653
    },
    {
      "type": "edit",
      "id": "5dbe15cf43873211",
      "item": {
        "type": "paragraph",
        "id": "5dbe15cf43873211",
        "text": "The function rigFetchSegment(3) will return \"sandals\" and rigFetchSegment(4) will return \"123\"."
      },
      "date": 1459975652478
    },
    {
      "type": "edit",
      "id": "5dbe15cf43873211",
      "item": {
        "type": "paragraph",
        "id": "5dbe15cf43873211",
        "text": "and given the code below:"
      },
      "date": 1459975660764
    },
    {
      "type": "add",
      "id": "9174c458b9d75200",
      "item": {
        "type": "paragraph",
        "id": "9174c458b9d75200",
        "text": "the function rigFetchSegment(3) will return \"sandals\" and rigFetchSegment(4) will return \"123\"."
      },
      "after": "5dbe15cf43873211",
      "date": 1459975664813
    },
    {
      "type": "move",
      "order": [
        "ce43aea5116a66fd",
        "be5c05d8094bc162",
        "4a429bb53d6e4521",
        "5dbe15cf43873211",
        "0d1ec1f11458046b",
        "9174c458b9d75200",
        "3205790f35559d64"
      ],
      "id": "9174c458b9d75200",
      "date": 1459975667480
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "20084356ff8e69ce",
        "text": "<blockquote><b style='color: red'>Important: </b>\n\nor you can copy this formatting here (as it looks prettier :)\n<p>"
      },
      "after": "9174c458b9d75200",
      "id": "20084356ff8e69ce",
      "date": 1459975761729
    },
    {
      "type": "edit",
      "id": "3205790f35559d64",
      "item": {
        "type": "paragraph",
        "id": "3205790f35559d64",
        "text": "[[Important]]:  "
      },
      "date": 1459975824138
    },
    {
      "type": "remove",
      "id": "3205790f35559d64",
      "date": 1459975826953
    },
    {
      "type": "edit",
      "id": "20084356ff8e69ce",
      "item": {
        "type": "html",
        "id": "20084356ff8e69ce",
        "text": "<blockquote><b style='color: red'>Important: </b>\n\nIf you are using the URI Routing feature, the re-routed segments must be retrieved using the [[rigFetchRsegment]]() function.\n"
      },
      "date": 1459975841334
    }
  ]
}