{
  "title": "Wildcards",
  "story": [
    {
      "text": "Here we describe how yo can use wildcards in revIgniter [[URI Routing]].",
      "id": "5991f85217683eb5",
      "type": "paragraph"
    },
    {
      "type": "paragraph",
      "id": "bd26f6080d892712",
      "text": "A typical wildcard route might look something like this:"
    },
    {
      "text": "put \"catalog/productLookup\" into gRoute[2][\"product/:num\"]",
      "id": "aed850857f51f6bc",
      "type": "code"
    },
    {
      "text": "In a route, the array key contains the URI to be matched, while the array value contains the destination it should be re-routed to. ",
      "id": "14320662297384bc",
      "type": "paragraph"
    },
    {
      "text": "In the above example, if the literal word \"product\" is found in the first segment of the URL, and a number is found in the second segment, the \"catalog\" controller and the \"productLookup\" handler are instead used.",
      "id": "5b8efcb650dce119",
      "type": "paragraph"
    },
    {
      "text": "You can match literal values or you can use two wildcard types:",
      "id": "6f135a662fa11366",
      "type": "paragraph"
    },
    {
      "text": ":num\n:any",
      "id": "637f1a4d4ea39bbb",
      "type": "code"
    },
    {
      "text": "* :num will match a segment containing only numbers.\n* :any will match a segment containing any character.",
      "id": "ec55c905975f6dea",
      "type": "markdown"
    },
    {
      "text": "<blockquote><b style='color: purple'>Note: </b>\n\nThe [[gRoute]] array must be numbered and the key number for reserved routes must be 1. So, the keys of your custom routes must start with 2 as in the example above. Routes will run in the order of the keys of the gRoutes array. Routes with lower key numbers will always take precedence over those with higher ones.<p>",
      "id": "20084356ff8e69ce",
      "type": "html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Wildcards",
        "story": []
      },
      "date": 1459796186249
    },
    {
      "type": "add",
      "item": {
        "text": "A typical wildcard route might look something like this:",
        "id": "5991f85217683eb5",
        "type": "paragraph"
      },
      "id": "5991f85217683eb5",
      "date": 1459796191022
    },
    {
      "type": "add",
      "item": {
        "text": "put \"catalog/productLookup\" into gRoute[2][\"product/:num\"]",
        "id": "aed850857f51f6bc",
        "type": "code"
      },
      "after": "5991f85217683eb5",
      "id": "aed850857f51f6bc",
      "date": 1459796194192
    },
    {
      "type": "add",
      "item": {
        "text": "In a route, the array key contains the URI to be matched, while the array value contains the destination it should be re-routed to. ",
        "id": "14320662297384bc",
        "type": "paragraph"
      },
      "after": "aed850857f51f6bc",
      "id": "14320662297384bc",
      "date": 1459796196831
    },
    {
      "type": "add",
      "item": {
        "text": "In the above example, if the literal word \"product\" is found in the first segment of the URL, and a number is found in the second segment, the \"catalog\" controller and the \"productLookup\" handler are instead used.",
        "id": "5b8efcb650dce119",
        "type": "paragraph"
      },
      "after": "14320662297384bc",
      "id": "5b8efcb650dce119",
      "date": 1459796199186
    },
    {
      "type": "add",
      "item": {
        "text": "You can match literal values or you can use two wildcard types:",
        "id": "6f135a662fa11366",
        "type": "paragraph"
      },
      "after": "5b8efcb650dce119",
      "id": "6f135a662fa11366",
      "date": 1459796205114
    },
    {
      "type": "add",
      "item": {
        "text": ":num\n:any",
        "id": "637f1a4d4ea39bbb",
        "type": "code"
      },
      "after": "6f135a662fa11366",
      "id": "637f1a4d4ea39bbb",
      "date": 1459796207378
    },
    {
      "type": "add",
      "item": {
        "text": "* :num will match a segment containing only numbers.\n* :any will match a segment containing any character.",
        "id": "ec55c905975f6dea",
        "type": "markdown"
      },
      "after": "637f1a4d4ea39bbb",
      "id": "ec55c905975f6dea",
      "date": 1459796213406
    },
    {
      "type": "add",
      "item": {
        "text": "<blockquote><b style='color: purple'>Note: </b>\n\nThe [[gRoute]] array must be numbered and the key number for reserved routes must be 1. So, the keys of your custom routes must start with 2 as in the example above. Routes will run in the order of the keys of the gRoutes array. Routes with lower key numbers will always take precedence over those with higher ones.<p>",
        "id": "20084356ff8e69ce",
        "type": "html"
      },
      "after": "ec55c905975f6dea",
      "id": "20084356ff8e69ce",
      "date": 1459796216866
    },
    {
      "type": "edit",
      "id": "5991f85217683eb5",
      "item": {
        "text": "Here we describe how yo can use wildcards in revIgniter [[URI Routing]].",
        "id": "5991f85217683eb5",
        "type": "paragraph"
      },
      "date": 1459796284582
    },
    {
      "type": "add",
      "id": "bd26f6080d892712",
      "item": {
        "type": "paragraph",
        "id": "bd26f6080d892712",
        "text": "A typical wildcard route might look something like this:"
      },
      "after": "5991f85217683eb5",
      "date": 1459796285839
    }
  ]
}