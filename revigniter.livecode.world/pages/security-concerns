{
  "title": "Security Concerns",
  "story": [
    {
      "type": "paragraph",
      "id": "e227cb08-efaa-4699-9969-bf7bb6c75334",
      "text": "The main reason to have this restriction is because without the same-origin policy there would be a security risk  - [https://en.wikipedia.org/wiki/Same_Origin_policy#Security_Concerns wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "3868173e7e305450",
      "text": "Assume that a user is visiting a banking website and doesn't log out. Then he goes to any random other site and that site has some malicious JavaScript code running in the background that requests data from the banking site. "
    },
    {
      "type": "paragraph",
      "id": "589c112edcf0424b",
      "text": "Because the user is still logged in on the banking site, that malicious code could do anything on the banking site. "
    },
    {
      "type": "paragraph",
      "id": "30cd8a5fe03e5d67",
      "text": "For example get a list of your last transactions, create a new transaction, etc. This is because the browser can send and receive session cookies to the banking website based on the domain of the banking website. "
    },
    {
      "type": "paragraph",
      "id": "7bf87898ee2723b3",
      "text": "A user visiting that malicious site would expect that the site he is visiting has no access to the banking session cookie. "
    },
    {
      "type": "paragraph",
      "id": "cbc889862c366d72",
      "text": "While this is true, the JavaScript has no direct access to the banking session cookie, but it could still send and receive requests to the banking site with the banking site's session cookie, essentially acting as a normal user of the banking site. "
    },
    {
      "type": "paragraph",
      "id": "4b198fbccc13bd4d",
      "text": "Regarding the sending of new transactions, even CSRF ([[Cross-site request forgery]]) protections by the banking site have no effect, because the script can simply do the same as the user would do. "
    },
    {
      "type": "paragraph",
      "id": "99ffe48d0587e9b9",
      "text": "So this is a concern for all sites where you use sessions and/or need to be logged in. If the banking site from the example (or any other site of course) only presents public data and you cannot trigger anything, then there is usually no danger which the same-origin policy protects against. "
    },
    {
      "type": "paragraph",
      "id": "11072f17f52e094e",
      "text": "Also, if the two sites are under control of the same party or trust each other completely, then there is probably no danger either."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "Security Concerns"
      },
      "date": 1459815944761,
      "source": {
        "pageTitle": "Same-origin policy",
        "pageSlug": "Same-origin_policy",
        "url": "https://en.wikipedia.org/wiki/Same_Origin_policy#Security_Concerns",
        "date": 1459815944760,
        "transport": "https://livecode.world/mediawiki/transportAgain",
        "rev": 711728145,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "fork",
      "date": 1459815960262
    },
    {
      "type": "edit",
      "id": "e227cb08-efaa-4699-9969-bf7bb6c75334",
      "item": {
        "type": "paragraph",
        "id": "e227cb08-efaa-4699-9969-bf7bb6c75334",
        "text": "The main reason to have this restriction is because without the same-origin policy there would be a security risk. "
      },
      "date": 1459815970641
    },
    {
      "type": "add",
      "id": "3868173e7e305450",
      "item": {
        "type": "paragraph",
        "id": "3868173e7e305450",
        "text": "Assume that a user is visiting a banking website and doesn't log out. Then he goes to any random other site and that site has some malicious JavaScript code running in the background that requests data from the banking site. "
      },
      "after": "e227cb08-efaa-4699-9969-bf7bb6c75334",
      "date": 1459815975505
    },
    {
      "type": "add",
      "id": "589c112edcf0424b",
      "item": {
        "type": "paragraph",
        "id": "589c112edcf0424b",
        "text": "Because the user is still logged in on the banking site, that malicious code could do anything on the banking site. "
      },
      "after": "3868173e7e305450",
      "date": 1459815979073
    },
    {
      "type": "add",
      "id": "30cd8a5fe03e5d67",
      "item": {
        "type": "paragraph",
        "id": "30cd8a5fe03e5d67",
        "text": "For example get a list of your last transactions, create a new transaction, etc. This is because the browser can send and receive session cookies to the banking website based on the domain of the banking website. "
      },
      "after": "589c112edcf0424b",
      "date": 1459815988334
    },
    {
      "type": "add",
      "id": "7bf87898ee2723b3",
      "item": {
        "type": "paragraph",
        "id": "7bf87898ee2723b3",
        "text": "A user visiting that malicious site would expect that the site he is visiting has no access to the banking session cookie. "
      },
      "after": "30cd8a5fe03e5d67",
      "date": 1459815992881
    },
    {
      "type": "add",
      "id": "cbc889862c366d72",
      "item": {
        "type": "paragraph",
        "id": "cbc889862c366d72",
        "text": "While this is true, the JavaScript has no direct access to the banking session cookie, but it could still send and receive requests to the banking site with the banking site's session cookie, essentially acting as a normal user of the banking site. "
      },
      "after": "7bf87898ee2723b3",
      "date": 1459815997455
    },
    {
      "type": "add",
      "id": "4b198fbccc13bd4d",
      "item": {
        "type": "paragraph",
        "id": "4b198fbccc13bd4d",
        "text": "Regarding the sending of new transactions, even CSRF ([[Cross-site request forgery]]) protections by the banking site have no effect, because the script can simply do the same as the user would do. "
      },
      "after": "cbc889862c366d72",
      "date": 1459816005663
    },
    {
      "type": "add",
      "id": "99ffe48d0587e9b9",
      "item": {
        "type": "paragraph",
        "id": "99ffe48d0587e9b9",
        "text": "So this is a concern for all sites where you use sessions and/or need to be logged in. If the banking site from the example (or any other site of course) only presents public data and you cannot trigger anything, then there is usually no danger which the same-origin policy protects against. "
      },
      "after": "4b198fbccc13bd4d",
      "date": 1459816011032
    },
    {
      "type": "add",
      "id": "11072f17f52e094e",
      "item": {
        "type": "paragraph",
        "id": "11072f17f52e094e",
        "text": "Also, if the two sites are under control of the same party or trust each other completely, then there is probably no danger either."
      },
      "after": "99ffe48d0587e9b9",
      "date": 1459816016521
    },
    {
      "type": "edit",
      "id": "e227cb08-efaa-4699-9969-bf7bb6c75334",
      "item": {
        "type": "paragraph",
        "id": "e227cb08-efaa-4699-9969-bf7bb6c75334",
        "text": "The main reason to have this restriction is because without the same-origin policy there would be a security risk  - [https://en.wikipedia.org/wiki/Same_Origin_policy#Security_Concerns wikipedia]"
      },
      "date": 1459816024873
    }
  ]
}