{
  "title": "Same-origin policy",
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "Same-origin policy"
      },
      "date": 1459815903723,
      "source": {
        "pageTitle": "Same-origin policy",
        "pageSlug": "Same-origin_policy",
        "url": "https://en.wikipedia.org/wiki/Same_Origin_policy",
        "date": 1459815903722,
        "link_dictionary": {
          "wiki_links": {
            "Origin determination rules": {
              "section_number": 2,
              "section_level": 2,
              "dot_number": 2
            },
            "History": {
              "section_number": 1,
              "section_level": 2,
              "dot_number": 1
            },
            "References": {
              "section_number": 13,
              "section_level": 2,
              "dot_number": 8
            },
            "Corner cases and exceptions": {
              "section_number": 10,
              "section_level": 2,
              "dot_number": 5
            },
            "External links": {
              "section_number": 14,
              "section_level": 2,
              "dot_number": 9
            },
            "Security Concerns": {
              "section_number": 3,
              "section_level": 2,
              "dot_number": 3
            },
            "See also": {
              "section_number": 12,
              "section_level": 2,
              "dot_number": 7
            },
            "Relaxing the same-origin policy": {
              "section_number": 4,
              "section_level": 2,
              "dot_number": 4
            },
            "Workarounds": {
              "section_number": 11,
              "section_level": 2,
              "dot_number": 6
            }
          },
          "default": {
            "transport": "https://livecode.world/mediawiki/importSection"
          }
        },
        "transport": "https://livecode.world/mediawiki/transportAgain",
        "rev": 711728145,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "fork",
      "date": 1459815907018
    },
    {
      "item": {
        "type": "factory",
        "id": "910cd68c1d20867c"
      },
      "id": "910cd68c1d20867c",
      "type": "add",
      "after": "4a7d3e76-a621-4860-b3ee-70ddbd23d286",
      "date": 1459816029218
    },
    {
      "type": "edit",
      "id": "910cd68c1d20867c",
      "item": {
        "type": "reference",
        "id": "910cd68c1d20867c",
        "site": "revigniter.livecode.world",
        "slug": "security-concerns",
        "title": "Security Concerns",
        "text": "The main reason to have this restriction is because without the same-origin policy there would be a security risk  - [https://en.wikipedia.org/wiki/Same_Origin_policy#Security_Concerns wikipedia]"
      },
      "date": 1459816031429
    },
    {
      "item": {
        "type": "factory",
        "id": "3cfd766d8fc893a6"
      },
      "id": "3cfd766d8fc893a6",
      "type": "add",
      "after": "910cd68c1d20867c",
      "date": 1459816050791
    },
    {
      "type": "edit",
      "id": "3cfd766d8fc893a6",
      "item": {
        "type": "reference",
        "id": "3cfd766d8fc893a6",
        "site": "revigniter.livecode.world",
        "slug": "relaxing-the-same-origin-policy",
        "title": "Relaxing the same-origin policy",
        "text": "In some circumstances the same-origin policy is too restrictive, posing problems for large websites that use multiple [[subdomain]]s. Here are some techniques for relaxing it: - [https://en.wikipedia.org/wiki/Same_Origin_policy#Relaxing_the_same-origin_policy wikipedia]"
      },
      "date": 1459816054303
    },
    {
      "item": {
        "type": "factory",
        "id": "24c066bf54f69514"
      },
      "id": "24c066bf54f69514",
      "type": "add",
      "after": "3cfd766d8fc893a6",
      "date": 1459816087580
    },
    {
      "type": "edit",
      "id": "24c066bf54f69514",
      "item": {
        "type": "reference",
        "id": "24c066bf54f69514",
        "site": "revigniter.livecode.world",
        "slug": "corner-cases-and-exceptions",
        "title": "Corner cases and exceptions",
        "text": "The behavior of same-origin checks and related mechanisms is not well-defined in a number of [[corner case]]s such as for pseudo-protocols that do not have a clearly defined host name or port associated with their URLs (file: ([[file URI scheme]]), data: ([[data URI scheme]]), etc.). This historically caused a fair number of security problems, such as the generally undesirable ability of any locally stored HTML file to access all other files on the disk, or communicate with any site on the Internet - [https://en.wikipedia.org/wiki/Same_Origin_policy#Corner_cases_and_exceptions wikipedia]"
      },
      "date": 1459816090559
    },
    {
      "type": "edit",
      "id": "24c066bf54f69514",
      "item": {
        "type": "reference",
        "id": "24c066bf54f69514",
        "site": "revigniter.livecode.world",
        "slug": "corner-cases-and-exceptions",
        "title": "Corner cases and exceptions",
        "text": "The behavior of same-origin checks and related mechanisms is not well-defined in a number of [[corner case]]s such as for pseudo-protocols that do not have a clearly defined host name or port associated with their URLs (file: ([[file URI scheme]]), data: ([[data URI scheme]]), etc.)."
      },
      "date": 1459816109020
    },
    {
      "item": {
        "type": "factory",
        "id": "a7915367699f2521"
      },
      "id": "a7915367699f2521",
      "type": "add",
      "after": "24c066bf54f69514",
      "date": 1459816223829
    },
    {
      "type": "edit",
      "id": "a7915367699f2521",
      "item": {
        "type": "reference",
        "id": "a7915367699f2521",
        "site": "revigniter.livecode.world",
        "slug": "workarounds",
        "title": "Workarounds",
        "text": "To enable developers to, in a controlled manner, circumvent the same-origin policy, a number of \"hacks\" such as using the [[fragment identifier]] or the [[window.name]] property have been used to pass data between documents residing in different domains  - [https://en.wikipedia.org/wiki/Same_Origin_policy#Workarounds wikipedia]"
      },
      "date": 1459816225766
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "5b96bb31-8ac0-4fd7-8e0d-e78e08e0e0c1",
        "text": "* [[Cross-origin resource sharing]] (CORS) - [https://en.wikipedia.org/wiki/Same_Origin_policy#See_also wikipedia]"
      },
      "after": "a7915367699f2521",
      "id": "5b96bb31-8ac0-4fd7-8e0d-e78e08e0e0c1",
      "date": 1459816243615
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
        "text": "* [[Cross-site scripting]] (XSS)\n* [[Cross-site request forgery]] (CSRF)\n* [[Cross-document messaging]]"
      },
      "after": "5b96bb31-8ac0-4fd7-8e0d-e78e08e0e0c1",
      "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
      "date": 1459816247036
    },
    {
      "type": "edit",
      "id": "5b96bb31-8ac0-4fd7-8e0d-e78e08e0e0c1",
      "item": {
        "type": "markdown",
        "id": "5b96bb31-8ac0-4fd7-8e0d-e78e08e0e0c1",
        "text": "# See also"
      },
      "date": 1459816265991
    },
    {
      "type": "edit",
      "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
      "item": {
        "type": "markdown",
        "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
        "text": "* [[Cross-origin resource sharing]]]\n* [[Cross-site scripting]] (XSS)\n* [[Cross-site request forgery]] (CSRF)\n* [[Cross-document messaging]]"
      },
      "date": 1459816287538
    },
    {
      "type": "edit",
      "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
      "item": {
        "type": "markdown",
        "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
        "text": "* [[Cross-origin resource sharing]]\n* [[Cross-site scripting]] (XSS)\n* [[Cross-site request forgery]] (CSRF)\n* [[Cross-document messaging]]"
      },
      "date": 1459816355556
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a7a80f07-6035-44ac-a507-0830a631ff1d",
        "text": "The concept of same-origin policy dates back to [[Netscape Navigator 2]] in 1995. All modern browsers implement some form of the Same-Origin Policy as it is an important security cornerstone.[http://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy Browser Security Handbook, part 2] The policies are not required to match an exact specification [http://www.w3.org/Security/wiki/Same_Origin_Policy Same Origin Policy] but are often extended to define roughly compatible security boundaries for other web technologies, such as [[Microsoft Silverlight]], [[Adobe Flash]], or [[Adobe Acrobat]], or for mechanisms other than direct DOM manipulation, such as [[XMLHttpRequest]] - [https://en.wikipedia.org/wiki/Same_Origin_policy#History wikipedia]"
      },
      "after": "833c77a2-3e25-44a4-a1f6-c59c4b482885",
      "id": "a7a80f07-6035-44ac-a507-0830a631ff1d",
      "date": 1459816385181
    },
    {
      "type": "add",
      "id": "65e44915b57e454c",
      "item": {
        "type": "paragraph",
        "id": "65e44915b57e454c",
        "text": "# history"
      },
      "after": "833c77a2-3e25-44a4-a1f6-c59c4b482885",
      "date": 1459816395458
    },
    {
      "type": "edit",
      "id": "65e44915b57e454c",
      "item": {
        "type": "paragraph",
        "id": "65e44915b57e454c",
        "text": "# History"
      },
      "date": 1459816400157
    },
    {
      "type": "edit",
      "id": "65e44915b57e454c",
      "item": {
        "type": "markdown",
        "id": "65e44915b57e454c",
        "text": "# History"
      },
      "date": 1459816401070
    },
    {
      "type": "edit",
      "id": "a7a80f07-6035-44ac-a507-0830a631ff1d",
      "item": {
        "type": "paragraph",
        "id": "a7a80f07-6035-44ac-a507-0830a631ff1d",
        "text": "The concept of same-origin policy dates back to [[Netscape Navigator 2]] in 1995. All modern browsers implement some form of the Same-Origin Policy as it is an important security cornerstone.[http://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy Browser Security Handbook, part 2] "
      },
      "date": 1459816426574
    },
    {
      "type": "add",
      "id": "a762ae29e669497d",
      "item": {
        "type": "paragraph",
        "id": "a762ae29e669497d",
        "text": "The policies are not required to match an exact specification [http://www.w3.org/Security/wiki/Same_Origin_Policy Same Origin Policy] but are often extended to define roughly compatible security boundaries for other web technologies, such as [[Microsoft Silverlight]], [[Adobe Flash]], or [[Adobe Acrobat]], or for mechanisms other than direct DOM manipulation, such as [[XMLHttpRequest]] - [https://en.wikipedia.org/wiki/Same_Origin_policy#History wikipedia]"
      },
      "after": "a7a80f07-6035-44ac-a507-0830a631ff1d",
      "date": 1459816443870
    },
    {
      "type": "edit",
      "id": "a7a80f07-6035-44ac-a507-0830a631ff1d",
      "item": {
        "type": "paragraph",
        "id": "a7a80f07-6035-44ac-a507-0830a631ff1d",
        "text": "The concept of same-origin policy dates back to [[Netscape Navigator 2]] in 1995. All modern browsers implement some form of the Same-Origin Policy as it is an important security cornerstone - [http://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy code.google.com] "
      },
      "date": 1459816475757
    },
    {
      "type": "edit",
      "id": "4a7d3e76-a621-4860-b3ee-70ddbd23d286",
      "item": {
        "type": "markdown",
        "id": "4a7d3e76-a621-4860-b3ee-70ddbd23d286",
        "text": "# See also\n* [[Origin determination rules]]\n"
      },
      "date": 1459816513134
    },
    {
      "type": "edit",
      "id": "4a7d3e76-a621-4860-b3ee-70ddbd23d286",
      "item": {
        "type": "markdown",
        "id": "4a7d3e76-a621-4860-b3ee-70ddbd23d286",
        "text": "# See also"
      },
      "date": 1459816531871
    },
    {
      "type": "edit",
      "id": "5b96bb31-8ac0-4fd7-8e0d-e78e08e0e0c1",
      "item": {
        "type": "markdown",
        "id": "5b96bb31-8ac0-4fd7-8e0d-e78e08e0e0c1",
        "text": "# And"
      },
      "date": 1459816539768
    },
    {
      "type": "edit",
      "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
      "item": {
        "type": "markdown",
        "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
        "text": "* [[Cross-origin resource sharing]]\n* [[Cross-site scripting]] (XSS)\n* [[Cross-site request forgery]] (CSRF)\n* [[Cross-document messaging]]\n* [[Origin determination rules]]"
      },
      "date": 1459816547327
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "be141e2d-5258-42de-8318-6a811d74b65f",
      "text": "In computing, the same-origin policy is an important concept in the web application security model. Under the policy, a web browser permits scripts contained in a first web page to access data in a second web page, but only if both web pages have the same origin. An origin is defined as a combination of URI scheme, hostname, and port number. This policy prevents a malicious script on one page from obtaining access to sensitive data on another web page through that page's Document Object Model - [https://en.wikipedia.org/wiki/Same_Origin_policy wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "833c77a2-3e25-44a4-a1f6-c59c4b482885",
      "text": "This mechanism bears a particular significance for modern web applications that extensively depend on HTTP cookies to maintain authenticated user sessions, as servers act based on the HTTP cookie information to reveal sensitive information or take state-changing actions. A strict separation between content provided by unrelated sites must be maintained on the client-side to prevent the loss of data confidentiality or integrity."
    },
    {
      "type": "markdown",
      "id": "65e44915b57e454c",
      "text": "# History"
    },
    {
      "type": "paragraph",
      "id": "a7a80f07-6035-44ac-a507-0830a631ff1d",
      "text": "The concept of same-origin policy dates back to [[Netscape Navigator 2]] in 1995. All modern browsers implement some form of the Same-Origin Policy as it is an important security cornerstone - [http://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy code.google.com] "
    },
    {
      "type": "paragraph",
      "id": "a762ae29e669497d",
      "text": "The policies are not required to match an exact specification [http://www.w3.org/Security/wiki/Same_Origin_Policy Same Origin Policy] but are often extended to define roughly compatible security boundaries for other web technologies, such as [[Microsoft Silverlight]], [[Adobe Flash]], or [[Adobe Acrobat]], or for mechanisms other than direct DOM manipulation, such as [[XMLHttpRequest]] - [https://en.wikipedia.org/wiki/Same_Origin_policy#History wikipedia]"
    },
    {
      "type": "markdown",
      "id": "4a7d3e76-a621-4860-b3ee-70ddbd23d286",
      "text": "# See also"
    },
    {
      "type": "reference",
      "id": "910cd68c1d20867c",
      "site": "revigniter.livecode.world",
      "slug": "security-concerns",
      "title": "Security Concerns",
      "text": "The main reason to have this restriction is because without the same-origin policy there would be a security risk  - [https://en.wikipedia.org/wiki/Same_Origin_policy#Security_Concerns wikipedia]"
    },
    {
      "type": "reference",
      "id": "3cfd766d8fc893a6",
      "site": "revigniter.livecode.world",
      "slug": "relaxing-the-same-origin-policy",
      "title": "Relaxing the same-origin policy",
      "text": "In some circumstances the same-origin policy is too restrictive, posing problems for large websites that use multiple [[subdomain]]s. Here are some techniques for relaxing it: - [https://en.wikipedia.org/wiki/Same_Origin_policy#Relaxing_the_same-origin_policy wikipedia]"
    },
    {
      "type": "reference",
      "id": "24c066bf54f69514",
      "site": "revigniter.livecode.world",
      "slug": "corner-cases-and-exceptions",
      "title": "Corner cases and exceptions",
      "text": "The behavior of same-origin checks and related mechanisms is not well-defined in a number of [[corner case]]s such as for pseudo-protocols that do not have a clearly defined host name or port associated with their URLs (file: ([[file URI scheme]]), data: ([[data URI scheme]]), etc.)."
    },
    {
      "type": "reference",
      "id": "a7915367699f2521",
      "site": "revigniter.livecode.world",
      "slug": "workarounds",
      "title": "Workarounds",
      "text": "To enable developers to, in a controlled manner, circumvent the same-origin policy, a number of \"hacks\" such as using the [[fragment identifier]] or the [[window.name]] property have been used to pass data between documents residing in different domains  - [https://en.wikipedia.org/wiki/Same_Origin_policy#Workarounds wikipedia]"
    },
    {
      "type": "markdown",
      "id": "5b96bb31-8ac0-4fd7-8e0d-e78e08e0e0c1",
      "text": "# And"
    },
    {
      "type": "markdown",
      "id": "98a8dba3-499b-47cf-b9d1-92b91d3516ec",
      "text": "* [[Cross-origin resource sharing]]\n* [[Cross-site scripting]] (XSS)\n* [[Cross-site request forgery]] (CSRF)\n* [[Cross-document messaging]]\n* [[Origin determination rules]]"
    }
  ]
}