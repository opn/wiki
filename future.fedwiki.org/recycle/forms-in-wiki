{
  "title": "Forms in Wiki",
  "story": [
    {
      "type": "paragraph",
      "id": "5084e888be7e4813",
      "text": "Here we experiment with [[HTML Form]]s in wiki. We look to hook the HTML plugin into the [[Transporter]] mechanism, such that the [[About HTML Plugin]] takes not of and [[Form Action]] requests, and looks for [[Page JSON]] in the response. If it finds this it renders a [[ghost page]], otherwise it opens an external page if it finds a simple URI, or HTML in the returned JSON."
    },
    {
      "type": "paragraph",
      "id": "25e07f2970f86cdb",
      "text": "Below is an example a a simple [[HTML Form]]:"
    },
    {
      "type": "html",
      "id": "0c89276bf52b187f",
      "text": "<form action=\"https://livecode.world/mediawiki\">\n  First name:<br>\n  <input type=\"text\" name=\"firstname\" value=\"Mickey\"><br>\n  Last name:<br>\n  <input type=\"text\" name=\"lastname\" value=\"Mouse\"><br><br>\n  <input type=\"submit\" value=\"Submit\">\n</form>"
    },
    {
      "type": "paragraph",
      "id": "3907f6949fa0339d",
      "text": "Pressing submit shows replaces this web page with the returned JSON"
    },
    {
      "type": "markdown",
      "id": "39152029fc5ff3c9",
      "text": "# Passwords"
    },
    {
      "type": "html",
      "id": "41be6a0aa55320cc",
      "text": "Here is a password field in a form:\n<p>\n<form action=\"https://rest.livecode.world/echo\">\nUsername: <input type=\"text\" name=\"user\">\n<p>\nPassword: <input type=\"password\" name=\"password\">\n<p>\n<input type=\"submit\" value=\"Submit\">\n</form>\n\n<p><b>Note:</b> The characters in a password field are masked (shown as asterisks or circles).</p>"
    },
    {
      "type": "paragraph",
      "id": "3306c7beb0db7e45",
      "text": "What is interesting about this is that in combination with a browser extension like [[LastPass]] the username and password is securely stored in the browser cache. "
    },
    {
      "type": "paragraph",
      "id": "3ae5936d252f0779",
      "text": "This enables us to include information like authentication keys for user accounts and services in a relatively secure manor and interact with transporters. Naturally this should only be over [[HTTPS]]."
    },
    {
      "type": "html",
      "id": "20084356ff8e69ce",
      "text": "<blockquote><b style='color: purple'>Note: </b>\n\nthere is an issue because the wiki form uses AJAX to send it's data. You therefore need to specifically add the form to LastPass using the <b>Save All Entered Data</b> feature - [https://helpdesk.lastpass.com/adding-a-site/#h1 lastpass.com]\n<p>"
    },
    {
      "type": "paragraph",
      "id": "c0da69551dd2424a",
      "text": "Due to the dynamic nature of the [[LineUp]] in wiki, this works best on the [[Welcome Visitors]] page, or at least a page you reliably open given a consistent LineUp."
    },
    {
      "type": "paragraph",
      "id": "eb6e1439dd2a6968",
      "text": "For more information on [[LastPass Forms]] see here - [https://lastpass.com/support.php?cmd=showfaq&id=455 lastpass.com]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Forms in Wiki",
        "story": []
      },
      "date": 1460833636784
    },
    {
      "item": {
        "type": "factory",
        "id": "5084e888be7e4813"
      },
      "id": "5084e888be7e4813",
      "type": "add",
      "date": 1460833637882
    },
    {
      "item": {
        "type": "factory",
        "id": "0c89276bf52b187f"
      },
      "id": "0c89276bf52b187f",
      "type": "add",
      "after": "5084e888be7e4813",
      "date": 1460833639104
    },
    {
      "type": "edit",
      "id": "0c89276bf52b187f",
      "item": {
        "type": "html",
        "id": "0c89276bf52b187f",
        "text": "<form>\n  First name:<br>\n  <input type=\"text\" name=\"firstname\"><br>\n  Last name:<br>\n  <input type=\"text\" name=\"lastname\">\n</form>"
      },
      "date": 1460833641758
    },
    {
      "type": "edit",
      "id": "0c89276bf52b187f",
      "item": {
        "type": "html",
        "id": "0c89276bf52b187f",
        "text": "<form action=\"action_page.php\">\n  First name:<br>\n  <input type=\"text\" name=\"firstname\" value=\"Mickey\"><br>\n  Last name:<br>\n  <input type=\"text\" name=\"lastname\" value=\"Mouse\"><br><br>\n  <input type=\"submit\" value=\"Submit\">\n</form>"
      },
      "date": 1460833707034
    },
    {
      "type": "edit",
      "id": "0c89276bf52b187f",
      "item": {
        "type": "html",
        "id": "0c89276bf52b187f",
        "text": "<form action=\"https://livecode.world/mediawiki\">\n  First name:<br>\n  <input type=\"text\" name=\"firstname\" value=\"Mickey\"><br>\n  Last name:<br>\n  <input type=\"text\" name=\"lastname\" value=\"Mouse\"><br><br>\n  <input type=\"submit\" value=\"Submit\">\n</form>"
      },
      "date": 1460833720755
    },
    {
      "type": "edit",
      "id": "5084e888be7e4813",
      "item": {
        "type": "paragraph",
        "id": "5084e888be7e4813",
        "text": "Here we experiment with [[HTML Form]]s in wiki. We look to hook the HTML plugin into the [[Transporter]] mechanism, such that the [[About HTML Plugin]] takes not of and [[Form Action]] requests, and looks for [[Page JSON]] in the response. If it finds this it renders a [[ghost page]], otherwise it opens an external page if it finds a simple URI in the returned JSON."
      },
      "date": 1460838492298
    },
    {
      "type": "add",
      "id": "25e07f2970f86cdb",
      "item": {
        "type": "paragraph",
        "id": "25e07f2970f86cdb",
        "text": "Below is an example a a simple [[HTML Form]]:"
      },
      "after": "5084e888be7e4813",
      "date": 1460838529187
    },
    {
      "item": {
        "type": "factory",
        "id": "3907f6949fa0339d"
      },
      "id": "3907f6949fa0339d",
      "type": "add",
      "after": "0c89276bf52b187f",
      "date": 1460838532173
    },
    {
      "type": "edit",
      "id": "3907f6949fa0339d",
      "item": {
        "type": "paragraph",
        "id": "3907f6949fa0339d",
        "text": "Pressing submit shows replaces this web page with the returned JSON"
      },
      "date": 1460838578609
    },
    {
      "type": "edit",
      "id": "5084e888be7e4813",
      "item": {
        "type": "paragraph",
        "id": "5084e888be7e4813",
        "text": "Here we experiment with [[HTML Form]]s in wiki. We look to hook the HTML plugin into the [[Transporter]] mechanism, such that the [[About HTML Plugin]] takes not of and [[Form Action]] requests, and looks for [[Page JSON]] in the response. If it finds this it renders a [[ghost page]], otherwise it opens an external page if it finds a simple URI, or HTML in the returned JSON."
      },
      "date": 1460838594976
    },
    {
      "item": {
        "type": "factory",
        "id": "68acdeb845d6d34c"
      },
      "id": "68acdeb845d6d34c",
      "type": "add",
      "after": "3907f6949fa0339d",
      "date": 1461353291089
    },
    {
      "item": {
        "type": "factory",
        "id": "9f740ffbba6e3349"
      },
      "id": "9f740ffbba6e3349",
      "type": "add",
      "after": "68acdeb845d6d34c",
      "date": 1461353291913
    },
    {
      "item": {
        "type": "factory",
        "id": "0ff043f8a07feccd"
      },
      "id": "0ff043f8a07feccd",
      "type": "add",
      "after": "9f740ffbba6e3349",
      "date": 1461353292889
    },
    {
      "type": "remove",
      "id": "68acdeb845d6d34c",
      "date": 1461353306279
    },
    {
      "type": "remove",
      "id": "9f740ffbba6e3349",
      "date": 1461353327449
    },
    {
      "type": "remove",
      "id": "0ff043f8a07feccd",
      "date": 1461353339387
    },
    {
      "item": {
        "type": "factory",
        "id": "53b1671f6a810ebc"
      },
      "id": "53b1671f6a810ebc",
      "type": "add",
      "after": "3907f6949fa0339d",
      "date": 1461421500566
    },
    {
      "type": "remove",
      "id": "53b1671f6a810ebc",
      "date": 1461421504429
    },
    {
      "item": {
        "type": "factory",
        "id": "481f306b82191353"
      },
      "id": "481f306b82191353",
      "type": "add",
      "after": "3907f6949fa0339d",
      "date": 1461421675876
    },
    {
      "type": "remove",
      "id": "481f306b82191353",
      "date": 1461421678100
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1511895820461
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "39152029fc5ff3c9",
        "text": "# Passwords"
      },
      "after": "3907f6949fa0339d",
      "id": "39152029fc5ff3c9",
      "date": 1511895833501
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "41be6a0aa55320cc",
        "text": "Here is a password field in a form:\n<p>\n<form action=\"https://rest.livecode.world/echo\">\nUsername: <input type=\"text\" name=\"user\">\n<p>\nPassword: <input type=\"password\" name=\"password\">\n<p>\n<input type=\"submit\" value=\"Submit\">\n</form>\n\n<p><b>Note:</b> The characters in a password field are masked (shown as asterisks or circles).</p>"
      },
      "after": "39152029fc5ff3c9",
      "id": "41be6a0aa55320cc",
      "date": 1511895838693
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3306c7beb0db7e45",
        "text": "What is interesting about this is that in combination with a browser extension like [[LastPass]] the username and password is securely stored in the browser cache. "
      },
      "after": "41be6a0aa55320cc",
      "id": "3306c7beb0db7e45",
      "date": 1511895844323
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3ae5936d252f0779",
        "text": "This enables us to include information like authentication keys for user accounts and services in a relatively secure manor and interact with transporters. Naturally this should only be over [[HTTPS]]."
      },
      "after": "3306c7beb0db7e45",
      "id": "3ae5936d252f0779",
      "date": 1511895848852
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "20084356ff8e69ce",
        "text": "<blockquote><b style='color: purple'>Note: </b>\n\nthere is an issue because the wiki form uses AJAX to send it's data. You therefore need to specifically add the form to LastPass using the <b>Save All Entered Data</b> feature - [https://helpdesk.lastpass.com/adding-a-site/#h1 lastpass.com]\n<p>"
      },
      "after": "3ae5936d252f0779",
      "id": "20084356ff8e69ce",
      "date": 1511895851897
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c0da69551dd2424a",
        "text": "Due to the dynamic nature of the [[LineUp]] in wiki, this works best on the [[Welcome Visitors]] page, or at least a page you reliably open given a consistent LineUp."
      },
      "after": "20084356ff8e69ce",
      "id": "c0da69551dd2424a",
      "date": 1511895856551
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "eb6e1439dd2a6968",
        "text": "For more information on [[LastPass Forms]] see here - [https://lastpass.com/support.php?cmd=showfaq&id=455 lastpass.com]"
      },
      "after": "c0da69551dd2424a",
      "id": "eb6e1439dd2a6968",
      "date": 1511895862011
    },
    {
      "type": "fork",
      "site": "c0de.academy",
      "date": 1511896011435
    }
  ]
}