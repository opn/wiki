{
  "title": "Javascript that replaces itself",
  "story": [
    {
      "type": "paragraph",
      "id": "3665deed0476dc89",
      "text": "is this even possible. What we would like is a static file, served by IPFS and containing javascript, that when loaded using an [[HTTP GET]] request returns json dynamically."
    },
    {
      "type": "paragraph",
      "id": "1ba1767cba44178c",
      "text": "I think this question is confused, in that the browser can do this - but this is not the same thing as a REST call - code that makes the GET request will just get back whatever the server returns. The result displayed in the browser is not serving up content an opening sockets - the server is. "
    },
    {
      "type": "paragraph",
      "id": "df2e2fbfba57916e",
      "text": "For the latter we need some browser based socket api - something like WebRTC which can access the DOM and local storage."
    },
    {
      "type": "markdown",
      "id": "851f4e75e1025880",
      "text": "* Replace- entire page - [http://stackoverflow.com/questions/31577163/how-to-replace-entire-page-after-javascript-code-done-executing stackoverflow]\n* jquery relacewith() - [http://www.w3schools.com/jquery/html_replacewith.asp w3schools]"
    },
    {
      "type": "video",
      "id": "1d6ce37663e2265b",
      "text": "YOUTUBE yQH5Vkzw8ko\nPeerServer is a peer-to-peer client server using WebRTC, where your browser acts as a server for other browsers across WebRTC peer-to-peer data channels - [http://www.peer-server.com/ peer-server.com]"
    },
    {
      "type": "paragraph",
      "id": "9376b9a252168624",
      "text": "A better alternative is to go with HTML and turn Fedwiki into a [[Hypermedia API]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Javascript that replaces itself",
        "story": []
      },
      "date": 1467113061621
    },
    {
      "item": {
        "type": "factory",
        "id": "3665deed0476dc89"
      },
      "id": "3665deed0476dc89",
      "type": "add",
      "date": 1467113062878
    },
    {
      "type": "edit",
      "id": "3665deed0476dc89",
      "item": {
        "type": "paragraph",
        "id": "3665deed0476dc89",
        "text": "is this even possible. What we would like is a static file, served by IPFS and containing javascript, that when loaded using an [[HTTP GET]] request returns json dynamically."
      },
      "date": 1467113148056
    },
    {
      "type": "add",
      "id": "1ba1767cba44178c",
      "item": {
        "type": "paragraph",
        "id": "1ba1767cba44178c",
        "text": "I think this question is confused, in that the browser can do this - but this is not the same thing as a REST call - code that exectu"
      },
      "after": "3665deed0476dc89",
      "date": 1467113213369
    },
    {
      "type": "edit",
      "id": "1ba1767cba44178c",
      "item": {
        "type": "paragraph",
        "id": "1ba1767cba44178c",
        "text": "I think this question is confused, in that the browser can do this - but this is not the same thing as a REST call - code that makes the GET request will just get back whatever the server returns. The result displayed in the browser is not serving up content an opening sockets - the server is. "
      },
      "date": 1467113323168
    },
    {
      "type": "add",
      "id": "df2e2fbfba57916e",
      "item": {
        "type": "paragraph",
        "id": "df2e2fbfba57916e",
        "text": "For the latter we need some browser based socket api - something like WebRTC which can access the DOM and local storage."
      },
      "after": "1ba1767cba44178c",
      "date": 1467113332304
    },
    {
      "item": {
        "type": "factory",
        "id": "851f4e75e1025880"
      },
      "id": "851f4e75e1025880",
      "type": "add",
      "after": "df2e2fbfba57916e",
      "date": 1467113346744
    },
    {
      "type": "edit",
      "id": "851f4e75e1025880",
      "item": {
        "type": "markdown",
        "id": "851f4e75e1025880",
        "text": "* Replace- entire page - [http://stackoverflow.com/questions/31577163/how-to-replace-entire-page-after-javascript-code-done-executing stackoverflow]"
      },
      "date": 1467113388468
    },
    {
      "type": "edit",
      "id": "851f4e75e1025880",
      "item": {
        "type": "markdown",
        "id": "851f4e75e1025880",
        "text": "* Replace- entire page - [http://stackoverflow.com/questions/31577163/how-to-replace-entire-page-after-javascript-code-done-executing stackoverflow]\n* jquery relacewith() - [http://www.w3schools.com/jquery/html_replacewith.asp w3schools]"
      },
      "date": 1467113426548
    },
    {
      "item": {
        "type": "factory",
        "id": "1d6ce37663e2265b"
      },
      "id": "1d6ce37663e2265b",
      "type": "add",
      "after": "851f4e75e1025880",
      "date": 1467113825278
    },
    {
      "type": "edit",
      "id": "1d6ce37663e2265b",
      "item": {
        "type": "video",
        "id": "1d6ce37663e2265b",
        "text": "YOUTUBE yQH5Vkzw8ko\n(double-click to edit caption)\n"
      },
      "date": 1467113832447
    },
    {
      "type": "edit",
      "id": "1d6ce37663e2265b",
      "item": {
        "type": "video",
        "id": "1d6ce37663e2265b",
        "text": "YOUTUBE yQH5Vkzw8ko\n[http://www.peer-server.com/ peer-server.com\\"
      },
      "date": 1467113874904
    },
    {
      "type": "edit",
      "id": "1d6ce37663e2265b",
      "item": {
        "type": "video",
        "id": "1d6ce37663e2265b",
        "text": "YOUTUBE yQH5Vkzw8ko\nPeerServer is a peer-to-peer client server using WebRTC, where your browser acts as a server for other browsers across WebRTC peer-to-peer data channels - [http://www.peer-server.com/ peer-server.com]"
      },
      "date": 1467113915442
    },
    {
      "item": {
        "type": "factory",
        "id": "9376b9a252168624"
      },
      "id": "9376b9a252168624",
      "type": "add",
      "after": "1d6ce37663e2265b",
      "date": 1467113942141
    },
    {
      "type": "edit",
      "id": "9376b9a252168624",
      "item": {
        "type": "paragraph",
        "id": "9376b9a252168624",
        "text": "An alternative is to go with HTML and trun Fedwiki into a [[Hypermedia API]]"
      },
      "date": 1467113968406
    },
    {
      "type": "edit",
      "id": "9376b9a252168624",
      "item": {
        "type": "paragraph",
        "id": "9376b9a252168624",
        "text": "A better alternative is to go with HTML and turn Fedwiki into a [[Hypermedia API]]"
      },
      "date": 1467113977702
    }
  ]
}