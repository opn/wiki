{
  "title": "The Eve of Abstraction",
  "story": [
    {
      "type": "paragraph",
      "id": "98bc88d6fb361588",
      "text": "How might programming language design break free from its long history of shuffling syntax around disturbingly similar semantics? Here are two folks reporting the related steps they have made on their escape. [http://early.witheve.com/ site]"
    },
    {
      "type": "video",
      "id": "2e1fda248394a943",
      "text": "YOUTUBE 5V1ynVyud4M\nPublished on Sep 28, 2015"
    },
    {
      "type": "paragraph",
      "id": "703c13fe46b9aa11",
      "text": "Tests with people showed trouble with scope.\n\n"
    },
    {
      "type": "paragraph",
      "id": "ded4aef527e49a90",
      "text": "TodoMVC?\n\n"
    },
    {
      "type": "paragraph",
      "id": "cd2b2311c6b75f92",
      "text": "Excel and relational db are useful while un-scoped.\n\n"
    },
    {
      "type": "paragraph",
      "id": "251084c702dbe024",
      "text": "write the click to increment program.\n\n"
    },
    {
      "type": "paragraph",
      "id": "d4156537b9f4d2f7",
      "text": "fast when everything is an operation on a b-tree. (like hypercard)\n\n"
    },
    {
      "type": "paragraph",
      "id": "3a7c061180882873",
      "text": "Bloom version of Hadoop.\n\n"
    },
    {
      "type": "paragraph",
      "id": "b80b8753d666a175",
      "text": "Executable specifications are a lot like programming. (but Cocoa Worlds made this work)\n\n"
    },
    {
      "type": "paragraph",
      "id": "b862e567a204a8ea",
      "text": "Outside world is just another table, like sms outbox, input in request tables.\n\n"
    },
    {
      "type": "paragraph",
      "id": "2f6a28464bec3cab",
      "text": "Parent-ancestor relationship\n\n"
    },
    {
      "type": "paragraph",
      "id": "a46595f139b1286c",
      "text": "pub-sub to tables in remote locations\n\n"
    },
    {
      "type": "paragraph",
      "id": "4926cf3ffa87f55f",
      "text": "increment in 30 seconds ... represent count with table size\n\n"
    },
    {
      "type": "paragraph",
      "id": "1ff68bbdea7a35fd",
      "text": "triangle of friends, like cypher in neo4j"
    },
    {
      "type": "markdown",
      "id": "8bb5b3b68b97e92d",
      "text": "# See also"
    },
    {
      "type": "reference",
      "id": "ce72c89fd5f1bd7b",
      "site": "future.fedwiki.org",
      "slug": "daedalus-now-bloom",
      "title": "Daedalus (now Bloom)",
      "text": "Bloom is a programming language for the cloud and other distributed computing systems. BOOM is the research project at UC Berkeley that is developing Bloom, as part of a larger agenda to make it easy to build distributed software systems.\n"
    },
    {
      "type": "video",
      "id": "ecf914d5252e5fb1",
      "text": "YOUTUBE R2Aa4PivG0g\nSuper cool video about [[Daedalus (now Bloom)]] - see [[About Time]] and [[Self-reference and Negation]]"
    },
    {
      "type": "markdown",
      "id": "3782c3fa4e68a1d9",
      "text": "# Ward"
    },
    {
      "type": "paragraph",
      "id": "352a39f4d0e5566a",
      "text": "Both speakers are working on challenging problems without known solutions. I compare this to my own work. I'm building a modern version of wiki which was and remains extremely simple."
    },
    {
      "type": "markdown",
      "id": "e50899a4099815a7",
      "text": "I retain from the original: \n* the page remains what you got when you clicked\n* there is a text based markup behind what you see"
    },
    {
      "type": "markdown",
      "id": "901f84295be3d1b8",
      "text": "Things I've added:\n* collaborative links\n* cooperating elements on pages"
    },
    {
      "type": "paragraph",
      "id": "4e6e64a32b1d216d",
      "text": "I've implemented this last thing, cooperation, many different ways.\nThese talks encourage me to try more."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "The Eve of Abstraction",
        "story": []
      },
      "date": 1475349742302
    },
    {
      "item": {
        "type": "factory",
        "id": "98bc88d6fb361588"
      },
      "id": "98bc88d6fb361588",
      "type": "add",
      "date": 1475349744522
    },
    {
      "type": "edit",
      "id": "98bc88d6fb361588",
      "item": {
        "type": "paragraph",
        "id": "98bc88d6fb361588",
        "text": "How might programming language design break free from its long history of shuffling syntax around disturbingly similar semantics? Here are two folks reporting the steps they have made on their escape."
      },
      "date": 1475349863126
    },
    {
      "item": {
        "type": "factory",
        "id": "2e1fda248394a943"
      },
      "id": "2e1fda248394a943",
      "type": "add",
      "after": "98bc88d6fb361588",
      "date": 1475349866120
    },
    {
      "item": {
        "type": "factory",
        "id": "ecf914d5252e5fb1"
      },
      "id": "ecf914d5252e5fb1",
      "type": "add",
      "after": "2e1fda248394a943",
      "date": 1475349869351
    },
    {
      "type": "edit",
      "id": "2e1fda248394a943",
      "item": {
        "type": "video",
        "id": "2e1fda248394a943",
        "text": "YOUTUBE 5V1ynVyud4M\n(double-click to edit caption)\n"
      },
      "date": 1475349878828
    },
    {
      "type": "edit",
      "id": "ecf914d5252e5fb1",
      "item": {
        "type": "video",
        "id": "ecf914d5252e5fb1",
        "text": "YOUTUBE R2Aa4PivG0g\n(double-click to edit caption)\n"
      },
      "date": 1475349899696
    },
    {
      "type": "edit",
      "id": "2e1fda248394a943",
      "item": {
        "type": "video",
        "id": "2e1fda248394a943",
        "text": "YOUTUBE 5V1ynVyud4M\nPublished on Sep 28, 2015"
      },
      "date": 1475349961968
    },
    {
      "type": "edit",
      "id": "ecf914d5252e5fb1",
      "item": {
        "type": "video",
        "id": "ecf914d5252e5fb1",
        "text": "YOUTUBE R2Aa4PivG0g\nPublished on Sep 26, 2015"
      },
      "date": 1475350019544
    },
    {
      "type": "edit",
      "id": "98bc88d6fb361588",
      "item": {
        "type": "paragraph",
        "id": "98bc88d6fb361588",
        "text": "How might programming language design break free from its long history of shuffling syntax around disturbingly similar semantics? Here are two folks reporting the related steps they have made on their escape."
      },
      "date": 1475350050567
    },
    {
      "type": "add",
      "id": "4733d48fcf43273d",
      "item": {
        "type": "paragraph",
        "id": "4733d48fcf43273d",
        "text": "Excuse my notes."
      },
      "after": "98bc88d6fb361588",
      "date": 1475350140697
    },
    {
      "type": "add",
      "id": "703c13fe46b9aa11",
      "item": {
        "type": "paragraph",
        "id": "703c13fe46b9aa11",
        "text": "Tests with people showed trouble with scope.\n\nTodoMVC?\n\nExcel and relational db are useful while un-scoped.\n\nPeter Alvaro -- datalog least-fixed-point\n\nwrite the click to increment program.\n\nfast when everything is an operation on a b-tree. (like hypercard)\n\nBloom version of Hadoop.\n\nExecutable specifications are a lot like programming. (but Cocoa Worlds made this work)\n\nOutside world is just another table, like sms outbox, input in request tables.\n\nParent-ancestor relationship\n\npub-sub to tables in remote locations\n\nincrement in 30 seconds ... represent count with table size\n\ntriangle of friends, like cypher in neo4j"
      },
      "after": "4733d48fcf43273d",
      "date": 1475350145963
    },
    {
      "type": "move",
      "order": [
        "98bc88d6fb361588",
        "4733d48fcf43273d",
        "2e1fda248394a943",
        "703c13fe46b9aa11",
        "ecf914d5252e5fb1"
      ],
      "id": "703c13fe46b9aa11",
      "date": 1475350153405
    },
    {
      "item": {
        "type": "factory",
        "id": "c26e67695d88b154"
      },
      "id": "c26e67695d88b154",
      "type": "add",
      "after": "ecf914d5252e5fb1",
      "date": 1475350173051
    },
    {
      "type": "edit",
      "id": "c26e67695d88b154",
      "item": {
        "type": "paragraph",
        "id": "c26e67695d88b154",
        "text": "Dedalus -- Alvaro\n\nwriters vs users straddling abstraction boundary\n\nmodel-theoretic semantics for distributed systems? resilient to failure and tolerant of loose ordering.\n\ngiven what I know, what follows transitively\n\nweb server is join of db with req stream\n\nlineage and derivation => debugging\n\nself reference and negation required for paradoxes ... this sentence is false.\n\ndistributed requires: time varying state, non-determinism\nbad: x=x+1, snd(); rec()\n\nreify time, a relativist model\n\nknowledge is local and ephemeral, computation is rendezvous\n\ndeductive = instantaneous, \ninductive = deferred, \nasync = uncertain (arbitrary, nondeterministic)\n\nstate is induction in time: rendezvous\n\nCALM theorem \n\ndedalus => bloom, blazes, lineage-driven fault injection, eve\n\ncommitting acts of abstraction: abstractions leak, deal with it"
      },
      "date": 1475350176887
    },
    {
      "type": "edit",
      "id": "703c13fe46b9aa11",
      "item": {
        "type": "paragraph",
        "id": "703c13fe46b9aa11",
        "text": "Tests with people showed trouble with scope.\n\n"
      },
      "date": 1475350198275
    },
    {
      "type": "add",
      "id": "ded4aef527e49a90",
      "item": {
        "type": "paragraph",
        "id": "ded4aef527e49a90",
        "text": "TodoMVC?\n\n"
      },
      "after": "703c13fe46b9aa11",
      "date": 1475350200692
    },
    {
      "type": "add",
      "id": "cd2b2311c6b75f92",
      "item": {
        "type": "paragraph",
        "id": "cd2b2311c6b75f92",
        "text": "Excel and relational db are useful while un-scoped.\n\n"
      },
      "after": "ded4aef527e49a90",
      "date": 1475350201700
    },
    {
      "type": "add",
      "id": "720c02c5f0bdcbe2",
      "item": {
        "type": "paragraph",
        "id": "720c02c5f0bdcbe2",
        "text": "Peter Alvaro -- datalog least-fixed-point\n\n"
      },
      "after": "cd2b2311c6b75f92",
      "date": 1475350202695
    },
    {
      "type": "add",
      "id": "251084c702dbe024",
      "item": {
        "type": "paragraph",
        "id": "251084c702dbe024",
        "text": "write the click to increment program.\n\n"
      },
      "after": "720c02c5f0bdcbe2",
      "date": 1475350203726
    },
    {
      "type": "add",
      "id": "d4156537b9f4d2f7",
      "item": {
        "type": "paragraph",
        "id": "d4156537b9f4d2f7",
        "text": "fast when everything is an operation on a b-tree. (like hypercard)\n\n"
      },
      "after": "251084c702dbe024",
      "date": 1475350205129
    },
    {
      "type": "add",
      "id": "3a7c061180882873",
      "item": {
        "type": "paragraph",
        "id": "3a7c061180882873",
        "text": "Bloom version of Hadoop.\n\n"
      },
      "after": "d4156537b9f4d2f7",
      "date": 1475350206176
    },
    {
      "type": "add",
      "id": "b80b8753d666a175",
      "item": {
        "type": "paragraph",
        "id": "b80b8753d666a175",
        "text": "Executable specifications are a lot like programming. (but Cocoa Worlds made this work)\n\n"
      },
      "after": "3a7c061180882873",
      "date": 1475350207528
    },
    {
      "type": "add",
      "id": "b862e567a204a8ea",
      "item": {
        "type": "paragraph",
        "id": "b862e567a204a8ea",
        "text": "Outside world is just another table, like sms outbox, input in request tables.\n\n"
      },
      "after": "b80b8753d666a175",
      "date": 1475350209731
    },
    {
      "type": "add",
      "id": "2f6a28464bec3cab",
      "item": {
        "type": "paragraph",
        "id": "2f6a28464bec3cab",
        "text": "Parent-ancestor relationship\n\n"
      },
      "after": "b862e567a204a8ea",
      "date": 1475350211335
    },
    {
      "type": "add",
      "id": "a46595f139b1286c",
      "item": {
        "type": "paragraph",
        "id": "a46595f139b1286c",
        "text": "pub-sub to tables in remote locations\n\n"
      },
      "after": "2f6a28464bec3cab",
      "date": 1475350212584
    },
    {
      "type": "add",
      "id": "4926cf3ffa87f55f",
      "item": {
        "type": "paragraph",
        "id": "4926cf3ffa87f55f",
        "text": "increment in 30 seconds ... represent count with table size\n\n"
      },
      "after": "a46595f139b1286c",
      "date": 1475350213964
    },
    {
      "type": "add",
      "id": "1ff68bbdea7a35fd",
      "item": {
        "type": "paragraph",
        "id": "1ff68bbdea7a35fd",
        "text": "triangle of friends, like cypher in neo4j"
      },
      "after": "4926cf3ffa87f55f",
      "date": 1475350216443
    },
    {
      "type": "edit",
      "id": "c26e67695d88b154",
      "item": {
        "type": "paragraph",
        "id": "c26e67695d88b154",
        "text": "Dedalus -- Alvaro\n\n"
      },
      "date": 1475350231600
    },
    {
      "type": "add",
      "id": "202250b7c59edcf3",
      "item": {
        "type": "paragraph",
        "id": "202250b7c59edcf3",
        "text": "writers vs users straddling abstraction boundary\n\n"
      },
      "after": "c26e67695d88b154",
      "date": 1475350232807
    },
    {
      "type": "add",
      "id": "23f45b190d9657c2",
      "item": {
        "type": "paragraph",
        "id": "23f45b190d9657c2",
        "text": "model-theoretic semantics for distributed systems? resilient to failure and tolerant of loose ordering.\n\n"
      },
      "after": "202250b7c59edcf3",
      "date": 1475350233990
    },
    {
      "type": "add",
      "id": "22793c81f3336e93",
      "item": {
        "type": "paragraph",
        "id": "22793c81f3336e93",
        "text": "given what I know, what follows transitively\n\n"
      },
      "after": "23f45b190d9657c2",
      "date": 1475350236263
    },
    {
      "type": "add",
      "id": "2176d97d01c18be1",
      "item": {
        "type": "paragraph",
        "id": "2176d97d01c18be1",
        "text": "web server is join of db with req stream\n\n"
      },
      "after": "22793c81f3336e93",
      "date": 1475350238921
    },
    {
      "type": "add",
      "id": "f43f14b94bd8df65",
      "item": {
        "type": "paragraph",
        "id": "f43f14b94bd8df65",
        "text": "lineage and derivation => debugging\n\n"
      },
      "after": "2176d97d01c18be1",
      "date": 1475350240231
    },
    {
      "type": "add",
      "id": "21fd4ff9673d75e0",
      "item": {
        "type": "paragraph",
        "id": "21fd4ff9673d75e0",
        "text": "self reference and negation required for paradoxes ... this sentence is false.\n\n"
      },
      "after": "f43f14b94bd8df65",
      "date": 1475350241842
    },
    {
      "type": "add",
      "id": "ab0663bbc5551f07",
      "item": {
        "type": "paragraph",
        "id": "ab0663bbc5551f07",
        "text": "distributed requires: time varying state, non-determinism.\nbad: x=x+1, snd(); rec()\n\n"
      },
      "after": "21fd4ff9673d75e0",
      "date": 1475350255189
    },
    {
      "type": "add",
      "id": "95c5384be9473a8f",
      "item": {
        "type": "paragraph",
        "id": "95c5384be9473a8f",
        "text": "reify time, a relativist model\n\n"
      },
      "after": "ab0663bbc5551f07",
      "date": 1475350258604
    },
    {
      "type": "add",
      "id": "65ffab8f294f21ce",
      "item": {
        "type": "paragraph",
        "id": "65ffab8f294f21ce",
        "text": "knowledge is local and ephemeral, computation is rendezvous\n\n"
      },
      "after": "95c5384be9473a8f",
      "date": 1475350260723
    },
    {
      "type": "add",
      "id": "952c1251a0b00077",
      "item": {
        "type": "paragraph",
        "id": "952c1251a0b00077",
        "text": "deductive = instantaneous, \ninductive = deferred, \nasync = uncertain (arbitrary, nondeterministic)\n\n"
      },
      "after": "65ffab8f294f21ce",
      "date": 1475350267772
    },
    {
      "type": "add",
      "id": "1fe124d5ff3426be",
      "item": {
        "type": "paragraph",
        "id": "1fe124d5ff3426be",
        "text": "state is induction in time: rendezvous\n\n"
      },
      "after": "952c1251a0b00077",
      "date": 1475350269501
    },
    {
      "type": "add",
      "id": "44f1713264b5c382",
      "item": {
        "type": "paragraph",
        "id": "44f1713264b5c382",
        "text": "CALM theorem \n\n"
      },
      "after": "1fe124d5ff3426be",
      "date": 1475350270753
    },
    {
      "type": "add",
      "id": "514f917a1786d81e",
      "item": {
        "type": "paragraph",
        "id": "514f917a1786d81e",
        "text": "dedalus => bloom, blazes, lineage-driven fault injection, eve\n\n"
      },
      "after": "44f1713264b5c382",
      "date": 1475350272335
    },
    {
      "type": "add",
      "id": "e3193d50ebacdda3",
      "item": {
        "type": "paragraph",
        "id": "e3193d50ebacdda3",
        "text": "committing acts of abstraction: abstractions leak, deal with it"
      },
      "after": "514f917a1786d81e",
      "date": 1475350274732
    },
    {
      "type": "remove",
      "id": "720c02c5f0bdcbe2",
      "date": 1475350307070
    },
    {
      "type": "remove",
      "id": "c26e67695d88b154",
      "date": 1475350319781
    },
    {
      "type": "add",
      "id": "6c315345363e41f0",
      "item": {
        "type": "paragraph",
        "id": "6c315345363e41f0",
        "text": "least-fixed-point\n\n"
      },
      "after": "22793c81f3336e93",
      "date": 1475350344250
    },
    {
      "type": "edit",
      "id": "98bc88d6fb361588",
      "item": {
        "type": "paragraph",
        "id": "98bc88d6fb361588",
        "text": "How might programming language design break free from its long history of shuffling syntax around disturbingly similar semantics? Here are two folks reporting the related steps they have made on their escape. [http://early.witheve.com/ site]"
      },
      "date": 1475350969849
    },
    {
      "item": {
        "type": "factory",
        "id": "bed1710afe0baa56"
      },
      "id": "bed1710afe0baa56",
      "type": "add",
      "after": "e3193d50ebacdda3",
      "date": 1475351425982
    },
    {
      "type": "edit",
      "id": "bed1710afe0baa56",
      "item": {
        "type": "pagefold",
        "id": "bed1710afe0baa56",
        "text": "."
      },
      "date": 1475351431843
    },
    {
      "item": {
        "type": "factory",
        "id": "352a39f4d0e5566a"
      },
      "id": "352a39f4d0e5566a",
      "type": "add",
      "after": "bed1710afe0baa56",
      "date": 1475351447061
    },
    {
      "type": "edit",
      "id": "352a39f4d0e5566a",
      "item": {
        "type": "paragraph",
        "id": "352a39f4d0e5566a",
        "text": "They are both working on challenging problems without known solutions. I'm building a modern version of wiki which was and remains extremely simple."
      },
      "date": 1475351499477
    },
    {
      "item": {
        "type": "factory",
        "id": "e50899a4099815a7"
      },
      "id": "e50899a4099815a7",
      "type": "add",
      "after": "352a39f4d0e5566a",
      "date": 1475351508549
    },
    {
      "type": "edit",
      "id": "e50899a4099815a7",
      "item": {
        "type": "markdown",
        "id": "e50899a4099815a7",
        "text": "I retain from the original: \n* the page remains what you got when you clicked\n* there is a text based markup behind what you see"
      },
      "date": 1475351512898
    },
    {
      "item": {
        "type": "factory",
        "id": "901f84295be3d1b8"
      },
      "id": "901f84295be3d1b8",
      "type": "add",
      "after": "e50899a4099815a7",
      "date": 1475351529637
    },
    {
      "type": "edit",
      "id": "901f84295be3d1b8",
      "item": {
        "type": "markdown",
        "id": "901f84295be3d1b8",
        "text": "Things I've added:\n* collaborative links\n* cooperating elements on pages"
      },
      "date": 1475351540974
    },
    {
      "item": {
        "type": "factory",
        "id": "4e6e64a32b1d216d"
      },
      "id": "4e6e64a32b1d216d",
      "type": "add",
      "after": "901f84295be3d1b8",
      "date": 1475351572675
    },
    {
      "type": "edit",
      "id": "4e6e64a32b1d216d",
      "item": {
        "type": "paragraph",
        "id": "4e6e64a32b1d216d",
        "text": "I've implemented this last thing, cooperation, many different ways.\nThese talks encourage me to try more."
      },
      "date": 1475351599370
    },
    {
      "type": "edit",
      "id": "352a39f4d0e5566a",
      "item": {
        "type": "paragraph",
        "id": "352a39f4d0e5566a",
        "text": "Both speakers are working on challenging problems without known solutions. I compare this to my own work. I'm building a modern version of wiki which was and remains extremely simple."
      },
      "date": 1475351687395
    },
    {
      "type": "fork",
      "site": "ward.bay.wiki.org",
      "date": 1475572902338,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1475572925146
    },
    {
      "type": "edit",
      "id": "ecf914d5252e5fb1",
      "item": {
        "type": "video",
        "id": "ecf914d5252e5fb1",
        "text": "YOUTUBE R2Aa4PivG0g\nSuper cool video about Daedalus (now Bloom) - (Published on Sep 26, 2015"
      },
      "date": 1475587216100
    },
    {
      "type": "edit",
      "id": "ecf914d5252e5fb1",
      "item": {
        "type": "video",
        "id": "ecf914d5252e5fb1",
        "text": "YOUTUBE R2Aa4PivG0g\nSuper cool video about Daedalus (now Bloom) - see [[Time, negation and self-reference]]"
      },
      "date": 1475587336680
    },
    {
      "type": "edit",
      "id": "ecf914d5252e5fb1",
      "item": {
        "type": "video",
        "id": "ecf914d5252e5fb1",
        "text": "YOUTUBE R2Aa4PivG0g\nSuper cool video about Daedalus (now Bloom) - see [[About Time]] and [[Self-reference and Negation]]"
      },
      "date": 1475587398604
    },
    {
      "type": "edit",
      "id": "ecf914d5252e5fb1",
      "item": {
        "type": "video",
        "id": "ecf914d5252e5fb1",
        "text": "YOUTUBE R2Aa4PivG0g\nSuper cool video about [[Daedalus (now Bloom)]] - see [[About Time]] and [[Self-reference and Negation]]"
      },
      "date": 1475587431589
    },
    {
      "type": "remove",
      "id": "202250b7c59edcf3",
      "date": 1475587614927
    },
    {
      "type": "remove",
      "id": "23f45b190d9657c2",
      "date": 1475587617944
    },
    {
      "type": "remove",
      "id": "22793c81f3336e93",
      "date": 1475587620676
    },
    {
      "type": "remove",
      "id": "6c315345363e41f0",
      "date": 1475587623608
    },
    {
      "type": "remove",
      "id": "2176d97d01c18be1",
      "date": 1475587626415
    },
    {
      "type": "remove",
      "id": "f43f14b94bd8df65",
      "date": 1475587629057
    },
    {
      "type": "remove",
      "id": "21fd4ff9673d75e0",
      "date": 1475587631968
    },
    {
      "type": "remove",
      "id": "ab0663bbc5551f07",
      "date": 1475587634491
    },
    {
      "type": "remove",
      "id": "95c5384be9473a8f",
      "date": 1475587637010
    },
    {
      "type": "remove",
      "id": "65ffab8f294f21ce",
      "date": 1475587639702
    },
    {
      "type": "remove",
      "id": "952c1251a0b00077",
      "date": 1475587642612
    },
    {
      "type": "remove",
      "id": "1fe124d5ff3426be",
      "date": 1475587645975
    },
    {
      "type": "remove",
      "id": "44f1713264b5c382",
      "date": 1475587650059
    },
    {
      "type": "remove",
      "id": "514f917a1786d81e",
      "date": 1475587654578
    },
    {
      "type": "remove",
      "id": "e3193d50ebacdda3",
      "date": 1475587658768
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "id": "ce72c89fd5f1bd7b",
        "site": "future.fedwiki.org",
        "slug": "daedalus-now-bloom",
        "title": "Daedalus (now Bloom)",
        "text": "Bloom is a programming language for the cloud and other distributed computing systems. BOOM is the research project at UC Berkeley that is developing Bloom, as part of a larger agenda to make it easy to build distributed software systems.\n"
      },
      "after": "1ff68bbdea7a35fd",
      "id": "ce72c89fd5f1bd7b",
      "date": 1475587712087
    },
    {
      "type": "add",
      "id": "8bb5b3b68b97e92d",
      "item": {
        "type": "markdown",
        "id": "8bb5b3b68b97e92d",
        "text": "# Bloom programming language"
      },
      "after": "1ff68bbdea7a35fd",
      "date": 1475587737760
    },
    {
      "type": "edit",
      "id": "8bb5b3b68b97e92d",
      "item": {
        "type": "markdown",
        "id": "8bb5b3b68b97e92d",
        "text": "# Bloom programming language"
      },
      "date": 1475587739316
    },
    {
      "type": "fork",
      "date": 1475587765069
    },
    {
      "item": {
        "type": "factory",
        "id": "3782c3fa4e68a1d9"
      },
      "id": "3782c3fa4e68a1d9",
      "type": "add",
      "after": "4e6e64a32b1d216d",
      "date": 1475587766017
    },
    {
      "type": "remove",
      "id": "bed1710afe0baa56",
      "date": 1475587769826
    },
    {
      "type": "edit",
      "id": "3782c3fa4e68a1d9",
      "item": {
        "type": "markdown",
        "id": "3782c3fa4e68a1d9",
        "text": "# Ward"
      },
      "date": 1475587773686
    },
    {
      "type": "move",
      "order": [
        "98bc88d6fb361588",
        "4733d48fcf43273d",
        "2e1fda248394a943",
        "703c13fe46b9aa11",
        "ded4aef527e49a90",
        "cd2b2311c6b75f92",
        "251084c702dbe024",
        "d4156537b9f4d2f7",
        "3a7c061180882873",
        "b80b8753d666a175",
        "b862e567a204a8ea",
        "2f6a28464bec3cab",
        "a46595f139b1286c",
        "4926cf3ffa87f55f",
        "1ff68bbdea7a35fd",
        "8bb5b3b68b97e92d",
        "ce72c89fd5f1bd7b",
        "ecf914d5252e5fb1",
        "3782c3fa4e68a1d9",
        "352a39f4d0e5566a",
        "e50899a4099815a7",
        "901f84295be3d1b8",
        "4e6e64a32b1d216d"
      ],
      "id": "3782c3fa4e68a1d9",
      "date": 1475587776759
    },
    {
      "type": "edit",
      "id": "8bb5b3b68b97e92d",
      "item": {
        "type": "markdown",
        "id": "8bb5b3b68b97e92d",
        "text": "# See also"
      },
      "date": 1475587785918
    },
    {
      "type": "remove",
      "id": "4733d48fcf43273d",
      "date": 1475587792637
    }
  ]
}