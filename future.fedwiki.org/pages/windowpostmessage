{
  "title": "Window.postMessage",
  "story": [
    {
      "type": "paragraph",
      "id": "86ff409bf41d073e",
      "text": "The window.postMessage method safely enables cross-origin communication - [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage developer.mozilla.org]"
    },
    {
      "type": "paragraph",
      "id": "52d84648bc1afb69",
      "text": "Normally, scripts on different pages are allowed to access each other if and only if the pages that executed them are at locations with the same protocol (usually both https), port number (443 being the default for https), and host (modulo document.domain being set by both pages to the same value). "
    },
    {
      "type": "paragraph",
      "id": "b61809828ec30f20",
      "text": "window.postMessage provides a controlled mechanism to circumvent this restriction in a way which is secure when properly used."
    },
    {
      "type": "code",
      "id": "da5d8d7a66acb9f5",
      "text": "otherWindow.postMessage(message, targetOrigin, [transfer]);"
    },
    {
      "type": "paragraph",
      "id": "01858365d19ba6e9",
      "text": "The window.postMessage method, when called, causes a MessageEvent to be dispatched at the target window when any pending script that must be executed completes (e.g., remaining event handlers if window.postMessage is called from an event handler, previously-set pending timeouts, etc.) "
    },
    {
      "type": "paragraph",
      "id": "d0c1fa8d2d36138e",
      "text": "The MessageEvent has the type message, a data property which is set to the value of the first argument provided to [[window.postMessage]], an origin property corresponding to the origin of the main document in the window calling window.postMessage at the time window.postMessage was called, and a source property which is the window from which window.postMessage is called."
    },
    {
      "type": "paragraph",
      "id": "5d58c799d2dbe68c",
      "text": "\n"
    },
    {
      "type": "markdown",
      "id": "4d6114a1f3cb3f6a",
      "text": "# See also"
    },
    {
      "type": "reference",
      "id": "a3f2e5b1eae9804e",
      "site": "c0de.academy",
      "slug": "web-messaging",
      "title": "Web Messaging",
      "text": "Web Messaging or cross-document messaging, is an API introduced in the WHATWG HTML5 draft specification, allowing documents to communicate with one another across different origins, or source domains - [https://en.wikipedia.org/wiki/Web_Messaging wikipedia]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Window.postMessage",
        "story": []
      },
      "date": 1462855597254
    },
    {
      "item": {
        "type": "factory",
        "id": "86ff409bf41d073e"
      },
      "id": "86ff409bf41d073e",
      "type": "add",
      "date": 1462855599217
    },
    {
      "type": "edit",
      "id": "86ff409bf41d073e",
      "item": {
        "type": "paragraph",
        "id": "86ff409bf41d073e",
        "text": "The window.postMessage method safely enables cross-origin communication. Normally, scripts on different pages are allowed to access each other if and only if the pages that executed them are at locations with the same protocol (usually both https), port number (443 being the default for https), and host (modulo document.domain being set by both pages to the same value). window.postMessage provides a controlled mechanism to circumvent this restriction in a way which is secure when properly used.\n\nThe window.postMessage method, when called, causes a MessageEvent to be dispatched at the target window when any pending script that must be executed completes (e.g., remaining event handlers if window.postMessage is called from an event handler, previously-set pending timeouts, etc.) The MessageEvent has the type message, a data property which is set to the value of the first argument provided to window.postMessage, an origin property corresponding to the origin of the main document in the window calling window.postMessage at the time window.postMessage was called, and a source property which is the window from which window.postMessage is called. (Other standard properties of events are present with their expected values.)"
      },
      "date": 1462855605806
    },
    {
      "item": {
        "type": "factory",
        "id": "da5d8d7a66acb9f5"
      },
      "id": "da5d8d7a66acb9f5",
      "type": "add",
      "after": "5d58c799d2dbe68c",
      "date": 1462855607506
    },
    {
      "type": "add",
      "id": "5d58c799d2dbe68c",
      "item": {
        "type": "paragraph",
        "id": "5d58c799d2dbe68c",
        "text": "\n"
      },
      "after": "86ff409bf41d073e",
      "date": 1462855611860
    },
    {
      "type": "edit",
      "id": "da5d8d7a66acb9f5",
      "item": {
        "type": "code",
        "id": "da5d8d7a66acb9f5",
        "text": "otherWindow.postMessage(message, targetOrigin, [transfer]);"
      },
      "date": 1462855614254
    },
    {
      "type": "edit",
      "id": "86ff409bf41d073e",
      "item": {
        "type": "paragraph",
        "id": "86ff409bf41d073e",
        "text": "The window.postMessage method safely enables cross-origin communication. Normally, scripts on different pages are allowed to access each other if and only if the pages that executed them are at locations with the same protocol (usually both https), port number (443 being the default for https), and host (modulo document.domain being set by both pages to the same value). window.postMessage provides a controlled mechanism to circumvent this restriction in a way which is secure when properly used."
      },
      "date": 1462855631238
    },
    {
      "type": "add",
      "id": "01858365d19ba6e9",
      "item": {
        "type": "paragraph",
        "id": "01858365d19ba6e9",
        "text": "The window.postMessage method, when called, causes a MessageEvent to be dispatched at the target window when any pending script that must be executed completes (e.g., remaining event handlers if window.postMessage is called from an event handler, previously-set pending timeouts, etc.) "
      },
      "after": "86ff409bf41d073e",
      "date": 1462855640957
    },
    {
      "type": "add",
      "id": "d0c1fa8d2d36138e",
      "item": {
        "type": "paragraph",
        "id": "d0c1fa8d2d36138e",
        "text": "The MessageEvent has the type message, a data property which is set to the value of the first argument provided to [[window.postMessage]], an origin property corresponding to the origin of the main document in the window calling window.postMessage at the time window.postMessage was called, and a source property which is the window from which window.postMessage is called."
      },
      "after": "01858365d19ba6e9",
      "date": 1462855670999
    },
    {
      "type": "move",
      "order": [
        "86ff409bf41d073e",
        "da5d8d7a66acb9f5",
        "01858365d19ba6e9",
        "d0c1fa8d2d36138e",
        "5d58c799d2dbe68c"
      ],
      "id": "da5d8d7a66acb9f5",
      "date": 1462855679839
    },
    {
      "type": "edit",
      "id": "86ff409bf41d073e",
      "item": {
        "type": "paragraph",
        "id": "86ff409bf41d073e",
        "text": "The window.postMessage method safely enables cross-origin communication. "
      },
      "date": 1462855686551
    },
    {
      "type": "add",
      "id": "52d84648bc1afb69",
      "item": {
        "type": "paragraph",
        "id": "52d84648bc1afb69",
        "text": "Normally, scripts on different pages are allowed to access each other if and only if the pages that executed them are at locations with the same protocol (usually both https), port number (443 being the default for https), and host (modulo document.domain being set by both pages to the same value). "
      },
      "after": "86ff409bf41d073e",
      "date": 1462855692991
    },
    {
      "type": "add",
      "id": "b61809828ec30f20",
      "item": {
        "type": "paragraph",
        "id": "b61809828ec30f20",
        "text": "window.postMessage provides a controlled mechanism to circumvent this restriction in a way which is secure when properly used."
      },
      "after": "52d84648bc1afb69",
      "date": 1462855696848
    },
    {
      "type": "edit",
      "id": "86ff409bf41d073e",
      "item": {
        "type": "paragraph",
        "id": "86ff409bf41d073e",
        "text": "The window.postMessage method safely enables cross-origin communication - [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage developer.mozilla.org]"
      },
      "date": 1462855717761
    },
    {
      "item": {
        "type": "factory",
        "id": "4d6114a1f3cb3f6a"
      },
      "id": "4d6114a1f3cb3f6a",
      "type": "add",
      "after": "5d58c799d2dbe68c",
      "date": 1464448024001
    },
    {
      "type": "edit",
      "id": "4d6114a1f3cb3f6a",
      "item": {
        "type": "markdown",
        "id": "4d6114a1f3cb3f6a",
        "text": "# See also"
      },
      "date": 1464448030172
    },
    {
      "item": {
        "type": "factory",
        "id": "a3f2e5b1eae9804e"
      },
      "id": "a3f2e5b1eae9804e",
      "type": "add",
      "after": "4d6114a1f3cb3f6a",
      "date": 1464448031221
    },
    {
      "type": "edit",
      "id": "a3f2e5b1eae9804e",
      "item": {
        "type": "reference",
        "id": "a3f2e5b1eae9804e",
        "site": "c0de.academy",
        "slug": "web-messaging",
        "title": "Web Messaging",
        "text": "Web Messaging or cross-document messaging, is an API introduced in the WHATWG HTML5 draft specification, allowing documents to communicate with one another across different origins, or source domains - [https://en.wikipedia.org/wiki/Web_Messaging wikipedia]"
      },
      "date": 1464448033383
    },
    {
      "type": "fork",
      "site": "c0de.academy",
      "date": 1464448106811
    }
  ]
}