{
  "title": "Distributed Hash Table",
  "story": [
    {
      "type": "paragraph",
      "id": "03b5de8e574fc07a",
      "text": "A distributed hash table (DHT) is a class of a decentralized distributed system that provides a lookup service similar to a hash table. Any participating node can efficiently retrieve the value associated with a given key. [https://en.wikipedia.org/wiki/Distributed_hash_table wikipedia]"
    },
    {
      "type": "markdown",
      "id": "f9533c79ab03efa5",
      "text": "# Examples"
    },
    {
      "type": "reference",
      "id": "d1a990d27444c9cc",
      "site": "future.fedwiki.org",
      "slug": "kademlia",
      "title": "Kademlia",
      "text": "[[Kademlia]] is the inspiration for the distributed hash table used as a core component of [[IPFS]]."
    },
    {
      "type": "markdown",
      "id": "9f31c2d9dd1f2a25",
      "text": "# Research"
    },
    {
      "type": "paragraph",
      "id": "5bf42d12ca0b09df",
      "text": "DHT research was originally motivated, in part, by peer-to-peer systems such as Freenet, gnutella, BitTorrent and Napster, which took advantage of resources distributed across the Internet to provide a single useful application. In particular, they took advantage of increased bandwidth and hard disk capacity to provide a file-sharing service."
    },
    {
      "type": "paragraph",
      "id": "f6a69c6cb96c489c",
      "text": "Four systems, CAN, Chord, Pastry, and Tapestry, ignited DHTs as a popular research topic. A project called the Infrastructure for Resilient Internet Systems (Iris) was funded by a $12 million grant from the US National Science Foundation in 2002."
    },
    {
      "type": "paragraph",
      "id": "10f80f2c403d56ce",
      "text": "The structure of a DHT can be decomposed into several main components. The foundation is an abstract keyspace, such as the set of 160-bit strings. A keyspace partitioning scheme splits ownership of this keyspace among the participating nodes. An overlay network then connects the nodes, allowing them to find the owner of any given key in the keyspace."
    },
    {
      "type": "pagefold",
      "id": "f03804c9e0d8548a",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "b5a65949675edb33",
      "text": "Hash answers the question, where can I get a recording of \"Sounds of Silence\"."
    },
    {
      "type": "paragraph",
      "id": "260d452b6a9c0a83",
      "text": "Search answers the question, what song begins \"Hello Darkness\"."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Distributed Hash Table",
        "story": []
      },
      "date": 1448635385077
    },
    {
      "item": {
        "type": "factory",
        "id": "03b5de8e574fc07a"
      },
      "id": "03b5de8e574fc07a",
      "type": "add",
      "date": 1448635436412
    },
    {
      "type": "edit",
      "id": "03b5de8e574fc07a",
      "item": {
        "type": "paragraph",
        "id": "03b5de8e574fc07a",
        "text": "A distributed hash table (DHT) is a class of a decentralized distributed system that provides a lookup service similar to a hash table. Any participating node can efficiently retrieve the value associated with a given key."
      },
      "date": 1448635485855
    },
    {
      "type": "edit",
      "id": "03b5de8e574fc07a",
      "item": {
        "type": "paragraph",
        "id": "03b5de8e574fc07a",
        "text": "A distributed hash table (DHT) is a class of a decentralized distributed system that provides a lookup service similar to a hash table. Any participating node can efficiently retrieve the value associated with a given key. [https://en.wikipedia.org/wiki/Distributed_hash_table wikipedia]"
      },
      "date": 1448635502925
    },
    {
      "type": "add",
      "id": "5bf42d12ca0b09df",
      "item": {
        "type": "paragraph",
        "id": "5bf42d12ca0b09df",
        "text": "DHT research was originally motivated, in part, by peer-to-peer systems such as Freenet, gnutella, BitTorrent and Napster, which took advantage of resources distributed across the Internet to provide a single useful application. In particular, they took advantage of increased bandwidth and hard disk capacity to provide a file-sharing service."
      },
      "after": "03b5de8e574fc07a",
      "date": 1448635577521
    },
    {
      "type": "add",
      "id": "f6a69c6cb96c489c",
      "item": {
        "type": "paragraph",
        "id": "f6a69c6cb96c489c",
        "text": "In 2001, four systems—CAN, Chord, Pastry, and Tapestry—ignited DHTs as a popular research topic. A project called the Infrastructure for Resilient Internet Systems (Iris) was funded by a $12 million grant from the US National Science Foundation in 2002."
      },
      "after": "5bf42d12ca0b09df",
      "date": 1448635918734
    },
    {
      "type": "edit",
      "id": "f6a69c6cb96c489c",
      "item": {
        "type": "paragraph",
        "id": "f6a69c6cb96c489c",
        "text": "Four systems, CAN, Chord, Pastry, and Tapestry, ignited DHTs as a popular research topic. A project called the Infrastructure for Resilient Internet Systems (Iris) was funded by a $12 million grant from the US National Science Foundation in 2002."
      },
      "date": 1448635951949
    },
    {
      "type": "add",
      "id": "10f80f2c403d56ce",
      "item": {
        "type": "paragraph",
        "id": "10f80f2c403d56ce",
        "text": "The structure of a DHT can be decomposed into several main components. The foundation is an abstract keyspace, such as the set of 160-bit strings. A keyspace partitioning scheme splits ownership of this keyspace among the participating nodes. An overlay network then connects the nodes, allowing them to find the owner of any given key in the keyspace."
      },
      "after": "f6a69c6cb96c489c",
      "date": 1448636045437
    },
    {
      "item": {
        "type": "factory",
        "id": "f03804c9e0d8548a"
      },
      "id": "f03804c9e0d8548a",
      "type": "add",
      "after": "10f80f2c403d56ce",
      "date": 1448636325903
    },
    {
      "type": "edit",
      "id": "f03804c9e0d8548a",
      "item": {
        "type": "pagefold",
        "id": "f03804c9e0d8548a",
        "text": "."
      },
      "date": 1448636333148
    },
    {
      "item": {
        "type": "factory",
        "id": "b5a65949675edb33"
      },
      "id": "b5a65949675edb33",
      "type": "add",
      "after": "f03804c9e0d8548a",
      "date": 1448636473428
    },
    {
      "type": "edit",
      "id": "b5a65949675edb33",
      "item": {
        "type": "paragraph",
        "id": "b5a65949675edb33",
        "text": "Hash answers the question, where can I get a recording of \"Sounds of Silence\"."
      },
      "date": 1448636529753
    },
    {
      "type": "add",
      "id": "260d452b6a9c0a83",
      "item": {
        "type": "paragraph",
        "id": "260d452b6a9c0a83",
        "text": "Search answers the question, what song begins \"Hello Darkness\"."
      },
      "after": "b5a65949675edb33",
      "date": 1448636552934
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org"
    },
    {
      "item": {
        "type": "factory",
        "id": "f9533c79ab03efa5"
      },
      "id": "f9533c79ab03efa5",
      "type": "add",
      "after": "260d452b6a9c0a83",
      "date": 1448712041491
    },
    {
      "type": "edit",
      "id": "f9533c79ab03efa5",
      "item": {
        "type": "paragraph",
        "id": "f9533c79ab03efa5",
        "text": "Kademlia is a distributed hash table for decentralized peer-to-peer computer networks designed by Petar Maymounkov and David Mazières in 2002.[1][2] It specifies the structure of the network and the exchange of information through node lookups. Kademlia nodes communicate among themselves using UDP. A virtual or overlay network is formed by the participant nodes. Each node is identified by a number or node ID. The node ID serves not only as identification, but the Kademlia algorithm uses the node ID to locate values (usually file hashes or keywords). In fact, the node ID provides a direct map to file hashes and that node stores information on where to obtain the file or resource."
      },
      "date": 1448712048488
    },
    {
      "type": "move",
      "order": [
        "03b5de8e574fc07a",
        "f9533c79ab03efa5",
        "5bf42d12ca0b09df",
        "f6a69c6cb96c489c",
        "10f80f2c403d56ce",
        "f03804c9e0d8548a",
        "b5a65949675edb33",
        "260d452b6a9c0a83"
      ],
      "id": "f9533c79ab03efa5",
      "date": 1448712051428
    },
    {
      "type": "edit",
      "id": "f9533c79ab03efa5",
      "item": {
        "type": "paragraph",
        "id": "f9533c79ab03efa5",
        "text": "# Kademlia"
      },
      "date": 1448712062807
    },
    {
      "type": "edit",
      "id": "f9533c79ab03efa5",
      "item": {
        "type": "markdown",
        "id": "f9533c79ab03efa5",
        "text": "# Kademlia"
      },
      "date": 1448712064131
    },
    {
      "type": "add",
      "id": "28808184f132126e",
      "item": {
        "type": "paragraph",
        "id": "28808184f132126e",
        "text": "Kademlia is a distributed hash table for decentralized peer-to-peer computer networks designed by Petar Maymounkov and David Mazières in 2002.[1][2] It specifies the structure of the network and the exchange of information through node lookups. Kademlia nodes communicate among themselves using UDP. "
      },
      "after": "f9533c79ab03efa5",
      "date": 1448712079615
    },
    {
      "type": "add",
      "id": "949fce8ea7d10fd5",
      "item": {
        "type": "paragraph",
        "id": "949fce8ea7d10fd5",
        "text": "A virtual or overlay network is formed by the participant nodes. Each node is identified by a number or node ID. The node ID serves not only as identification, but the Kademlia algorithm uses the node ID to locate values (usually file hashes or keywords). In fact, the node ID provides a direct map to file hashes and that node stores information on where to obtain the file or resource."
      },
      "after": "28808184f132126e",
      "date": 1448712085182
    },
    {
      "type": "add",
      "id": "9f31c2d9dd1f2a25",
      "item": {
        "type": "paragraph",
        "id": "9f31c2d9dd1f2a25",
        "text": "# Research"
      },
      "after": "949fce8ea7d10fd5",
      "date": 1448712091529
    },
    {
      "type": "edit",
      "id": "9f31c2d9dd1f2a25",
      "item": {
        "type": "markdown",
        "id": "9f31c2d9dd1f2a25",
        "text": "# Research"
      },
      "date": 1448712092662
    },
    {
      "type": "edit",
      "id": "28808184f132126e",
      "item": {
        "type": "paragraph",
        "id": "28808184f132126e",
        "text": "Kademlia is the  distributed hash table used as a core component of IPFS."
      },
      "date": 1448712126345
    },
    {
      "type": "add",
      "id": "23e8c6fd32a23641",
      "item": {
        "type": "paragraph",
        "id": "23e8c6fd32a23641",
        "text": "Kademlia is a distributed hash table for decentralized peer-to-peer computer networks designed by Petar Maymounkov and David Mazières in 2002.[1][2] It specifies the structure of the network and the exchange of information through node lookups. Kademlia nodes communicate among themselves using UDP. "
      },
      "after": "28808184f132126e",
      "date": 1448712127744
    },
    {
      "type": "edit",
      "id": "28808184f132126e",
      "item": {
        "type": "paragraph",
        "id": "28808184f132126e",
        "text": "Kademlia is the inspiration for the distributed hash table used as a core component of [[IPFS]]."
      },
      "date": 1448712142681
    },
    {
      "type": "edit",
      "id": "23e8c6fd32a23641",
      "item": {
        "type": "paragraph",
        "id": "23e8c6fd32a23641",
        "text": "Kademlia is a distributed hash table for decentralized peer-to-peer computer networks designed by Petar Maymounkov and David Mazières in 2002. "
      },
      "date": 1448712158945
    },
    {
      "type": "add",
      "id": "4d866a4aff3aa9ee",
      "item": {
        "type": "paragraph",
        "id": "4d866a4aff3aa9ee",
        "text": "It specifies the structure of the network and the exchange of information through node lookups. Kademlia nodes communicate among themselves using UDP. "
      },
      "after": "23e8c6fd32a23641",
      "date": 1448712161554
    },
    {
      "type": "remove",
      "id": "949fce8ea7d10fd5",
      "date": 1448712173865
    },
    {
      "type": "fork",
      "date": 1450108129194
    },
    {
      "type": "edit",
      "id": "28808184f132126e",
      "item": {
        "type": "paragraph",
        "id": "28808184f132126e",
        "text": "[[Kademlia]] is the inspiration for the distributed hash table used as a core component of [[IPFS]]."
      },
      "date": 1450109595044
    },
    {
      "type": "remove",
      "id": "28808184f132126e",
      "date": 1450109610575
    },
    {
      "type": "remove",
      "id": "23e8c6fd32a23641",
      "date": 1450109612721
    },
    {
      "type": "remove",
      "id": "4d866a4aff3aa9ee",
      "date": 1450109618082
    },
    {
      "item": {
        "type": "factory",
        "id": "d1a990d27444c9cc"
      },
      "id": "d1a990d27444c9cc",
      "type": "add",
      "after": "260d452b6a9c0a83",
      "date": 1450109621174
    },
    {
      "type": "edit",
      "id": "d1a990d27444c9cc",
      "item": {
        "type": "reference",
        "id": "d1a990d27444c9cc",
        "site": "future.fedwiki.org",
        "slug": "kademlia",
        "title": "Kademlia",
        "text": "[[Kademlia]] is the inspiration for the distributed hash table used as a core component of [[IPFS]]."
      },
      "date": 1450109623685
    },
    {
      "type": "move",
      "order": [
        "03b5de8e574fc07a",
        "f9533c79ab03efa5",
        "d1a990d27444c9cc",
        "9f31c2d9dd1f2a25",
        "5bf42d12ca0b09df",
        "f6a69c6cb96c489c",
        "10f80f2c403d56ce",
        "f03804c9e0d8548a",
        "b5a65949675edb33",
        "260d452b6a9c0a83"
      ],
      "id": "d1a990d27444c9cc",
      "date": 1450109625919
    },
    {
      "type": "edit",
      "id": "f9533c79ab03efa5",
      "item": {
        "type": "markdown",
        "id": "f9533c79ab03efa5",
        "text": "# Examples"
      },
      "date": 1450109639796
    }
  ]
}