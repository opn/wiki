{
  "title": "Polyglot Virtual Machines",
  "story": [
    {
      "type": "paragraph",
      "id": "a75bf51814a65087",
      "text": "It’s by now a cliché that JS has become the assembly language of the Web. Rather, JS is one syntax for a portable and safe machine language, let’s say. Today I’m pleased to announce that cross-browser work has begun on WebAssembly, a new intermediate representation for safe code on the Web - [https://brendaneich.com/ brendaneich.com]\n\nWhat: [[WebAssembly]], “wasm” for short, .wasm filename suffix, a new binary syntax for low-level safe code, initially co-expressive with asm.js, but in the long run able to diverge from JS’s semantics, in order to best serve as common object-level format for multiple source-level programming languages."
    },
    {
      "type": "video",
      "id": "81018ff1490d5125",
      "text": "YOUTUBE PlmsweSNhTw\n(double-click to edit caption)\n"
    },
    {
      "type": "reference",
      "id": "0e181985f3a89f26",
      "site": "c0de.academy",
      "slug": "transpiler",
      "title": "Transpiler",
      "text": "A source-to-source compiler, transcompiler or transpiler is a type of compiler that takes the source code of a program written in one programming language as its input and produces the equivalent source code in another programming language - [https://en.wikipedia.org/wiki/Source-to-source_compiler wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "2007e07fcefbc91f",
      "text": "How: If you use [[Emscripten]], then [[wasm]] support via a command-line flag will at first include and target the prototype polyfill. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Polyglot Virtual Machines",
        "story": []
      },
      "date": 1450382253985
    },
    {
      "item": {
        "type": "factory",
        "id": "81018ff1490d5125"
      },
      "id": "81018ff1490d5125",
      "type": "add",
      "date": 1450382255058
    },
    {
      "item": {
        "type": "factory",
        "id": "0e181985f3a89f26"
      },
      "id": "0e181985f3a89f26",
      "type": "add",
      "after": "81018ff1490d5125",
      "date": 1450382256842
    },
    {
      "item": {
        "type": "factory",
        "id": "a75bf51814a65087"
      },
      "id": "a75bf51814a65087",
      "type": "add",
      "after": "0e181985f3a89f26",
      "date": 1450382258062
    },
    {
      "type": "edit",
      "id": "0e181985f3a89f26",
      "item": {
        "type": "reference",
        "id": "0e181985f3a89f26",
        "site": "c0de.academy",
        "slug": "transpiler",
        "title": "Transpiler",
        "text": "A source-to-source compiler, transcompiler or transpiler is a type of compiler that takes the source code of a program written in one programming language as its input and produces the equivalent source code in another programming language - [https://en.wikipedia.org/wiki/Source-to-source_compiler wikipedia]"
      },
      "date": 1450385300658
    },
    {
      "type": "edit",
      "id": "81018ff1490d5125",
      "item": {
        "type": "video",
        "id": "81018ff1490d5125",
        "text": "YOUTUBE PlmsweSNhTw\n(double-click to edit caption)\n"
      },
      "date": 1450386482275
    },
    {
      "type": "move",
      "order": [
        "a75bf51814a65087",
        "81018ff1490d5125",
        "0e181985f3a89f26"
      ],
      "id": "a75bf51814a65087",
      "date": 1450386489140
    },
    {
      "type": "edit",
      "id": "a75bf51814a65087",
      "item": {
        "type": "paragraph",
        "id": "a75bf51814a65087",
        "text": "It’s by now a cliché that JS has become the assembly language of the Web. Rather, JS is one syntax for a portable and safe machine language, let’s say. Today I’m pleased to announce that cross-browser work has begun on WebAssembly, a new intermediate representation for safe code on the Web.\n\nWhat: WebAssembly, “wasm” for short, .wasm filename suffix, a new binary syntax for low-level safe code, initially co-expressive with asm.js, but in the long run able to diverge from JS’s semantics, in order to best serve as common object-level format for multiple source-level programming languages."
      },
      "date": 1450387817640
    },
    {
      "type": "edit",
      "id": "a75bf51814a65087",
      "item": {
        "type": "paragraph",
        "id": "a75bf51814a65087",
        "text": "It’s by now a cliché that JS has become the assembly language of the Web. Rather, JS is one syntax for a portable and safe machine language, let’s say. Today I’m pleased to announce that cross-browser work has begun on WebAssembly, a new intermediate representation for safe code on the Web - [https://brendaneich.com/ brendaneich.com]\n\nWhat: WebAssembly, “wasm” for short, .wasm filename suffix, a new binary syntax for low-level safe code, initially co-expressive with asm.js, but in the long run able to diverge from JS’s semantics, in order to best serve as common object-level format for multiple source-level programming languages."
      },
      "date": 1450387841839
    },
    {
      "item": {
        "type": "factory",
        "id": "2007e07fcefbc91f"
      },
      "id": "2007e07fcefbc91f",
      "type": "add",
      "after": "0e181985f3a89f26",
      "date": 1450387898428
    },
    {
      "type": "edit",
      "id": "2007e07fcefbc91f",
      "item": {
        "type": "paragraph",
        "id": "2007e07fcefbc91f",
        "text": "How: If you use [[Emscripten]], then [[wasm]] support via a command-line flag will at first include and target the prototype polyfill. "
      },
      "date": 1450387929442
    },
    {
      "type": "edit",
      "id": "a75bf51814a65087",
      "item": {
        "type": "paragraph",
        "id": "a75bf51814a65087",
        "text": "It’s by now a cliché that JS has become the assembly language of the Web. Rather, JS is one syntax for a portable and safe machine language, let’s say. Today I’m pleased to announce that cross-browser work has begun on WebAssembly, a new intermediate representation for safe code on the Web - [https://brendaneich.com/ brendaneich.com]\n\nWhat: [[WebAssembly]], “wasm” for short, .wasm filename suffix, a new binary syntax for low-level safe code, initially co-expressive with asm.js, but in the long run able to diverge from JS’s semantics, in order to best serve as common object-level format for multiple source-level programming languages."
      },
      "date": 1450387941571
    }
  ]
}