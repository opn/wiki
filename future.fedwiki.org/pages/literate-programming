{
  "title": "Literate programming",
  "journal": [
    {
      "date": 1453226057252,
      "type": "create",
      "item": {
        "story": "",
        "title": "Literate programming"
      }
    },
    {
      "type": "add",
      "id": "e7ba24df62ced955edf096ae20872ffe",
      "item": {
        "type": "factory",
        "id": "e7ba24df62ced955edf096ae20872ffe"
      },
      "date": 1453226057252
    },
    {
      "type": "edit",
      "id": "e7ba24df62ced955edf096ae20872ffe",
      "item": {
        "type": "factory",
        "id": "e7ba24df62ced955edf096ae20872ffe"
      },
      "date": 1453226057252
    },
    {
      "type": "add",
      "id": "d20ca902e1b2bb59254debd3a27bba99",
      "after": "e7ba24df62ced955edf096ae20872ffe",
      "item": {
        "type": "factory",
        "id": "d20ca902e1b2bb59254debd3a27bba99"
      },
      "date": 1453226057252
    },
    {
      "type": "edit",
      "id": "d20ca902e1b2bb59254debd3a27bba99",
      "item": {
        "id": "d20ca902e1b2bb59254debd3a27bba99",
        "type": "html",
        "text": "<p><b>Literate programming</b> is an approach to programming introduced by Donald Knuth in which a program is given as an explanation of the program logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which a compilable source code can be generated.</p>\n<p>The literate programming paradigm, as conceived by Knuth, represents a move away from writing programs in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. Literate programs are written as an uninterrupted exposition of logic in an ordinary human language, much like the text of an essay, in which macros are included to hide abstractions and traditional source code.</p>\n<p>Literate programming tools are used to obtain two representations from a literate source file: one suitable for further compilation or execution by a computer, the \"tangled\" code, and another for viewing as formatted documentation, which is said to be \"woven\" from the literate source. While the first generation of literate programming tools were computer language-specific, the later ones are language-agnostic and exist above the programming languages.</p>\n<p></p>"
      },
      "date": 1453226057252
    },
    {
      "type": "fork",
      "date": 1453226087036
    },
    {
      "type": "edit",
      "id": "d20ca902e1b2bb59254debd3a27bba99",
      "item": {
        "type": "html",
        "id": "d20ca902e1b2bb59254debd3a27bba99",
        "text": "\n<p>The literate programming paradigm, as conceived by Knuth, represents a move away from writing programs in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. Literate programs are written as an uninterrupted exposition of logic in an ordinary human language, much like the text of an essay, in which macros are included to hide abstractions and traditional source code.</p>\n<p>Literate programming tools are used to obtain two representations from a literate source file: one suitable for further compilation or execution by a computer, the \"tangled\" code, and another for viewing as formatted documentation, which is said to be \"woven\" from the literate source. While the first generation of literate programming tools were computer language-specific, the later ones are language-agnostic and exist above the programming languages.</p>\n<p></p>"
      },
      "date": 1453226131206
    },
    {
      "type": "edit",
      "id": "e7ba24df62ced955edf096ae20872ffe",
      "item": {
        "id": "e7ba24df62ced955edf096ae20872ffe",
        "type": "paragraph",
        "text": "Literate programming is an approach to programming introduced by Donald Knuth in which a program is given as an explanation of the program logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which a compilable source code can be generated."
      },
      "date": 1453226134062
    },
    {
      "type": "edit",
      "id": "e7ba24df62ced955edf096ae20872ffe",
      "item": {
        "id": "e7ba24df62ced955edf096ae20872ffe",
        "type": "paragraph",
        "text": "Literate programming is an approach to programming introduced by Donald Knuth in which a program is given as an explanation of the program logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which a compilable source code can be generated - [https://en.wikipedia.org/wiki/Literate_programming wikipedia]"
      },
      "date": 1453226150048
    },
    {
      "type": "edit",
      "id": "d20ca902e1b2bb59254debd3a27bba99",
      "item": {
        "type": "html",
        "id": "d20ca902e1b2bb59254debd3a27bba99",
        "text": "Literate programming tools are used to obtain two representations from a literate source file: one suitable for further compilation or execution by a computer, the \"tangled\" code, and another for viewing as formatted documentation, which is said to be \"woven\" from the literate source. While the first generation of literate programming tools were computer language-specific, the later ones are language-agnostic and exist above the programming languages."
      },
      "date": 1453226177361
    },
    {
      "type": "add",
      "id": "c006169010a11bdb",
      "item": {
        "type": "paragraph",
        "id": "c006169010a11bdb",
        "text": "The literate programming paradigm, as conceived by Knuth, represents a move away from writing programs in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. "
      },
      "after": "e7ba24df62ced955edf096ae20872ffe",
      "date": 1453226187792
    },
    {
      "type": "add",
      "id": "67acc7fe8516fad8",
      "item": {
        "type": "paragraph",
        "id": "67acc7fe8516fad8",
        "text": "Literate programs are written as an uninterrupted exposition of logic in an ordinary human language, much like the text of an essay, in which macros are included to hide abstractions and traditional source code."
      },
      "after": "c006169010a11bdb",
      "date": 1453226189363
    },
    {
      "type": "edit",
      "id": "c006169010a11bdb",
      "item": {
        "type": "paragraph",
        "id": "c006169010a11bdb",
        "text": "The literate programming paradigm represents a move away from writing programs in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. "
      },
      "date": 1453226212123
    },
    {
      "item": {
        "type": "factory",
        "id": "b0335d760424b3da"
      },
      "id": "b0335d760424b3da",
      "type": "add",
      "after": "d20ca902e1b2bb59254debd3a27bba99",
      "date": 1453226259056
    },
    {
      "type": "edit",
      "id": "b0335d760424b3da",
      "item": {
        "type": "reference",
        "id": "b0335d760424b3da",
        "site": "future.fedwiki.org",
        "slug": "tangled-web",
        "title": "Tangled Web",
        "text": "The tangled-web is the combination of several ideas into a single unified way of authoring which includes code and annotation (text, video, audio etc) in a single environment."
      },
      "date": 1453226261359
    },
    {
      "item": {
        "type": "factory",
        "id": "1e642859112e6ebb"
      },
      "id": "1e642859112e6ebb",
      "type": "add",
      "after": "b0335d760424b3da",
      "date": 1453226266921
    },
    {
      "type": "edit",
      "id": "1e642859112e6ebb",
      "item": {
        "type": "reference",
        "id": "1e642859112e6ebb",
        "site": "future.fedwiki.org",
        "slug": "literate-wiki",
        "title": "Literate Wiki",
        "text": "The basic idea behind [[Literate Wiki]] is for a wiki page to describe and document a software program as well as to extract the code that is described."
      },
      "date": 1453226270947
    },
    {
      "item": {
        "type": "factory",
        "id": "4017347ca931bac0"
      },
      "id": "4017347ca931bac0",
      "type": "add",
      "after": "1e642859112e6ebb",
      "date": 1453226291419
    },
    {
      "type": "edit",
      "id": "4017347ca931bac0",
      "item": {
        "type": "reference",
        "id": "4017347ca931bac0",
        "site": "future.fedwiki.org",
        "slug": "tangled-plugin",
        "title": "Tangled Plugin",
        "text": "The tangled-plugin is a plugin that help weave the [[tangled web]]. It is an authoring tool for [[Federation REST Services]]."
      },
      "date": 1453226293826
    },
    {
      "item": {
        "type": "factory",
        "id": "11040474b7aee9ee"
      },
      "id": "11040474b7aee9ee",
      "type": "add",
      "after": "4017347ca931bac0",
      "date": 1461518502624
    },
    {
      "type": "remove",
      "id": "11040474b7aee9ee",
      "date": 1461518933934
    },
    {
      "type": "fork",
      "date": 1470583684215
    },
    {
      "item": {
        "type": "factory",
        "id": "444bcd78915cba01"
      },
      "id": "444bcd78915cba01",
      "type": "add",
      "after": "4017347ca931bac0",
      "date": 1470583685503
    },
    {
      "type": "add",
      "item": {
        "id": "0e79f0ebbab8628f",
        "type": "reference",
        "site": "future.fedwiki.org",
        "slug": "expanding-the-role-of-tools",
        "title": "Expanding the Role of Tools",
        "text": "Expanding the Role of Tools in a \nLiterate Programming Environment. Kent Beck, \nWard Cunningham.\nTektronix.\n\n"
      },
      "after": "4017347ca931bac0",
      "id": "0e79f0ebbab8628f",
      "date": 1470583690249
    },
    {
      "type": "add",
      "item": {
        "id": "4e9aaf9abe65199c",
        "type": "reference",
        "site": "future.fedwiki.org",
        "slug": "literate-wiki",
        "title": "Literate Wiki",
        "text": "The basic idea behind [[Literate Wiki]] is for a wiki page to describe and document a software program as well as to extract the code that is described."
      },
      "after": "d20ca902e1b2bb59254debd3a27bba99",
      "id": "4e9aaf9abe65199c",
      "date": 1470583696694
    },
    {
      "type": "add",
      "item": {
        "id": "0987e3a83d12b29a",
        "type": "reference",
        "site": "code.fed.wiki.org",
        "slug": "hyperperl",
        "title": "HyperPerl",
        "text": "HyperPerl is both a program representation, a language, and a translator that prepares programs to be executed. The programs are literate, in that they are embedded within a narrative about their purpose and operation. HyperPerl programs are hosted by wiki and translated from markup to straight script by hp.cgi. [http://c2.com/w4/wikibase/wiki.cgi?HyperPerl wikibase]"
      },
      "after": "0e79f0ebbab8628f",
      "id": "0987e3a83d12b29a",
      "date": 1470583712344
    }
  ],
  "story": [
    {
      "id": "e7ba24df62ced955edf096ae20872ffe",
      "type": "paragraph",
      "text": "Literate programming is an approach to programming introduced by Donald Knuth in which a program is given as an explanation of the program logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which a compilable source code can be generated - [https://en.wikipedia.org/wiki/Literate_programming wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "c006169010a11bdb",
      "text": "The literate programming paradigm represents a move away from writing programs in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. "
    },
    {
      "type": "paragraph",
      "id": "67acc7fe8516fad8",
      "text": "Literate programs are written as an uninterrupted exposition of logic in an ordinary human language, much like the text of an essay, in which macros are included to hide abstractions and traditional source code."
    },
    {
      "type": "html",
      "id": "d20ca902e1b2bb59254debd3a27bba99",
      "text": "Literate programming tools are used to obtain two representations from a literate source file: one suitable for further compilation or execution by a computer, the \"tangled\" code, and another for viewing as formatted documentation, which is said to be \"woven\" from the literate source. While the first generation of literate programming tools were computer language-specific, the later ones are language-agnostic and exist above the programming languages."
    },
    {
      "id": "4e9aaf9abe65199c",
      "type": "reference",
      "site": "future.fedwiki.org",
      "slug": "literate-wiki",
      "title": "Literate Wiki",
      "text": "The basic idea behind [[Literate Wiki]] is for a wiki page to describe and document a software program as well as to extract the code that is described."
    },
    {
      "type": "reference",
      "id": "b0335d760424b3da",
      "site": "future.fedwiki.org",
      "slug": "tangled-web",
      "title": "Tangled Web",
      "text": "The tangled-web is the combination of several ideas into a single unified way of authoring which includes code and annotation (text, video, audio etc) in a single environment."
    },
    {
      "type": "reference",
      "id": "1e642859112e6ebb",
      "site": "future.fedwiki.org",
      "slug": "literate-wiki",
      "title": "Literate Wiki",
      "text": "The basic idea behind [[Literate Wiki]] is for a wiki page to describe and document a software program as well as to extract the code that is described."
    },
    {
      "type": "reference",
      "id": "4017347ca931bac0",
      "site": "future.fedwiki.org",
      "slug": "tangled-plugin",
      "title": "Tangled Plugin",
      "text": "The tangled-plugin is a plugin that help weave the [[tangled web]]. It is an authoring tool for [[Federation REST Services]]."
    },
    {
      "id": "0e79f0ebbab8628f",
      "type": "reference",
      "site": "future.fedwiki.org",
      "slug": "expanding-the-role-of-tools",
      "title": "Expanding the Role of Tools",
      "text": "Expanding the Role of Tools in a \nLiterate Programming Environment. Kent Beck, \nWard Cunningham.\nTektronix.\n\n"
    },
    {
      "id": "0987e3a83d12b29a",
      "type": "reference",
      "site": "code.fed.wiki.org",
      "slug": "hyperperl",
      "title": "HyperPerl",
      "text": "HyperPerl is both a program representation, a language, and a translator that prepares programs to be executed. The programs are literate, in that they are embedded within a narrative about their purpose and operation. HyperPerl programs are hosted by wiki and translated from markup to straight script by hp.cgi. [http://c2.com/w4/wikibase/wiki.cgi?HyperPerl wikibase]"
    },
    {
      "type": "factory",
      "id": "444bcd78915cba01"
    }
  ]
}