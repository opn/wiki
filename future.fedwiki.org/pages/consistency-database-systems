{
  "title": "Consistency (database systems)",
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "Consistency (database systems)"
      },
      "date": 1466948151195,
      "source": {
        "pageTitle": "Consistency (database systems)",
        "pageSlug": "Consistency_(database_systems)",
        "url": "https://en.wikipedia.org/wiki/Consistency_(database_systems)",
        "date": 1466948151195,
        "link_dictionary": {
          "wiki_links": {
            "As an ACID guarantee": {
              "section_number": 1,
              "section_level": 2,
              "dot_number": 1
            },
            "See also": {
              "section_number": 3,
              "section_level": 2,
              "dot_number": 3
            },
            "As a CAP trade-off": {
              "section_number": 2,
              "section_level": 2,
              "dot_number": 2
            },
            "References": {
              "section_number": 4,
              "section_level": 2,
              "dot_number": 4
            }
          },
          "default": {
            "transport": "https://livecode.world/mediawiki/importSection"
          }
        },
        "transport": "https://livecode.world/mediawiki/transportAgain",
        "rev": 674938190,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "fork",
      "date": 1466948155969
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2815d8f0-e832-403a-8dc3-638668347b5a",
        "text": "The [[CAP Theorem]] is based on three trade-offs, one of which is \"atomic consistency\" (shortened to \"consistency\" for the acronym), about which the authors note, \"Discussing atomic consistency is somewhat different than talking about an ACID database, as database consistency refers to transactions, while atomic consistency refers only to a property of a single request/response operation sequence. And it has a different meaning than the Atomic in ACID, as it subsumes the database notions of both Atomic and Consistent.\"<ref name=\"CAP Theorem Paper\" /> - [https://en.wikipedia.org/wiki/Consistency_(database_systems)#As_a_CAP_trade-off wikipedia]"
      },
      "after": "1fec66bf-2c37-47fc-8f92-f5710af4895c",
      "id": "2815d8f0-e832-403a-8dc3-638668347b5a",
      "date": 1466948176035
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f60c437f-2687-454f-bccd-d628482b1834",
        "text": "The [[CAP Theorem]] is based on three trade-offs, one of which is \"atomic consistency\" (shortened to \"consistency\" for the acronym), about which the authors note, \"Discussing atomic consistency is somewhat different than talking about an ACID database, as database consistency refers to transactions, while atomic consistency refers only to a property of a single request/response operation sequence. And it has a different meaning than the Atomic in ACID, as it subsumes the database notions of both Atomic and Consistent.\"<ref name=\"CAP Theorem Paper\" />"
      },
      "after": "2815d8f0-e832-403a-8dc3-638668347b5a",
      "id": "f60c437f-2687-454f-bccd-d628482b1834",
      "date": 1466948178881
    },
    {
      "type": "remove",
      "id": "f60c437f-2687-454f-bccd-d628482b1834",
      "date": 1466948184847
    },
    {
      "type": "edit",
      "id": "2815d8f0-e832-403a-8dc3-638668347b5a",
      "item": {
        "type": "paragraph",
        "id": "2815d8f0-e832-403a-8dc3-638668347b5a",
        "text": "The [[CAP Theorem]] is based on three trade-offs, one of which is \"atomic consistency\" (shortened to \"consistency\" for the acronym), about which the authors note, \"Discussing atomic consistency is somewhat different than talking about an ACID database, as database consistency refers to transactions, while atomic consistency refers only to a property of a single request/response operation sequence. And it has a different meaning than the Atomic in ACID, as it subsumes the database notions of both Atomic and Consistent.\" - [https://en.wikipedia.org/wiki/Consistency_(database_systems)#As_a_CAP_trade-off wikipedia]"
      },
      "date": 1466948198791
    },
    {
      "type": "edit",
      "id": "813892d3-a59e-4e32-a2f0-0b092474ff01",
      "item": {
        "type": "markdown",
        "id": "813892d3-a59e-4e32-a2f0-0b092474ff01",
        "text": "# See also\n* [[As an ACID guarantee]]\n* [[See also]]\n* [[References]]"
      },
      "date": 1466948205511
    },
    {
      "type": "add",
      "id": "addd106b5ecf1bf4",
      "item": {
        "type": "paragraph",
        "id": "addd106b5ecf1bf4",
        "text": "# As a CAP trade-off\n"
      },
      "after": "1fec66bf-2c37-47fc-8f92-f5710af4895c",
      "date": 1466948216798
    },
    {
      "type": "edit",
      "id": "addd106b5ecf1bf4",
      "item": {
        "type": "markdown",
        "id": "addd106b5ecf1bf4",
        "text": "# As a CAP trade-off\n"
      },
      "date": 1466948218295
    },
    {
      "type": "remove",
      "id": "1fec66bf-2c37-47fc-8f92-f5710af4895c",
      "date": 1466948224238
    },
    {
      "item": {
        "type": "factory",
        "id": "ed53524660b1b55a"
      },
      "id": "ed53524660b1b55a",
      "type": "add",
      "after": "813892d3-a59e-4e32-a2f0-0b092474ff01",
      "date": 1466948266209
    },
    {
      "type": "edit",
      "id": "ed53524660b1b55a",
      "item": {
        "type": "reference",
        "id": "ed53524660b1b55a",
        "site": "future.fedwiki.org",
        "slug": "eventual-consistency",
        "title": "Eventual consistency",
        "text": "Eventual consistency is a consistency model used in distributed computing to achieve high availability that informally guarantees that, if no new updates are made to a given data item, eventually all accesses to that item will return the last updated value - [https://en.wikipedia.org/wiki/Eventual_consistency wikipedia]"
      },
      "date": 1466948342090
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "a121c1db-dbe9-44da-8405-22fc13097700",
      "text": "Consistency in database systems refers to the requirement that any given database transaction must change affected data only in allowed ways. Any data written to the database must be valid according to all defined rules, including constraints, cascades, triggers, and any combination thereof. This does not guarantee correctness of the transaction in all ways the application programmer might have wanted (that is the responsibility of application-level code) but merely that any programming errors cannot result in the violation of any defined rules - [https://en.wikipedia.org/wiki/Consistency_(database_systems) wikipedia]"
    },
    {
      "type": "markdown",
      "id": "addd106b5ecf1bf4",
      "text": "# As a CAP trade-off\n"
    },
    {
      "type": "paragraph",
      "id": "2815d8f0-e832-403a-8dc3-638668347b5a",
      "text": "The [[CAP Theorem]] is based on three trade-offs, one of which is \"atomic consistency\" (shortened to \"consistency\" for the acronym), about which the authors note, \"Discussing atomic consistency is somewhat different than talking about an ACID database, as database consistency refers to transactions, while atomic consistency refers only to a property of a single request/response operation sequence. And it has a different meaning than the Atomic in ACID, as it subsumes the database notions of both Atomic and Consistent.\" - [https://en.wikipedia.org/wiki/Consistency_(database_systems)#As_a_CAP_trade-off wikipedia]"
    },
    {
      "type": "markdown",
      "id": "813892d3-a59e-4e32-a2f0-0b092474ff01",
      "text": "# See also\n* [[As an ACID guarantee]]\n* [[See also]]\n* [[References]]"
    },
    {
      "type": "reference",
      "id": "ed53524660b1b55a",
      "site": "future.fedwiki.org",
      "slug": "eventual-consistency",
      "title": "Eventual consistency",
      "text": "Eventual consistency is a consistency model used in distributed computing to achieve high availability that informally guarantees that, if no new updates are made to a given data item, eventually all accesses to that item will return the last updated value - [https://en.wikipedia.org/wiki/Eventual_consistency wikipedia]"
    }
  ]
}