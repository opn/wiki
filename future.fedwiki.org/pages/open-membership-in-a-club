{
  "title": "Open Membership in a Club",
  "story": [
    {
      "type": "paragraph",
      "id": "093f25c50dcb02fa",
      "text": "I'm thinking about a new plugin, Club, that would be a Roster that anyone can join. [https://riot.im/app/#/room/#fedwiki:matrix.org/$1497016284842413CFLsy:matrix.org matrix]"
    },
    {
      "type": "paragraph",
      "id": "31b9f51a2a380246",
      "text": "A Club works like a Roster until you fork the page that holds it. If the new home is not in the Club, the 'Join' button appears. Click-it and you are in. Simple, eh?\n"
    },
    {
      "type": "paragraph",
      "id": "18cbb74dac1aff12",
      "text": "Anyone could found a new Club. Make a page meant to be shared and then add a new Club to it. This makes you the founder. You have the special privilege and obligation of holding the membership list for everyone else. "
    },
    {
      "type": "paragraph",
      "id": "1b596c5fca554ab9",
      "text": "New members would add their site to your roster when they click 'join'. We don't normally let others write on your wiki but you invite this by founding the club. A server admin would have to install the Club plugin before anyone could even make such invitations.\n"
    },
    {
      "type": "paragraph",
      "id": "e2ae56a7251077a3",
      "text": "What could go wrong?\n"
    },
    {
      "type": "pagefold",
      "id": "35b2cce5f9a01101",
      "text": "abandonment"
    },
    {
      "type": "paragraph",
      "id": "f73a3f8f2bf00689",
      "text": "The founder could disappear with the Club roster. Poof, there is no club. But anyone who had been sharing would still be connected by their Collaborative Links. We've considered a more complicated workflow that includes sedition. I'm not sure how that would work. [http://forage.ward.fed.wiki.org/broadcast-workflow.html post]"
    },
    {
      "type": "paragraph",
      "id": "29c89276b5de85b9",
      "text": "DB: this I can live with."
    },
    {
      "type": "pagefold",
      "id": "c90417f8abbe21a9",
      "text": "vandalism"
    },
    {
      "type": "paragraph",
      "id": "4167eca883f7cb8b",
      "text": "What could go wrong?\nWithout any defenses, potentially an awful lot could go wrong."
    },
    {
      "type": "paragraph",
      "id": "e0eb2a751e703679",
      "text": "Some vandal could write a script to stuff the Club with fake members ruining it for everyone else. The founder could revert to a previous revision to clean this out and thus mitigate most of the damage. Perhaps the founder could open and close registrations or maybe add an enrollment-key to be spread through private channels. This ruins the openness but it is how cyberspace works today. The best defence might be to have lots of founders making lots of clubs, more than there are vandals."
    },
    {
      "type": "paragraph",
      "id": "ec219047c0e754ba",
      "text": "DB: the usual ghost and fork mechanism could solve this. New members are not automatically included on the roster until the admin interacts with it - previewing a ghost page, and then forking it to accept."
    },
    {
      "type": "paragraph",
      "id": "e7799609e27e7b3f",
      "text": "Require some or maybe all of rate limiting, blacklists, probing joining site to test if it really is a wiki, and some out of band confirmation."
    },
    {
      "type": "paragraph",
      "id": "274b48129b935337",
      "text": "An attack could be on the founder's site. If we capped the size of a club then then we have a circuit breaker for that."
    },
    {
      "type": "paragraph",
      "id": "5342750308497534",
      "text": "Similar to webmention, vouch, etc."
    },
    {
      "type": "pagefold",
      "id": "b4cd50b3b13fdb97",
      "text": "attention"
    },
    {
      "type": "paragraph",
      "id": "bbc3037d06372318",
      "text": " An attack on the member's attention is more subtle. This is the same as fake news on facebook. Maybe readers need a way to un-friend sites they find un-friendly. This could be an anti-neighborhood of sorts."
    },
    {
      "type": "paragraph",
      "id": "2d39691272372263",
      "text": "This is just a way to share attention. If you join my Club then you will get some attention from me and my members. That's not promising a lot. "
    },
    {
      "type": "paragraph",
      "id": "1e055164db929116",
      "text": "Having a way of removing a site from the current neighborhood might be interesting. Though if that was something that could be forked it would be another potential attack."
    },
    {
      "type": "paragraph",
      "id": "2696673e94a16367",
      "text": "I'd like to make the rules such that I could have a New Author's Club added as the last todo in the Field Guide to the Federation.\nSee [http://hello.ward.bay.wiki.org/view/field-guide-to-the-federation/view/youre-new-here wiki]\nThis would be a likely attack surface for sure."
    },
    {
      "type": "paragraph",
      "id": "8d20aface2845535",
      "text": "I remember an comment from some time ago, about only getting spam if you invite it. This has potential to let the spammer, bad actor, invite themselves.\n"
    },
    {
      "type": "pagefold",
      "id": "052f6cc0cae95dc8",
      "text": "transparency"
    },
    {
      "type": "paragraph",
      "id": "42a27bfd9eed7fc2",
      "text": "I'm wondering if there is some clever little rule that tips behavior in favor of founders and members looking for ways to make a Club go right. "
    },
    {
      "type": "paragraph",
      "id": "ef3b6559673f2694",
      "text": "My original wiki, the People, Projects, and Patterns wiki, had a People Index page that makes some interesting reading even today.\nSee [http://wiki.c2.com/?PeopleIndex wiki]\nOf course that was launched into a kinder and gentler internet."
    },
    {
      "type": "paragraph",
      "id": "0536b1957837b2be",
      "text": "The Roster plugin formats sites in rows of 18, where that becomes the unit for adding new sites to your neighborhood. Rosters can also be divided into sections. "
    },
    {
      "type": "paragraph",
      "id": "26514c5028ed74dc",
      "text": "Maybe the default behavior for the Club plugin is to separate the rows into confirmed and unconfirmed members with a possible cap on unconfirmed. The Club founder would promote members to confirmed status by what ever means might be appropriate. The founder is then moderating membership on behalf of other members and all other readers too.\n"
    },
    {
      "type": "pagefold",
      "id": "5198b203583cde72",
      "text": "registration"
    },
    {
      "type": "paragraph",
      "id": "33288e756641d8b8",
      "text": "I wonder if rather than using a Club plugin this could be achieve with something that sites along side the wiki. A bit like invitation automation that exists around some slack rooms.\n"
    },
    {
      "type": "paragraph",
      "id": "9f608315293475a0",
      "text": "You give the invitation bot your email and fedwiki url - it then probably check that you really did initiate the invite, and them completes the process with a potential for a manual check.\nIn the farm context, if providing hosting for club members, this could include the provision of a wiki."
    },
    {
      "type": "paragraph",
      "id": "715d6800fce99d6d",
      "text": "Do you know how folks setup Slack membership automation? Does Slack provide this mechanism?\n"
    },
    {
      "type": "paragraph",
      "id": "8d603daf5436f2ee",
      "text": "Don't think slack provides this, been a long time since I looked - I am thinking of projects like https://github.com/rauchg/slackin\n"
    },
    {
      "type": "paragraph",
      "id": "927ff78583306b3d",
      "text": "That's pretty neat. Have to host a server to run it though.\nI wonder if that could be hacked to front-end a wiki farm?\n"
    },
    {
      "type": "paragraph",
      "id": "79b000555cc644cb",
      "text": "Is slackin a node app? A fork might slide nicely into wiki-server."
    },
    {
      "type": "paragraph",
      "id": "9dee2691b9bfebc4",
      "text": "That would be neat - if a user connects to a wiki that does not yet exist - they get a page that invites them to go though a self provisioning process - that creates a wiki site that comes already claimed for them.\nWould also counter the drive by wiki creation problem.\n\n"
    },
    {
      "type": "pagefold",
      "id": "3ed6eb0215139c06",
      "text": "blacklist"
    },
    {
      "type": "paragraph",
      "id": "60ecb2c9605cb4b9",
      "text": "I hope to make an experimental version of Club plugin today. Site admins can then enable it with Plugmatic. I will consider some form of Moderation, some natural limit on size, and maybe blacklists specified as Rosters. This might be interesting: you can join my club unless you are a member of his club.\n"
    },
    {
      "type": "paragraph",
      "id": "5d9fb40a18d61d19",
      "text": "A community could federate management of the blacklist if they are annoyed by compulsive joiners."
    },
    {
      "type": "paragraph",
      "id": "8663b6c0948f9376",
      "text": "It will be interesting to see how this works out. I think any blacklist itself needs to be moderated before the club owner finds themselves blacklisted."
    },
    {
      "type": "pagefold",
      "id": "c7b1c667548f53b5",
      "text": "authorization"
    },
    {
      "type": "paragraph",
      "id": "28c0e87766cfbb45",
      "text": "One implementation detail, how does the client-side of the Club plugin know if the reader who is trying to join is joining from an origin that they own and have logged in?\nE\nMy original suggestion was that you would fork the page to even see the join button. But random readers of that forked page shouldn't be the ones that are joining."
    },
    {
      "type": "paragraph",
      "id": "04f70c5d9ef4287f",
      "text": "Could be tricky - but as club plugin would have to be installed for it to work the check could use a secure url on that is served by the server part of the plugin. So that checks that you are the site owner.\nSo the client part of the plugin would need to recognise when it's on a forked copy of the page - site origin not the same as the home of the club?"
    },
    {
      "type": "paragraph",
      "id": "ec8ad4a62be12f06",
      "text": "DB: I'm wanderign if we can generalise this. The [[Transport]] mechanism needs authorisation - so sending oAuth headers with the Transport and some server side config can do this. "
    },
    {
      "type": "paragraph",
      "id": "c4880878cb81b429",
      "text": "DB: also we have the JSON plugin that accepts posts for new data. The roster could be modified to accept json plugin data, and this combined with oAuth restful interface for accepting posts - transports and json plugin would open up a range of possibilites."
    },
    {
      "type": "pagefold",
      "id": "da5cdcb398c467ce",
      "text": "spoofing"
    },
    {
      "type": "paragraph",
      "id": "d0a5d57ff1346050",
      "text": "That is probably not enough to prevent the join being spoofed - might want to have the join request save some random identifier in the plugin on the referring page. The club plugin on the club home site could then try accessing that page directly to check that the expect identifier has been set. A bit like some of the checks for site ownership that some of the Google tools use.\n"
    },
    {
      "type": "paragraph",
      "id": "a84f3ef81b357959",
      "text": "Maybe it doesn't use something stored on the page, but rather held with the server part of the plugin.\n"
    },
    {
      "type": "paragraph",
      "id": "1e89a7a09a8bc090",
      "text": "If there is a need to differentiate different club joining request there should be two values used, one as a key to get to the other the identifier."
    },
    {
      "type": "pagefold",
      "id": "8f3948f9f70e53e8",
      "text": "implementation"
    },
    {
      "type": "paragraph",
      "id": "95ad6e833cf3128c",
      "text": "All logic concentrated in Render and Join."
    },
    {
      "type": "paragraph",
      "id": "b243ffc1e59557e5",
      "text": "Save site and slug as club venue."
    },
    {
      "type": "paragraph",
      "id": "615056699ec5f981",
      "text": "Render for founder from text & members as if Roster."
    },
    {
      "type": "paragraph",
      "id": "97c0ac017db560bf",
      "text": "Render for others as if Transcluded Roster."
    },
    {
      "type": "paragraph",
      "id": "3da001f31628c502",
      "text": "Offer Join button if forked for non-member."
    },
    {
      "type": "paragraph",
      "id": "90f97a17d31f782e",
      "text": "Check origin, login, blacklist."
    },
    {
      "type": "paragraph",
      "id": "230576a63d4092c1",
      "text": "Server-side resolves joins vs. blacklist."
    },
    {
      "type": "paragraph",
      "id": "c6918fb06e09b88f",
      "text": "Examine Journal to resolve new from expelled members."
    },
    {
      "type": "paragraph",
      "id": "337caaceb37918e5",
      "text": "Fork from history should reverse recent decisions."
    },
    {
      "type": "paragraph",
      "id": "120a497d6b8e6220",
      "text": "Loose Club properties when dragged to new page."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Open Membership in a Club",
        "story": []
      },
      "date": 1497017819973
    },
    {
      "item": {
        "type": "factory",
        "id": "093f25c50dcb02fa"
      },
      "id": "093f25c50dcb02fa",
      "type": "add",
      "date": 1497017822463
    },
    {
      "type": "edit",
      "id": "093f25c50dcb02fa",
      "item": {
        "type": "paragraph",
        "id": "093f25c50dcb02fa",
        "text": "I'm thinking about a new plugin, Club, that would be a Roster that anyone can join. "
      },
      "date": 1497017845423
    },
    {
      "type": "add",
      "id": "31b9f51a2a380246",
      "item": {
        "type": "paragraph",
        "id": "31b9f51a2a380246",
        "text": "A Club works like a Roster until you fork the page that holds it. If the new home is not in the Club, the 'Join' button appears. Click-it and you are in. Simple, eh?\n"
      },
      "after": "093f25c50dcb02fa",
      "date": 1497017849689
    },
    {
      "type": "add",
      "id": "18cbb74dac1aff12",
      "item": {
        "type": "paragraph",
        "id": "18cbb74dac1aff12",
        "text": "Anyone could found a new Club. Make a page meant to be shared and then add a new Club to it. This makes you the founder. You have the special privilege and obligation of holding the membership list for everyone else. "
      },
      "after": "31b9f51a2a380246",
      "date": 1497017867823
    },
    {
      "type": "add",
      "id": "1b596c5fca554ab9",
      "item": {
        "type": "paragraph",
        "id": "1b596c5fca554ab9",
        "text": "New members would add their site to your roster when they click 'join'. We don't normally let others write on your wiki but you invite this by founding the club. A server admin would have to install the Club plugin before anyone could even make such invitations.\n"
      },
      "after": "18cbb74dac1aff12",
      "date": 1497017873562
    },
    {
      "type": "add",
      "id": "e2ae56a7251077a3",
      "item": {
        "type": "paragraph",
        "id": "e2ae56a7251077a3",
        "text": "What could go wrong?\n"
      },
      "after": "1b596c5fca554ab9",
      "date": 1497017877360
    },
    {
      "type": "add",
      "id": "f73a3f8f2bf00689",
      "item": {
        "type": "paragraph",
        "id": "f73a3f8f2bf00689",
        "text": "The founder could disappear with the Club roster. Poof, there is no club. But anyone who had been sharing would still be connected by their Collaborative Links. We've considered a more complicated workflow that includes sedition. I'm not sure how that would work. [http://forage.ward.fed.wiki.org/broadcast-workflow.html post]\n"
      },
      "after": "e2ae56a7251077a3",
      "date": 1497017903177
    },
    {
      "type": "add",
      "id": "e0eb2a751e703679",
      "item": {
        "type": "paragraph",
        "id": "e0eb2a751e703679",
        "text": "Some vandal could write a script to stuff the Club with fake members ruining it for everyone else. The founder could revert to a previous revision to clean this out and thus mitigate most of the damage. Perhaps the founder could open and close registrations or maybe add an enrollment-key to be spread through private channels. This ruins the openness but it is how cyberspace works today. The best defence might be to have lots of founders making lots of clubs, more than there are vandals."
      },
      "after": "f73a3f8f2bf00689",
      "date": 1497017911030
    },
    {
      "item": {
        "type": "factory",
        "id": "c90417f8abbe21a9"
      },
      "id": "c90417f8abbe21a9",
      "type": "add",
      "after": "e0eb2a751e703679",
      "date": 1497111084849
    },
    {
      "type": "edit",
      "id": "c90417f8abbe21a9",
      "item": {
        "type": "pagefold",
        "id": "c90417f8abbe21a9",
        "text": "discussion"
      },
      "date": 1497111093299
    },
    {
      "item": {
        "type": "factory",
        "id": "4167eca883f7cb8b"
      },
      "id": "4167eca883f7cb8b",
      "type": "add",
      "after": "c90417f8abbe21a9",
      "date": 1497111100106
    },
    {
      "type": "edit",
      "id": "4167eca883f7cb8b",
      "item": {
        "type": "paragraph",
        "id": "4167eca883f7cb8b",
        "text": "What could go wrong?\nWithout any defenses, potentially an awful lot could go wrong."
      },
      "date": 1497111119795
    },
    {
      "type": "add",
      "id": "e7799609e27e7b3f",
      "item": {
        "type": "paragraph",
        "id": "e7799609e27e7b3f",
        "text": "Require some or maybe all of rate limiting, blacklists, probing joining site to test if it really is a wiki, and some out of band confirmation."
      },
      "after": "4167eca883f7cb8b",
      "date": 1497111150569
    },
    {
      "type": "add",
      "id": "42a27bfd9eed7fc2",
      "item": {
        "type": "paragraph",
        "id": "42a27bfd9eed7fc2",
        "text": "I'm wondering if there is some clever little rule that tips behavior in favor of founders and members looking for ways to make a Club go right. "
      },
      "after": "e7799609e27e7b3f",
      "date": 1497111201529
    },
    {
      "type": "add",
      "id": "2d39691272372263",
      "item": {
        "type": "paragraph",
        "id": "2d39691272372263",
        "text": "This is just a way to share attention. If you join my Club then you will get some attention from me and my members. That's not promising a lot. "
      },
      "after": "42a27bfd9eed7fc2",
      "date": 1497111213423
    },
    {
      "type": "add",
      "id": "274b48129b935337",
      "item": {
        "type": "paragraph",
        "id": "274b48129b935337",
        "text": "An attack could be on the founder's site. If we capped the size of a club then then we have a circuit breaker for that. An attack on the member's attention is more subtle. This is the same as fake news on facebook. Maybe readers need a way to un-friend sites they find un-friendly. This could be an anti-neighborhood of sorts."
      },
      "after": "2d39691272372263",
      "date": 1497111229561
    },
    {
      "type": "add",
      "id": "2696673e94a16367",
      "item": {
        "type": "paragraph",
        "id": "2696673e94a16367",
        "text": "I'd like to make the rules such that I could have a New Author's Club added as the last todo in the Field Guide to the Federation.\nSee [http://hello.ward.bay.wiki.org/view/field-guide-to-the-federation/view/youre-new-here post]\nThis would be a likely attack surface for sure."
      },
      "after": "274b48129b935337",
      "date": 1497111292700
    },
    {
      "type": "edit",
      "id": "2696673e94a16367",
      "item": {
        "type": "paragraph",
        "id": "2696673e94a16367",
        "text": "I'd like to make the rules such that I could have a New Author's Club added as the last todo in the Field Guide to the Federation.\nSee [http://hello.ward.bay.wiki.org/view/field-guide-to-the-federation/view/youre-new-here wiki]\nThis would be a likely attack surface for sure."
      },
      "date": 1497111303047
    },
    {
      "type": "add",
      "id": "8d20aface2845535",
      "item": {
        "type": "paragraph",
        "id": "8d20aface2845535",
        "text": "I remember an comment from some time ago, about only getting spam if you invite it. This has potential to let the spammer, bad actor, invite themselves.\n"
      },
      "after": "2696673e94a16367",
      "date": 1497111387947
    },
    {
      "type": "add",
      "id": "4570f5b982ba181e",
      "item": {
        "type": "paragraph",
        "id": "4570f5b982ba181e",
        "text": "Yes, for sure.\n"
      },
      "after": "8d20aface2845535",
      "date": 1497111393895
    },
    {
      "type": "add",
      "id": "1e055164db929116",
      "item": {
        "type": "paragraph",
        "id": "1e055164db929116",
        "text": "Having a way of removing a site from the current neighborhood might be interesting. Though if that was something that could be forked it would be another potential attack."
      },
      "after": "4570f5b982ba181e",
      "date": 1497111420485
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "f73a3f8f2bf00689",
        "e0eb2a751e703679",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "2696673e94a16367",
        "1e055164db929116",
        "8d20aface2845535",
        "4570f5b982ba181e"
      ],
      "id": "1e055164db929116",
      "date": 1497111428192
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "f73a3f8f2bf00689",
        "e0eb2a751e703679",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e"
      ],
      "id": "1e055164db929116",
      "date": 1497111435119
    },
    {
      "type": "add",
      "id": "ef3b6559673f2694",
      "item": {
        "type": "paragraph",
        "id": "ef3b6559673f2694",
        "text": "My original wiki, the People, Projects, and Patterns wiki, had a People Index page that makes some interesting reading even today.\nSee [http://wiki.c2.com/?PeopleIndex wiki]\nOf course that was launched into a kinder and gentler internet."
      },
      "after": "4570f5b982ba181e",
      "date": 1497111491420
    },
    {
      "type": "add",
      "id": "0536b1957837b2be",
      "item": {
        "type": "paragraph",
        "id": "0536b1957837b2be",
        "text": "The Roster plugin formats in rows of 18, where that becomes the unit for adding new sites to your neighborhood. Rosters can also be divided into sections. Maybe the default behavior for the Club plugin is to separate the rows into confirmed and unconfirmed members with a possible cap on unconfirmed. The Club founder would promote members to confirmed status by what ever means might be appropriate. The founder is then moderating membership on behalf of other members and all other readers too.\n"
      },
      "after": "ef3b6559673f2694",
      "date": 1497111547350
    },
    {
      "type": "edit",
      "id": "0536b1957837b2be",
      "item": {
        "type": "paragraph",
        "id": "0536b1957837b2be",
        "text": "The Roster plugin formats in rows of 18, where that becomes the unit for adding new sites to your neighborhood. Rosters can also be divided into sections. "
      },
      "date": 1497111580288
    },
    {
      "type": "add",
      "id": "26514c5028ed74dc",
      "item": {
        "type": "paragraph",
        "id": "26514c5028ed74dc",
        "text": "Maybe the default behavior for the Club plugin is to separate the rows into confirmed and unconfirmed members with a possible cap on unconfirmed. The Club founder would promote members to confirmed status by what ever means might be appropriate. The founder is then moderating membership on behalf of other members and all other readers too.\n"
      },
      "after": "0536b1957837b2be",
      "date": 1497111590264
    },
    {
      "type": "edit",
      "id": "0536b1957837b2be",
      "item": {
        "type": "paragraph",
        "id": "0536b1957837b2be",
        "text": "The Roster plugin formats sites in rows of 18, where that becomes the unit for adding new sites to your neighborhood. Rosters can also be divided into sections. "
      },
      "date": 1497111612017
    },
    {
      "type": "add",
      "id": "33288e756641d8b8",
      "item": {
        "type": "paragraph",
        "id": "33288e756641d8b8",
        "text": "I wonder if rather than using a Club plugin this could be achieve with something that sites along side the wiki. A bit like invitation automation that exists around some slack rooms.\n"
      },
      "after": "26514c5028ed74dc",
      "date": 1497111692719
    },
    {
      "type": "add",
      "id": "9f608315293475a0",
      "item": {
        "type": "paragraph",
        "id": "9f608315293475a0",
        "text": "You give the invitation bot your email and fedwiki url - it then probably check that you really did initiate the invite, and them completes the process with a potential for a manual check.\nIn the farm context, if providing hosting for club members, this could include the provision of a wiki."
      },
      "after": "33288e756641d8b8",
      "date": 1497111728189
    },
    {
      "type": "add",
      "id": "715d6800fce99d6d",
      "item": {
        "type": "paragraph",
        "id": "715d6800fce99d6d",
        "text": "Do you know how folks setup Slack membership automation? Does Slack provide this mechanism?\n"
      },
      "after": "9f608315293475a0",
      "date": 1497111827249
    },
    {
      "type": "add",
      "id": "8d603daf5436f2ee",
      "item": {
        "type": "paragraph",
        "id": "8d603daf5436f2ee",
        "text": "Don't think slack provides this, been a long time since I looked - I am thinking of projects like https://github.com/rauchg/slackin\n"
      },
      "after": "715d6800fce99d6d",
      "date": 1497111834299
    },
    {
      "type": "add",
      "id": "927ff78583306b3d",
      "item": {
        "type": "paragraph",
        "id": "927ff78583306b3d",
        "text": "That's pretty neat. Have to host a server to run it though.\nI wonder if that could be hacked to front-end a wiki farm?\n"
      },
      "after": "8d603daf5436f2ee",
      "date": 1497111840911
    },
    {
      "type": "add",
      "id": "9dee2691b9bfebc4",
      "item": {
        "type": "paragraph",
        "id": "9dee2691b9bfebc4",
        "text": "That would be neat - if a user connects to a wiki that does not yet exist - they get a page that invites them to go though a self provisioning process - that creates a wiki site that comes already claimed for them.\nWould also counter the drive by wiki creation problem.\n\n"
      },
      "after": "927ff78583306b3d",
      "date": 1497111858964
    },
    {
      "type": "add",
      "id": "79b000555cc644cb",
      "item": {
        "type": "paragraph",
        "id": "79b000555cc644cb",
        "text": "Is slackin a node app? A fork might slide nicely into wiki-server."
      },
      "after": "9dee2691b9bfebc4",
      "date": 1497111884286
    },
    {
      "type": "add",
      "id": "60ecb2c9605cb4b9",
      "item": {
        "type": "paragraph",
        "id": "60ecb2c9605cb4b9",
        "text": "I hope to make an experimental version of Club plugin today. Site admins can then enable it with Plugmatic. I will consider some form of Moderation, some natural limit on size, and maybe blacklists specified as Rosters. This might be interesting: you can join my club unless you are a member of his club.\n"
      },
      "after": "79b000555cc644cb",
      "date": 1497111933319
    },
    {
      "type": "add",
      "id": "5d9fb40a18d61d19",
      "item": {
        "type": "paragraph",
        "id": "5d9fb40a18d61d19",
        "text": "A community could federate management of the blacklist if they are annoyed by compulsive joiners.\nPete Forsyth and I are meeting in person today. He is an expert in these issues on Wikipedia. I'm glad we had a chance to think through problem areas this morning."
      },
      "after": "60ecb2c9605cb4b9",
      "date": 1497111946054
    },
    {
      "type": "edit",
      "id": "5d9fb40a18d61d19",
      "item": {
        "type": "paragraph",
        "id": "5d9fb40a18d61d19",
        "text": "A community could federate management of the blacklist if they are annoyed by compulsive joiners.\n"
      },
      "date": 1497119296897
    },
    {
      "type": "add",
      "id": "812b0152d637795e",
      "item": {
        "type": "paragraph",
        "id": "812b0152d637795e",
        "text": "Pete Forsyth and I are meeting in person today. He is an expert in these issues on Wikipedia. I'm glad we had a chance to think through problem areas this morning."
      },
      "after": "5d9fb40a18d61d19",
      "date": 1497119300244
    },
    {
      "type": "edit",
      "id": "5d9fb40a18d61d19",
      "item": {
        "type": "paragraph",
        "id": "5d9fb40a18d61d19",
        "text": "A community could federate management of the blacklist if they are annoyed by compulsive joiners."
      },
      "date": 1497119305549
    },
    {
      "type": "add",
      "id": "8663b6c0948f9376",
      "item": {
        "type": "paragraph",
        "id": "8663b6c0948f9376",
        "text": "It will be interesting to see how this works out. I think any blacklist itself needs to be moderated before the club owner finds themselves blacklisted."
      },
      "after": "5d9fb40a18d61d19",
      "date": 1497119347308
    },
    {
      "type": "add",
      "id": "28c0e87766cfbb45",
      "item": {
        "type": "paragraph",
        "id": "28c0e87766cfbb45",
        "text": "One implementation detail, how does the client-side of the Club plugin know if the reader who is trying to join is joining from an origin that they own and have logged in?\nE\nMy original suggestion was that you would fork the page to even see the join button. But random readers of that forked page shouldn't be the ones that are joining."
      },
      "after": "812b0152d637795e",
      "date": 1497119409960
    },
    {
      "type": "add",
      "id": "04f70c5d9ef4287f",
      "item": {
        "type": "paragraph",
        "id": "04f70c5d9ef4287f",
        "text": "Could be tricky - but as club plugin would have to be installed for it to work the check could use a secure url on that is served by the server part of the plugin. So that checks that you are the site owner.\nSo the client part of the plugin would need to recognise when it's on a forked copy of the page - site origin not the same as the home of the club?\n"
      },
      "after": "28c0e87766cfbb45",
      "date": 1497119456298
    },
    {
      "type": "add",
      "id": "d0a5d57ff1346050",
      "item": {
        "type": "paragraph",
        "id": "d0a5d57ff1346050",
        "text": "That is probably not enough to prevent the join being spoofed - might want to have the join request save some random identifier in the plugin on the referring page. The club plugin on the club home site could then try accessing that page directly to check that the expect identifier has been set. A bit like some of the checks for site ownership that some of the Google tools use.\n"
      },
      "after": "04f70c5d9ef4287f",
      "date": 1497119461771
    },
    {
      "type": "add",
      "id": "a84f3ef81b357959",
      "item": {
        "type": "paragraph",
        "id": "a84f3ef81b357959",
        "text": "Maybe it doesn't use something stored on the page, but rather held with the server part of the plugin.\n"
      },
      "after": "d0a5d57ff1346050",
      "date": 1497119467348
    },
    {
      "type": "add",
      "id": "1e89a7a09a8bc090",
      "item": {
        "type": "paragraph",
        "id": "1e89a7a09a8bc090",
        "text": "If there is a need to differentiate different club joining request there should be two values used, one as a key to get to the other the identifier."
      },
      "after": "a84f3ef81b357959",
      "date": 1497119477269
    },
    {
      "item": {
        "type": "factory",
        "id": "c7b1c667548f53b5"
      },
      "id": "c7b1c667548f53b5",
      "type": "add",
      "after": "1e89a7a09a8bc090",
      "date": 1497119483445
    },
    {
      "type": "edit",
      "id": "c7b1c667548f53b5",
      "item": {
        "type": "pagefold",
        "id": "c7b1c667548f53b5",
        "text": "authorization"
      },
      "date": 1497119504771
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "f73a3f8f2bf00689",
        "e0eb2a751e703679",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "812b0152d637795e",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "c7b1c667548f53b5",
      "date": 1497119512799
    },
    {
      "type": "remove",
      "id": "812b0152d637795e",
      "date": 1497119528737
    },
    {
      "item": {
        "type": "factory",
        "id": "3ed6eb0215139c06"
      },
      "id": "3ed6eb0215139c06",
      "type": "add",
      "after": "1e89a7a09a8bc090",
      "date": 1497119552979
    },
    {
      "type": "edit",
      "id": "3ed6eb0215139c06",
      "item": {
        "type": "pagefold",
        "id": "3ed6eb0215139c06",
        "text": "blacklist"
      },
      "date": 1497119563425
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "f73a3f8f2bf00689",
        "e0eb2a751e703679",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "3ed6eb0215139c06",
      "date": 1497119580882
    },
    {
      "item": {
        "type": "factory",
        "id": "5198b203583cde72"
      },
      "id": "5198b203583cde72",
      "type": "add",
      "after": "1e89a7a09a8bc090",
      "date": 1497119597505
    },
    {
      "type": "edit",
      "id": "5198b203583cde72",
      "item": {
        "type": "pagefold",
        "id": "5198b203583cde72",
        "text": "registration"
      },
      "date": 1497119608406
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "f73a3f8f2bf00689",
        "e0eb2a751e703679",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "5198b203583cde72",
      "date": 1497119625421
    },
    {
      "item": {
        "type": "factory",
        "id": "b4cd50b3b13fdb97"
      },
      "id": "b4cd50b3b13fdb97",
      "type": "add",
      "after": "1e89a7a09a8bc090",
      "date": 1497119678294
    },
    {
      "type": "edit",
      "id": "b4cd50b3b13fdb97",
      "item": {
        "type": "pagefold",
        "id": "b4cd50b3b13fdb97",
        "text": "attention"
      },
      "date": 1497119687756
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "f73a3f8f2bf00689",
        "e0eb2a751e703679",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "b4cd50b3b13fdb97",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "b4cd50b3b13fdb97",
      "date": 1497119723704
    },
    {
      "type": "edit",
      "id": "093f25c50dcb02fa",
      "item": {
        "type": "paragraph",
        "id": "093f25c50dcb02fa",
        "text": "I'm thinking about a new plugin, Club, that would be a Roster that anyone can join. [https://riot.im/app/#/room/#fedwiki:matrix.org/$1497016284842413CFLsy:matrix.org matrix]"
      },
      "date": 1497120037755
    },
    {
      "type": "edit",
      "id": "c90417f8abbe21a9",
      "item": {
        "type": "pagefold",
        "id": "c90417f8abbe21a9",
        "text": "vandalism"
      },
      "date": 1497120188005
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "c90417f8abbe21a9",
        "f73a3f8f2bf00689",
        "e0eb2a751e703679",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "b4cd50b3b13fdb97",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "c90417f8abbe21a9",
      "date": 1497120195331
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "e0eb2a751e703679",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "b4cd50b3b13fdb97",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "c90417f8abbe21a9",
      "date": 1497120213632
    },
    {
      "item": {
        "type": "factory",
        "id": "35b2cce5f9a01101"
      },
      "id": "35b2cce5f9a01101",
      "type": "add",
      "after": "1e89a7a09a8bc090",
      "date": 1497120331667
    },
    {
      "type": "edit",
      "id": "35b2cce5f9a01101",
      "item": {
        "type": "pagefold",
        "id": "35b2cce5f9a01101",
        "text": "abandonment"
      },
      "date": 1497120345426
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "e0eb2a751e703679",
        "4167eca883f7cb8b",
        "e7799609e27e7b3f",
        "b4cd50b3b13fdb97",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "35b2cce5f9a01101",
      "date": 1497120355649
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e0eb2a751e703679",
        "e7799609e27e7b3f",
        "b4cd50b3b13fdb97",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "274b48129b935337",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "4167eca883f7cb8b",
      "date": 1497120378211
    },
    {
      "type": "edit",
      "id": "274b48129b935337",
      "item": {
        "type": "paragraph",
        "id": "274b48129b935337",
        "text": "An attack could be on the founder's site. If we capped the size of a club then then we have a circuit breaker for that."
      },
      "date": 1497120412526
    },
    {
      "type": "add",
      "id": "bbc3037d06372318",
      "item": {
        "type": "paragraph",
        "id": "bbc3037d06372318",
        "text": " An attack on the member's attention is more subtle. This is the same as fake news on facebook. Maybe readers need a way to un-friend sites they find un-friendly. This could be an anti-neighborhood of sorts."
      },
      "after": "274b48129b935337",
      "date": 1497120413933
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e0eb2a751e703679",
        "e7799609e27e7b3f",
        "274b48129b935337",
        "b4cd50b3b13fdb97",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "bbc3037d06372318",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "274b48129b935337",
      "date": 1497120437231
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e0eb2a751e703679",
        "e7799609e27e7b3f",
        "274b48129b935337",
        "b4cd50b3b13fdb97",
        "bbc3037d06372318",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "4570f5b982ba181e",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "bbc3037d06372318",
      "date": 1497120460015
    },
    {
      "type": "remove",
      "id": "4570f5b982ba181e",
      "date": 1497120502658
    },
    {
      "item": {
        "type": "factory",
        "id": "052f6cc0cae95dc8"
      },
      "id": "052f6cc0cae95dc8",
      "type": "add",
      "after": "1e89a7a09a8bc090",
      "date": 1497120631634
    },
    {
      "type": "edit",
      "id": "052f6cc0cae95dc8",
      "item": {
        "type": "pagefold",
        "id": "052f6cc0cae95dc8",
        "text": "transparency"
      },
      "date": 1497120640606
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e0eb2a751e703679",
        "e7799609e27e7b3f",
        "274b48129b935337",
        "b4cd50b3b13fdb97",
        "bbc3037d06372318",
        "42a27bfd9eed7fc2",
        "2d39691272372263",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "052f6cc0cae95dc8",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "052f6cc0cae95dc8",
      "date": 1497120649745
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e0eb2a751e703679",
        "e7799609e27e7b3f",
        "274b48129b935337",
        "b4cd50b3b13fdb97",
        "bbc3037d06372318",
        "2d39691272372263",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "052f6cc0cae95dc8",
        "42a27bfd9eed7fc2",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "9dee2691b9bfebc4",
        "79b000555cc644cb",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "42a27bfd9eed7fc2",
      "date": 1497120684120
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e0eb2a751e703679",
        "e7799609e27e7b3f",
        "274b48129b935337",
        "b4cd50b3b13fdb97",
        "bbc3037d06372318",
        "2d39691272372263",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "052f6cc0cae95dc8",
        "42a27bfd9eed7fc2",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "79b000555cc644cb",
        "9dee2691b9bfebc4",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "79b000555cc644cb",
      "date": 1497120716064
    },
    {
      "item": {
        "type": "factory",
        "id": "da5cdcb398c467ce"
      },
      "id": "da5cdcb398c467ce",
      "type": "add",
      "after": "1e89a7a09a8bc090",
      "date": 1497132354438
    },
    {
      "type": "edit",
      "id": "da5cdcb398c467ce",
      "item": {
        "type": "pagefold",
        "id": "da5cdcb398c467ce",
        "text": "spoofing"
      },
      "date": 1497132365981
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e0eb2a751e703679",
        "e7799609e27e7b3f",
        "274b48129b935337",
        "b4cd50b3b13fdb97",
        "bbc3037d06372318",
        "2d39691272372263",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "052f6cc0cae95dc8",
        "42a27bfd9eed7fc2",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "79b000555cc644cb",
        "9dee2691b9bfebc4",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "da5cdcb398c467ce",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090"
      ],
      "id": "da5cdcb398c467ce",
      "date": 1497132369739
    },
    {
      "item": {
        "type": "factory",
        "id": "8f3948f9f70e53e8"
      },
      "id": "8f3948f9f70e53e8",
      "type": "add",
      "after": "1e89a7a09a8bc090",
      "date": 1498400828845
    },
    {
      "type": "edit",
      "id": "8f3948f9f70e53e8",
      "item": {
        "type": "pagefold",
        "id": "8f3948f9f70e53e8",
        "text": "implementation"
      },
      "date": 1498400837042
    },
    {
      "item": {
        "type": "factory",
        "id": "b243ffc1e59557e5"
      },
      "id": "b243ffc1e59557e5",
      "type": "add",
      "after": "8f3948f9f70e53e8",
      "date": 1498400848218
    },
    {
      "type": "edit",
      "id": "b243ffc1e59557e5",
      "item": {
        "type": "paragraph",
        "id": "b243ffc1e59557e5",
        "text": "Save site and slug of founding location."
      },
      "date": 1498400972531
    },
    {
      "type": "edit",
      "id": "b243ffc1e59557e5",
      "item": {
        "type": "paragraph",
        "id": "b243ffc1e59557e5",
        "text": "Save site and slug as club venue."
      },
      "date": 1498401044773
    },
    {
      "type": "add",
      "id": "615056699ec5f981",
      "item": {
        "type": "paragraph",
        "id": "615056699ec5f981",
        "text": "Render for founder as if Roster."
      },
      "after": "b243ffc1e59557e5",
      "date": 1498401190495
    },
    {
      "type": "add",
      "id": "97c0ac017db560bf",
      "item": {
        "type": "paragraph",
        "id": "97c0ac017db560bf",
        "text": "Render for others as if Transcluded Roster."
      },
      "after": "615056699ec5f981",
      "date": 1498401207232
    },
    {
      "type": "add",
      "id": "3da001f31628c502",
      "item": {
        "type": "paragraph",
        "id": "3da001f31628c502",
        "text": "Offer Join button if site is origin but not venue."
      },
      "after": "97c0ac017db560bf",
      "date": 1498401370316
    },
    {
      "type": "edit",
      "id": "3da001f31628c502",
      "item": {
        "type": "paragraph",
        "id": "3da001f31628c502",
        "text": "Offer Join button if forked for non-member."
      },
      "date": 1498401416156
    },
    {
      "type": "add",
      "id": "90f97a17d31f782e",
      "item": {
        "type": "paragraph",
        "id": "90f97a17d31f782e",
        "text": "Check origin, login, blacklist."
      },
      "after": "3da001f31628c502",
      "date": 1498401488474
    },
    {
      "type": "add",
      "id": "230576a63d4092c1",
      "item": {
        "type": "paragraph",
        "id": "230576a63d4092c1",
        "text": "Server-side resolves joins vs. blacklist."
      },
      "after": "90f97a17d31f782e",
      "date": 1498401670955
    },
    {
      "type": "edit",
      "id": "615056699ec5f981",
      "item": {
        "type": "paragraph",
        "id": "615056699ec5f981",
        "text": "Render for founder from text & members as if Roster."
      },
      "date": 1498401709818
    },
    {
      "type": "add",
      "id": "c6918fb06e09b88f",
      "item": {
        "type": "paragraph",
        "id": "c6918fb06e09b88f",
        "text": "Examine Journal to resolve new from expelled memebers."
      },
      "after": "230576a63d4092c1",
      "date": 1498401803487
    },
    {
      "type": "edit",
      "id": "c6918fb06e09b88f",
      "item": {
        "type": "paragraph",
        "id": "c6918fb06e09b88f",
        "text": "Examine Journal to resolve new from expelled members."
      },
      "date": 1498403446088
    },
    {
      "type": "add",
      "id": "95ad6e833cf3128c",
      "item": {
        "type": "paragraph",
        "id": "95ad6e833cf3128c",
        "text": "All logic concentrated in Render and Join."
      },
      "after": "c6918fb06e09b88f",
      "date": 1498403542776
    },
    {
      "type": "move",
      "order": [
        "093f25c50dcb02fa",
        "31b9f51a2a380246",
        "18cbb74dac1aff12",
        "1b596c5fca554ab9",
        "e2ae56a7251077a3",
        "35b2cce5f9a01101",
        "f73a3f8f2bf00689",
        "c90417f8abbe21a9",
        "4167eca883f7cb8b",
        "e0eb2a751e703679",
        "e7799609e27e7b3f",
        "274b48129b935337",
        "b4cd50b3b13fdb97",
        "bbc3037d06372318",
        "2d39691272372263",
        "1e055164db929116",
        "2696673e94a16367",
        "8d20aface2845535",
        "052f6cc0cae95dc8",
        "42a27bfd9eed7fc2",
        "ef3b6559673f2694",
        "0536b1957837b2be",
        "26514c5028ed74dc",
        "5198b203583cde72",
        "33288e756641d8b8",
        "9f608315293475a0",
        "715d6800fce99d6d",
        "8d603daf5436f2ee",
        "927ff78583306b3d",
        "79b000555cc644cb",
        "9dee2691b9bfebc4",
        "3ed6eb0215139c06",
        "60ecb2c9605cb4b9",
        "5d9fb40a18d61d19",
        "8663b6c0948f9376",
        "c7b1c667548f53b5",
        "28c0e87766cfbb45",
        "04f70c5d9ef4287f",
        "da5cdcb398c467ce",
        "d0a5d57ff1346050",
        "a84f3ef81b357959",
        "1e89a7a09a8bc090",
        "8f3948f9f70e53e8",
        "95ad6e833cf3128c",
        "b243ffc1e59557e5",
        "615056699ec5f981",
        "97c0ac017db560bf",
        "3da001f31628c502",
        "90f97a17d31f782e",
        "230576a63d4092c1",
        "c6918fb06e09b88f"
      ],
      "id": "95ad6e833cf3128c",
      "date": 1498403551602
    },
    {
      "type": "add",
      "id": "337caaceb37918e5",
      "item": {
        "type": "paragraph",
        "id": "337caaceb37918e5",
        "text": "Fork from history should work."
      },
      "after": "c6918fb06e09b88f",
      "date": 1498403686996
    },
    {
      "type": "edit",
      "id": "337caaceb37918e5",
      "item": {
        "type": "paragraph",
        "id": "337caaceb37918e5",
        "text": "Fork from history should reverse recent decisions."
      },
      "date": 1498403704345
    },
    {
      "type": "add",
      "id": "120a497d6b8e6220",
      "item": {
        "type": "paragraph",
        "id": "120a497d6b8e6220",
        "text": "Loose Club properties when dragged to new page."
      },
      "after": "337caaceb37918e5",
      "date": 1498403776067
    },
    {
      "type": "add",
      "id": "5342750308497534",
      "item": {
        "type": "paragraph",
        "id": "5342750308497534",
        "text": "Similar to webmention."
      },
      "after": "274b48129b935337",
      "date": 1498412461818
    },
    {
      "type": "edit",
      "id": "5342750308497534",
      "item": {
        "type": "paragraph",
        "id": "5342750308497534",
        "text": "Similar to webmention, vouch, etc."
      },
      "date": 1498412645549
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1502995907517
    },
    {
      "type": "edit",
      "id": "f73a3f8f2bf00689",
      "item": {
        "type": "paragraph",
        "id": "f73a3f8f2bf00689",
        "text": "The founder could disappear with the Club roster. Poof, there is no club. But anyone who had been sharing would still be connected by their Collaborative Links. We've considered a more complicated workflow that includes sedition. I'm not sure how that would work. [http://forage.ward.fed.wiki.org/broadcast-workflow.html post]"
      },
      "date": 1502995919213
    },
    {
      "type": "add",
      "id": "29c89276b5de85b9",
      "item": {
        "type": "paragraph",
        "id": "29c89276b5de85b9",
        "text": "DB: this I can live with."
      },
      "after": "f73a3f8f2bf00689",
      "date": 1502995930594
    },
    {
      "type": "add",
      "id": "ec219047c0e754ba",
      "item": {
        "type": "paragraph",
        "id": "ec219047c0e754ba",
        "text": "DB: the usual ghost and fork mechanism could solve this. New members are not automatically included on the roster until the admin interacts with it - previewing a ghost page, and then forking it to accept."
      },
      "after": "e0eb2a751e703679",
      "date": 1502996053593
    },
    {
      "type": "edit",
      "id": "04f70c5d9ef4287f",
      "item": {
        "type": "paragraph",
        "id": "04f70c5d9ef4287f",
        "text": "Could be tricky - but as club plugin would have to be installed for it to work the check could use a secure url on that is served by the server part of the plugin. So that checks that you are the site owner.\nSo the client part of the plugin would need to recognise when it's on a forked copy of the page - site origin not the same as the home of the club?"
      },
      "date": 1502996100483
    },
    {
      "type": "add",
      "id": "ec8ad4a62be12f06",
      "item": {
        "type": "paragraph",
        "id": "ec8ad4a62be12f06",
        "text": "DB: I'm wanderign if we can generalise this. The [[Transport]] mechanism needs authorisation - so sending oAuth headers with the Transport and some server side config can do this. "
      },
      "after": "04f70c5d9ef4287f",
      "date": 1502996193981
    },
    {
      "type": "add",
      "id": "c4880878cb81b429",
      "item": {
        "type": "paragraph",
        "id": "c4880878cb81b429",
        "text": "DB: also we have the JSON plugin that accepts posts for new data. The roster could be modified to accept json plugin data, and this combined with oAuth restful interface for accepting posts - transports and json plugin would open up a range of possibilites."
      },
      "after": "ec8ad4a62be12f06",
      "date": 1502996304128
    }
  ]
}