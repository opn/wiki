{
  "title": "Authoring Tools",
  "story": [
    {
      "type": "paragraph",
      "id": "46a41e3425e3724f",
      "text": "We are defining an authoring tool for wiki as something distinct to a [[refactoring tool]]. An authoring tool either brings new information into wiki, creates new wiki-page content rendered by other plugins ([[refactoring tools]])."
    },
    {
      "type": "paragraph",
      "id": "ce14b79c982d7d4f",
      "text": "In this way authoring tools are also different from [[configuration tools]], as they do not change the appearance or function of wiki - they simply serve to provide means to import of export content into wiki. It should be \"safe\" to discard the tools, and refactoring within wiki will still continue to work."
    },
    {
      "type": "paragraph",
      "id": "57a0756c3cac599f",
      "text": "Considering the act of [[authoring]] in wiki as it's own domain, leads to a better comprehension of use, and allows us to integrate developers more closely with the wider writing community on an equitable and no-hierarchical basis."
    },
    {
      "type": "markdown",
      "id": "72ae4a155887c5c8",
      "text": "# Loose coupling\n"
    },
    {
      "type": "markdown",
      "id": "7c991bc4b1557823",
      "text": "Authoring tools are naturally decoupled from wiki. Once information has been brought into wiki, it is self contained and ready to be refactored within wiki without reference to the external source material. \n"
    },
    {
      "type": "markdown",
      "id": "48e801a828bc3ac6",
      "text": "Marking the provenance of the import, is sufficient to give appropriate citation, and to provide a link back to the orginal material. \n"
    },
    {
      "type": "markdown",
      "id": "2d194d40e6370d90",
      "text": "Software tools can take advantage of the information in these [[Citation Links]] to help augment or even automate keeping the imported content into wiki up-to-date. See [[Medaiwiki Transport]] and [[Citation Bar]] for an example.\n"
    },
    {
      "type": "markdown",
      "id": "1f4c555383e0b2a2",
      "text": "Exporting content from wiki, to a static HTML5 site, or to [[HackMD]] markdown, is similarly decoupled. Tools may help augment the refactoring of exported content based on updated wiki content via continuous deployment, but nothing breaks should the link between the exported content and wiki be severed."
    },
    {
      "type": "markdown",
      "id": "db9593d089b7575a",
      "text": "# Snapshots\n"
    },
    {
      "type": "markdown",
      "id": "7554e3319b9d6b4b",
      "text": "Imported content is considered to be a static snapshot of external content. Exports are similarly an exported snapshot of the more dynamic wiki content.\n"
    },
    {
      "type": "markdown",
      "id": "cd02607754d00c25",
      "text": "Snapshots may be timestamped, and signed by authors or transporters marking their provenance.\n"
    },
    {
      "type": "markdown",
      "id": "05c924420db4adf9",
      "text": "Editing imported content should provide the option to re-access the tools that originally imported a snapshot when the external content has changed.\n\n"
    },
    {
      "type": "markdown",
      "id": "edea6f3f5a3019c8",
      "text": "Double-clicking on items that originated via an import allows independent refactoring of content within the wiki.\n"
    },
    {
      "type": "markdown",
      "id": "61524a94336827fc",
      "text": "It is not clear whether access to the import tools should be provided at the item level or the page level. Current [[Mediawiki Transport]] implementation stored json in the [[Create Action]] of the wiki page, enabling meaningful access to the import tool-chain at page access level. Forked paragraph items do not preserve this behaviour. This continues to seem appropriate."
    },
    {
      "type": "markdown",
      "id": "1e2df0570fa38ff2",
      "text": "# Microservices\n"
    },
    {
      "type": "markdown",
      "id": "6b7039e909852fd3",
      "text": "Microservices are the defacto loosely coupled architecture for federation json. We seek to give them independent status within the federation with a particular role as [[authoring tools]].\n"
    },
    {
      "type": "markdown",
      "id": "020fb0f8f1821473",
      "text": "[[Transporters]] are [[microservices]] designed most commonly to support [[Drag-and-drop import]] of external content into wiki.\n"
    },
    {
      "type": "markdown",
      "id": "f1365d2acba537a2",
      "text": "We seek to extend the range and domain of transporters to the general class of microservices that work with federated wiki json. As described here these export and import oriented microservices are [[authoring tools]]."
    },
    {
      "type": "markdown",
      "id": "83aee70807acf387",
      "text": "# Integrating the developer experience"
    },
    {
      "type": "markdown",
      "id": "3c5427d4819b96c5",
      "text": "Developers creating microservices outside of the wiki-client should not be considered as separate citizens. Wiki can serve as their basis for documentation, and presenting their work, and be firmly integrated into the [[Developer experience]].\n"
    },
    {
      "type": "markdown",
      "id": "c9d587b058bb7f09",
      "text": "Similarly authors need to be able to find suitable [[authoring tools]] to support their work, understand their function, and add them to their writing environment should they find them useful.\n"
    },
    {
      "type": "markdown",
      "id": "524f3656724baec4",
      "text": "The current Transporter mechanism allows them to take a first step doing this by specifying the REST url of the microservice in a plugin. This mistakes the domain of action of the plugin - indicating that the functionality is only available to the plugin on a particular page.\n"
    },
    {
      "type": "markdown",
      "id": "6b4e8f4e79b91ff2",
      "text": "# Halo of integration\n\n"
    },
    {
      "type": "markdown",
      "id": "0c711d8687bae196",
      "text": "[[Authoring Tools]] should be marked and organised as such. There should be a place to find them, and a way of identifying them as a separate class of tools that add loosely coupled import and export functionality to an entire site.\n"
    },
    {
      "type": "markdown",
      "id": "b7d79542ffc5b274",
      "text": "We propose using a distinctive halo colour for pages containing [[authoring tools]], and a means to navigate, access and install thee tools on a site using the conventional means available to wiki."
    },
    {
      "type": "markdown",
      "id": "018cf2dc1445c40e",
      "text": "# Proposal\n"
    },
    {
      "type": "markdown",
      "id": "33122aded8b827c8",
      "text": "We propose being able to navigate from the [[welcome-visitors]] (home) page of any site to a [[Tool Dialogue Page]] from where the author can navigate within a distinct [[Wiki Dimension]]. \n"
    },
    {
      "type": "markdown",
      "id": "2048e801878d0f99",
      "text": "Installing an new import function would be as simple as forking a page to this new [[Tool Folder]], [[Authoring Tool Folder]], or [[Configuration Tool Folder]]. Simplicity would indicate having a single [[Tool Folder]] for all classes of tool described here. \n"
    },
    {
      "type": "markdown",
      "id": "1017b41966e36e15",
      "text": "The experience of writing this specification, and considering the implications makes me think that we are better served by creating separate folders representing distinct dimensions of functionality that already require different types of tooling, and may well need differing access permissions."
    },
    {
      "type": "markdown",
      "id": "9c521565319ed5b7",
      "text": "# A place to start\n"
    },
    {
      "type": "markdown",
      "id": "15aca8753c7fddfb",
      "text": "I propose a simple starting place that has implication for the wiki-client, and extends the architecture of the server. The former is good, the latter bad.\n"
    },
    {
      "type": "markdown",
      "id": "78890cd2cbf4b265",
      "text": "- [[Redefining Flag Clicks]]\n- Adding a [[Authoring Tools Folder]] to the server\n- Implementing a [[Universal Drag-and-Drop]]\n- Creating a [[Welcome Authors]] page\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Authoring Tools",
        "story": []
      },
      "date": 1523985390948
    },
    {
      "item": {
        "type": "factory",
        "id": "46a41e3425e3724f"
      },
      "id": "46a41e3425e3724f",
      "type": "add",
      "date": 1523985394913
    },
    {
      "type": "edit",
      "id": "46a41e3425e3724f",
      "item": {
        "type": "paragraph",
        "id": "46a41e3425e3724f",
        "text": "We are defining an authoring tool for wiki as something distinct to a [[refactoring tool]]. An authoring tool either brings new information into wiki, creates new wiki-page content rendered by other plugins ([[refactoring tools]])."
      },
      "date": 1523985571387
    },
    {
      "item": {
        "type": "factory",
        "id": "ce14b79c982d7d4f"
      },
      "id": "ce14b79c982d7d4f",
      "type": "add",
      "after": "46a41e3425e3724f",
      "date": 1524045546252
    },
    {
      "type": "edit",
      "id": "ce14b79c982d7d4f",
      "item": {
        "type": "paragraph",
        "id": "ce14b79c982d7d4f",
        "text": "In this way authoring tools are also different from [[configuration tools]], as they do not change the appearance or function of wiki - they simply serve to provide means to import of export content into wiki. It should be \"safe\" to discard the tools, and refactoring within wiki will still continue to work."
      },
      "date": 1524045680221
    },
    {
      "type": "add",
      "id": "72ae4a155887c5c8",
      "item": {
        "type": "paragraph",
        "id": "72ae4a155887c5c8",
        "text": "# Loose coupling"
      },
      "after": "ce14b79c982d7d4f",
      "date": 1524045694553
    },
    {
      "type": "add",
      "id": "db9593d089b7575a",
      "item": {
        "type": "paragraph",
        "id": "db9593d089b7575a",
        "text": "# Snapshots"
      },
      "after": "72ae4a155887c5c8",
      "date": 1524045699544
    },
    {
      "type": "add",
      "id": "1e2df0570fa38ff2",
      "item": {
        "type": "paragraph",
        "id": "1e2df0570fa38ff2",
        "text": "# Microservices"
      },
      "after": "db9593d089b7575a",
      "date": 1524045736418
    },
    {
      "type": "add",
      "id": "83aee70807acf387",
      "item": {
        "type": "paragraph",
        "id": "83aee70807acf387",
        "text": "# halo of integration"
      },
      "after": "1e2df0570fa38ff2",
      "date": 1524045773700
    },
    {
      "type": "add",
      "id": "018cf2dc1445c40e",
      "item": {
        "type": "paragraph",
        "id": "018cf2dc1445c40e",
        "text": "# Proposal"
      },
      "after": "83aee70807acf387",
      "date": 1524045775701
    },
    {
      "type": "edit",
      "id": "83aee70807acf387",
      "item": {
        "type": "paragraph",
        "id": "83aee70807acf387",
        "text": "# Halo of integration"
      },
      "date": 1524045779092
    },
    {
      "type": "edit",
      "id": "72ae4a155887c5c8",
      "item": {
        "type": "markdown",
        "id": "72ae4a155887c5c8",
        "text": "# Loose coupling"
      },
      "date": 1524045798478
    },
    {
      "type": "edit",
      "id": "db9593d089b7575a",
      "item": {
        "type": "markdown",
        "id": "db9593d089b7575a",
        "text": "# Snapshots"
      },
      "date": 1524045799476
    },
    {
      "type": "edit",
      "id": "1e2df0570fa38ff2",
      "item": {
        "type": "markdown",
        "id": "1e2df0570fa38ff2",
        "text": "# Microservices"
      },
      "date": 1524045800494
    },
    {
      "type": "edit",
      "id": "83aee70807acf387",
      "item": {
        "type": "markdown",
        "id": "83aee70807acf387",
        "text": "# Halo of integration"
      },
      "date": 1524045801529
    },
    {
      "type": "edit",
      "id": "018cf2dc1445c40e",
      "item": {
        "type": "markdown",
        "id": "018cf2dc1445c40e",
        "text": "# Proposal"
      },
      "date": 1524045802798
    },
    {
      "type": "edit",
      "id": "72ae4a155887c5c8",
      "item": {
        "type": "markdown",
        "id": "72ae4a155887c5c8",
        "text": "# Loose coupling\n"
      },
      "date": 1524051431140
    },
    {
      "type": "add",
      "id": "7c991bc4b1557823",
      "item": {
        "type": "markdown",
        "id": "7c991bc4b1557823",
        "text": "Authoring tools are naturally decoupled from wiki. Once information has been brought into wiki, it is self contained and ready to be refactored within wiki without reference to the external source material. \n"
      },
      "after": "72ae4a155887c5c8",
      "date": 1524051522458
    },
    {
      "type": "add",
      "id": "48e801a828bc3ac6",
      "item": {
        "type": "markdown",
        "id": "48e801a828bc3ac6",
        "text": "Marking the provenance of the import, is sufficient to give appropriate citation, and to provide a link back to the orginal material. \n"
      },
      "after": "7c991bc4b1557823",
      "date": 1524051560366
    },
    {
      "type": "add",
      "id": "2d194d40e6370d90",
      "item": {
        "type": "markdown",
        "id": "2d194d40e6370d90",
        "text": "Software tools can take advantage of the information in these [[Citation Links]] to help augment or even automate keeping the imported content into wiki up-to-date. See [[Medaiwiki Transport]] and [[Citation Bar]] for an example.\n"
      },
      "after": "48e801a828bc3ac6",
      "date": 1524051658330
    },
    {
      "type": "add",
      "id": "1f4c555383e0b2a2",
      "item": {
        "type": "markdown",
        "id": "1f4c555383e0b2a2",
        "text": "Exporting content from wiki, to a static HTML5 site, or to [[HackMD]] markdown, is similarly decoupled. Tools may help augment the refactoring of exported content based on updated wiki content via continuous deployment, but nothing breaks should the link between the exported content and wiki be severed."
      },
      "after": "2d194d40e6370d90",
      "date": 1524051766147
    },
    {
      "type": "edit",
      "id": "db9593d089b7575a",
      "item": {
        "type": "markdown",
        "id": "db9593d089b7575a",
        "text": "# Snapshots\n"
      },
      "date": 1524051777820
    },
    {
      "type": "add",
      "id": "7554e3319b9d6b4b",
      "item": {
        "type": "markdown",
        "id": "7554e3319b9d6b4b",
        "text": "Imported content is considered to be a static snapshot of external content. Exports are similarly an exported snapshot of the more dynamic wiki content.\n"
      },
      "after": "db9593d089b7575a",
      "date": 1524051824278
    },
    {
      "type": "add",
      "id": "cd02607754d00c25",
      "item": {
        "type": "markdown",
        "id": "cd02607754d00c25",
        "text": "Snapshots may be timestamped, and signed by authors or transporters marking their provenance.\n"
      },
      "after": "7554e3319b9d6b4b",
      "date": 1524051861127
    },
    {
      "type": "add",
      "id": "05c924420db4adf9",
      "item": {
        "type": "markdown",
        "id": "05c924420db4adf9",
        "text": "Editing imported content should provide the option to re-access the tools that originally imported a snapshot when the external content has changed.\n\n"
      },
      "after": "cd02607754d00c25",
      "date": 1524051959165
    },
    {
      "type": "add",
      "id": "edea6f3f5a3019c8",
      "item": {
        "type": "markdown",
        "id": "edea6f3f5a3019c8",
        "text": "Double-clicking on items that originated via an import allows independent refactoring of content within the wiki.\n"
      },
      "after": "05c924420db4adf9",
      "date": 1524051983642
    },
    {
      "type": "add",
      "id": "61524a94336827fc",
      "item": {
        "type": "markdown",
        "id": "61524a94336827fc",
        "text": "It is not clear whether access to the import tools should be provided at the item level or the page level. Current [[Mediawiki Transport]] implementation stored json in the [[Create Action]] of the wiki page, enabling meaningful access to the import tool-chain at page access level. Forked paragraph items do not preserve this behaviour. This continues to seem appropriate."
      },
      "after": "edea6f3f5a3019c8",
      "date": 1524052102147
    },
    {
      "type": "edit",
      "id": "1e2df0570fa38ff2",
      "item": {
        "type": "markdown",
        "id": "1e2df0570fa38ff2",
        "text": "# Microservices\n"
      },
      "date": 1524052106354
    },
    {
      "type": "add",
      "id": "6b7039e909852fd3",
      "item": {
        "type": "markdown",
        "id": "6b7039e909852fd3",
        "text": "Microservices are the defacto loosely coupled architecture for federation json. We seek to give them independent status within the federation with a particular role as [[authoring tools]].\n"
      },
      "after": "1e2df0570fa38ff2",
      "date": 1524052188900
    },
    {
      "type": "add",
      "id": "57a0756c3cac599f",
      "item": {
        "type": "paragraph",
        "id": "57a0756c3cac599f",
        "text": "Considering the act of [[authoring]] in wiki as it's own domain, leads to a better comprehension of use, and allows us to integrate developers more closely with the wider writing community on an equitable and no-hierarchical basis."
      },
      "after": "ce14b79c982d7d4f",
      "date": 1524052349553
    },
    {
      "type": "add",
      "id": "020fb0f8f1821473",
      "item": {
        "type": "markdown",
        "id": "020fb0f8f1821473",
        "text": "[[Transporters]] are [[microservices]] designed most commonly to support [[Drag-and-drop import]] of external content into wiki.\n"
      },
      "after": "6b7039e909852fd3",
      "date": 1524052442405
    },
    {
      "type": "add",
      "id": "f1365d2acba537a2",
      "item": {
        "type": "markdown",
        "id": "f1365d2acba537a2",
        "text": "We seek to extend the range and domain of transporters to the general class of microservices that work with federated wiki json. As described here these export and import oriented microservices are [[authoring tools]]."
      },
      "after": "020fb0f8f1821473",
      "date": 1524052517077
    },
    {
      "type": "edit",
      "id": "83aee70807acf387",
      "item": {
        "type": "markdown",
        "id": "83aee70807acf387",
        "text": "# Halo of integration\n"
      },
      "date": 1524052539239
    },
    {
      "type": "add",
      "id": "3c5427d4819b96c5",
      "item": {
        "type": "markdown",
        "id": "3c5427d4819b96c5",
        "text": "Developers creating microservices outside of the wiki-client should not be considered as separate citizens. Wiki can serve as their basis for documentation, and presenting their work, and be firmly integrated into the [[Developer experience]].\n"
      },
      "after": "83aee70807acf387",
      "date": 1524052739783
    },
    {
      "type": "add",
      "id": "c9d587b058bb7f09",
      "item": {
        "type": "markdown",
        "id": "c9d587b058bb7f09",
        "text": "Similarly authors need to be able to find suitable [[authoring tools]] to support their work, understand their function, and add them to their writing environment should they find them useful.\n"
      },
      "after": "3c5427d4819b96c5",
      "date": 1524052795599
    },
    {
      "type": "add",
      "id": "524f3656724baec4",
      "item": {
        "type": "markdown",
        "id": "524f3656724baec4",
        "text": "The current Transporter mechanism allows them to take a first step doing this by specifying the REST url of the microservice in a plugin. This mistakes the domain of action of the plugin - indicating that the functionality is only available to the plugin on a particular page.\n"
      },
      "after": "c9d587b058bb7f09",
      "date": 1524052918036
    },
    {
      "type": "edit",
      "id": "83aee70807acf387",
      "item": {
        "type": "markdown",
        "id": "83aee70807acf387",
        "text": "# Integrating the developer experience"
      },
      "date": 1524052965208
    },
    {
      "type": "add",
      "id": "6b4e8f4e79b91ff2",
      "item": {
        "type": "markdown",
        "id": "6b4e8f4e79b91ff2",
        "text": "# Halo of integration\n\n"
      },
      "after": "524f3656724baec4",
      "date": 1524052971805
    },
    {
      "type": "add",
      "id": "0c711d8687bae196",
      "item": {
        "type": "markdown",
        "id": "0c711d8687bae196",
        "text": "[[Authoring Tools]] should be marked and organised as such. There should be a place to find them, and a way of identifying them as a separate class of tools that add loosely coupled import and export functionality to an entire site.\n"
      },
      "after": "6b4e8f4e79b91ff2",
      "date": 1524053058856
    },
    {
      "type": "add",
      "id": "b7d79542ffc5b274",
      "item": {
        "type": "markdown",
        "id": "b7d79542ffc5b274",
        "text": "We propose using a distinctive halo colour for pages containing [[authoring tools]], and a means to navigate, access and install thee tools on a site using the conventional means available to wiki."
      },
      "after": "0c711d8687bae196",
      "date": 1524053153657
    },
    {
      "type": "edit",
      "id": "018cf2dc1445c40e",
      "item": {
        "type": "markdown",
        "id": "018cf2dc1445c40e",
        "text": "# Proposal\n"
      },
      "date": 1524053160116
    },
    {
      "type": "add",
      "id": "33122aded8b827c8",
      "item": {
        "type": "markdown",
        "id": "33122aded8b827c8",
        "text": "We propose being able to navigate from the [[welcome-visitors]] (home) page of any site to a [[Tool Dialogue Page]] from where the author can navigate within a distinct [[Wiki Dimension]]. \n"
      },
      "after": "018cf2dc1445c40e",
      "date": 1524053315095
    },
    {
      "type": "add",
      "id": "2048e801878d0f99",
      "item": {
        "type": "markdown",
        "id": "2048e801878d0f99",
        "text": "Installing an new import function would be as simple as forking a page to this new [[Tool Folder]], [[Authoring Tool Folder]], or [[Configuration Tool Folder]]. Simplicity would indicate having a single [[Tool Folder]] for all classes of tool described here. The experience of writing this specification, and considering the implications makes me think that we are better served by creating separate folders representing distinct dimensions of functionality that already require different types of tooling, and may well need differing access permissions."
      },
      "after": "33122aded8b827c8",
      "date": 1524053550269
    },
    {
      "type": "edit",
      "id": "2048e801878d0f99",
      "item": {
        "type": "markdown",
        "id": "2048e801878d0f99",
        "text": "Installing an new import function would be as simple as forking a page to this new [[Tool Folder]], [[Authoring Tool Folder]], or [[Configuration Tool Folder]]. Simplicity would indicate having a single [[Tool Folder]] for all classes of tool described here. \n"
      },
      "date": 1524053560214
    },
    {
      "type": "add",
      "id": "1017b41966e36e15",
      "item": {
        "type": "markdown",
        "id": "1017b41966e36e15",
        "text": "The experience of writing this specification, and considering the implications makes me think that we are better served by creating separate folders representing distinct dimensions of functionality that already require different types of tooling, and may well need differing access permissions."
      },
      "after": "2048e801878d0f99",
      "date": 1524053561013
    },
    {
      "item": {
        "type": "factory",
        "id": "9c521565319ed5b7"
      },
      "id": "9c521565319ed5b7",
      "type": "add",
      "after": "1017b41966e36e15",
      "date": 1524053566496
    },
    {
      "type": "edit",
      "id": "9c521565319ed5b7",
      "item": {
        "type": "markdown",
        "id": "9c521565319ed5b7",
        "text": "# A place to start\n"
      },
      "date": 1524053601728
    },
    {
      "type": "add",
      "id": "15aca8753c7fddfb",
      "item": {
        "type": "markdown",
        "id": "15aca8753c7fddfb",
        "text": "I propose a simple starting place that has implication for the wiki-client, and extends the architecture of the server. The former is good, the latter bad.\n"
      },
      "after": "9c521565319ed5b7",
      "date": 1524053653906
    },
    {
      "type": "add",
      "id": "78890cd2cbf4b265",
      "item": {
        "type": "markdown",
        "id": "78890cd2cbf4b265",
        "text": "- [[Redefining Flag Clicks]]\n- Adding a [[Authoring Tools Folder]] to the server\n- Implementing a [[Universal Drag-and-Drop]] import mechanism backed by microservices (transporters).\n- Adding a [[Welcome Authors]] page to the [[Authoring Tools Folder]] which lists microservice end-points and associated regular expressions that can be used by the site for [[Universal Drag-and-Drop]] import."
      },
      "after": "15aca8753c7fddfb",
      "date": 1524053908731
    },
    {
      "type": "edit",
      "id": "78890cd2cbf4b265",
      "item": {
        "type": "markdown",
        "id": "78890cd2cbf4b265",
        "text": "- [[Redefining Flag Clicks]]\n- Adding a [[Authoring Tools Folder]] to the server\n- Implementing a [[Universal Drag-and-Drop]] import mechanism backed by microservices (transporters).\n- Adding a [[Welcome Authors]] page to the [[Authoring Tools Folder]]\n"
      },
      "date": 1524053921170
    },
    {
      "type": "add",
      "id": "ae1994e72f6b6497",
      "item": {
        "type": "markdown",
        "id": "ae1994e72f6b6497",
        "text": " lists microservice end-points and associated regular expressions that can be used by the site for [[Universal Drag-and-Drop]] import."
      },
      "after": "78890cd2cbf4b265",
      "date": 1524053935168
    },
    {
      "type": "edit",
      "id": "78890cd2cbf4b265",
      "item": {
        "type": "markdown",
        "id": "78890cd2cbf4b265",
        "text": "- [[Redefining Flag Clicks]]\n- Adding a [[Authoring Tools Folder]] to the server\n- Implementing a [[Universal Drag-and-Drop]] import mechanism backed by microservices (transporters).\n- Adding a [[Welcome Authors]] page\n"
      },
      "date": 1524053940945
    },
    {
      "type": "edit",
      "id": "ae1994e72f6b6497",
      "item": {
        "type": "markdown",
        "id": "ae1994e72f6b6497",
        "text": " to the [[Authoring Tools Folder]] lists microservice end-points and associated regular expressions that can be used by the site for [[Universal Drag-and-Drop]] import."
      },
      "date": 1524053990322
    },
    {
      "type": "remove",
      "id": "ae1994e72f6b6497",
      "date": 1524054097133
    },
    {
      "type": "edit",
      "id": "78890cd2cbf4b265",
      "item": {
        "type": "markdown",
        "id": "78890cd2cbf4b265",
        "text": "- [[Redefining Flag Clicks]]\n- Adding a [[Authoring Tools Folder]] to the server\n- Implementing a [[Universal Drag-and-Drop]\n- Creating a [[Welcome Authors]] page\n"
      },
      "date": 1524054202847
    },
    {
      "type": "edit",
      "id": "78890cd2cbf4b265",
      "item": {
        "type": "markdown",
        "id": "78890cd2cbf4b265",
        "text": "- [[Redefining Flag Clicks]]\n- Adding a [[Authoring Tools Folder]] to the server\n- Implementing a [[Universal Drag-and-Drop]]\n- Creating a [[Welcome Authors]] page\n"
      },
      "date": 1524054209856
    }
  ]
}