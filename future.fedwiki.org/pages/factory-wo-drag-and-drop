{
  "title": "Factory w/o Drag and Drop",
  "story": [
    {
      "type": "paragraph",
      "id": "f3a5626a26839377",
      "text": "The drag and drop features of federated wiki fully exploit newer capabilities of the browser and result in excellent flow for expert users on laptops and desktops. In thinking about the [[Basic Data Editor]] one helpful idea is to consider a drag/dropless factory, and what advantages that might provide certain users.  "
    },
    {
      "type": "paragraph",
      "id": "266a50012216663a",
      "text": "Today a drop area/click area is created as the factory UI, and when the textbox is created the factory already knows what it is (text, markdown, image, etc)."
    },
    {
      "type": "paragraph",
      "id": "d7b8c11ad1916290",
      "text": "A textbox-based factory would work in a similar fashion, but would produce a textbox first. It would then parse input in the textbox to determine what sort of item to make."
    },
    {
      "type": "paragraph",
      "id": "52813981cef22797",
      "text": "The following patterns will trigger alternate representations:"
    },
    {
      "type": "markdown",
      "id": "044d794c74134de7",
      "text": "## Markdown"
    },
    {
      "type": "paragraph",
      "id": "b283bcf24f714ca0",
      "text": "Markdown interpretation will be triggered by:"
    },
    {
      "type": "markdown",
      "id": "c9bfcf0d45aa4652",
      "text": "* A starting hash followed by a space then text as in # My Awesome Heading.\n* An initial asterisk followed by a space followed by text. (Must be first character of section)\n* An initial '>' as in > This is a blockquote.\n* The presence of any string of [A-z \\-] characters directly bookended by an asterisk. This is the only case triggered by non-initial characters. It's also the most problematic.\n"
    },
    {
      "type": "markdown",
      "id": "6b4a473cdeb5d9d7",
      "text": "## Image"
    },
    {
      "type": "paragraph",
      "id": "8ec714e9fde2c41f",
      "text": "Image support could be triggered by putting a single web URL in the textbox for the image. The system will go out and fetch the URL, resize and encode into the page, adding a [http://example.com/ source] tag to the caption."
    },
    {
      "type": "paragraph",
      "id": "810af9b0688600e7",
      "text": "Video could be triggered by pasting a recognizable video URL into the box."
    },
    {
      "type": "markdown",
      "id": "d8d45b11717ce5db",
      "text": "## Video and Audio"
    },
    {
      "type": "paragraph",
      "id": "546f8797eaab606a",
      "text": "Audio could be created by recognizable URLs. As now, it would play as an embed referencing a remotely stored original."
    },
    {
      "type": "paragraph",
      "id": "952e5e4d7eaeff5a",
      "text": "Video would work similarly, creating a YouTube embed for YouTube URLs, etc. "
    },
    {
      "type": "markdown",
      "id": "d5cf5aa3de31ace7",
      "text": "## Data Features"
    },
    {
      "type": "paragraph",
      "id": "86a06f321166f36b",
      "text": "Data features could be supplied via links to csv output."
    },
    {
      "type": "markdown",
      "id": "a37f041f6b49024f",
      "text": "## Cross-page Refactoring and Citation"
    },
    {
      "type": "paragraph",
      "id": "8307718b65c7bdea",
      "text": "Dragging from one page to another would not be possible in this one-page version. "
    },
    {
      "type": "paragraph",
      "id": "8988837e046eee0f",
      "text": "To preserve IDs for citation, the select all + copy sequence could be intercepted and insert an id reference into the copy buffer, as many online publications do currently. When pasted into factory factory would interpret this ID and follow the current practices with paragraph drops, e.g. assign the id to the new item unless a conflicting id exists."
    },
    {
      "type": "paragraph",
      "id": "eb23819e7cc06791",
      "text": "These select all and copy options could in fact pull over a full specification of the item (as currently), provided it meet basic safety guidelines (conforms to escaping and type rules of the type brought in)."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Factory w/o Drag and Drop",
        "story": []
      },
      "date": 1438361504730
    },
    {
      "item": {
        "type": "factory",
        "id": "f3a5626a26839377"
      },
      "id": "f3a5626a26839377",
      "type": "add",
      "date": 1438361507160
    },
    {
      "type": "edit",
      "id": "f3a5626a26839377",
      "item": {
        "type": "paragraph",
        "id": "f3a5626a26839377",
        "text": "The drag and drop features of federated wiki fully exploit newer capabilities of the browser and result in excellent flow for expert users on laptops and desktops. In thinking about the [[Basic Data Editor]] one helpful idea is to consider a drag/dropless factory, and what advantages that might provide certain users.  "
      },
      "date": 1438361764183
    },
    {
      "item": {
        "type": "factory",
        "id": "266a50012216663a"
      },
      "id": "266a50012216663a",
      "type": "add",
      "after": "f3a5626a26839377",
      "date": 1438543630729
    },
    {
      "type": "edit",
      "id": "266a50012216663a",
      "item": {
        "type": "paragraph",
        "id": "266a50012216663a",
        "text": "Today a drop area/click area is created as the factory UI, and when the textbox is created the factory already knows what it is (text, markdown, image, etc)."
      },
      "date": 1438543726351
    },
    {
      "type": "add",
      "id": "d7b8c11ad1916290",
      "item": {
        "type": "paragraph",
        "id": "d7b8c11ad1916290",
        "text": "A textbox-based factory would work in a similar fashion, but would produce a textbox first. It would then parse input in the textbox to determine what sort of item to make."
      },
      "after": "266a50012216663a",
      "date": 1438543798583
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "52813981cef22797",
        "text": "The following patterns will trigger alternate representations:"
      },
      "after": "d7b8c11ad1916290",
      "id": "52813981cef22797",
      "date": 1438543920282
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b283bcf24f714ca0",
        "text": "Markdown interpretation will be triggered by:"
      },
      "after": "52813981cef22797",
      "id": "b283bcf24f714ca0",
      "date": 1438543923946
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "c9bfcf0d45aa4652",
        "text": "* A starting hash followed by a space then text as in # My Awesome Heading.\n* An initial asterisk followed by a space followed by text. (Must be first character of section)\n* An initial '>' as in > This is a blockquote.\n* The presence of any string of [A-z \\-] characters directly bookended by an asterisk. This is the only case triggered by non-initial characters. It's also the most problematic.\n"
      },
      "after": "52813981cef22797",
      "id": "c9bfcf0d45aa4652",
      "date": 1438543930057
    },
    {
      "type": "move",
      "order": [
        "f3a5626a26839377",
        "266a50012216663a",
        "d7b8c11ad1916290",
        "52813981cef22797",
        "b283bcf24f714ca0",
        "c9bfcf0d45aa4652"
      ],
      "id": "b283bcf24f714ca0",
      "date": 1438543940742
    },
    {
      "item": {
        "type": "factory",
        "id": "044d794c74134de7"
      },
      "id": "044d794c74134de7",
      "type": "add",
      "after": "c9bfcf0d45aa4652",
      "date": 1438543947656
    },
    {
      "type": "edit",
      "id": "044d794c74134de7",
      "item": {
        "type": "markdown",
        "id": "044d794c74134de7",
        "text": "## Markdown"
      },
      "date": 1438543956695
    },
    {
      "type": "move",
      "order": [
        "f3a5626a26839377",
        "266a50012216663a",
        "d7b8c11ad1916290",
        "52813981cef22797",
        "044d794c74134de7",
        "b283bcf24f714ca0",
        "c9bfcf0d45aa4652"
      ],
      "id": "044d794c74134de7",
      "date": 1438543959625
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8ec714e9fde2c41f",
        "text": "Image support is triggered by putting a single web URL in the box of the image. The system will go out and fetch the URL, resize and encode into the page, adding a [http://example.com/ source] tag to the caption."
      },
      "after": "c9bfcf0d45aa4652",
      "id": "8ec714e9fde2c41f",
      "date": 1438543966070
    },
    {
      "item": {
        "type": "factory",
        "id": "6b4a473cdeb5d9d7"
      },
      "id": "6b4a473cdeb5d9d7",
      "type": "add",
      "after": "8ec714e9fde2c41f",
      "date": 1438543967301
    },
    {
      "type": "edit",
      "id": "6b4a473cdeb5d9d7",
      "item": {
        "type": "markdown",
        "id": "6b4a473cdeb5d9d7",
        "text": "## Image"
      },
      "date": 1438543973243
    },
    {
      "type": "move",
      "order": [
        "f3a5626a26839377",
        "266a50012216663a",
        "d7b8c11ad1916290",
        "52813981cef22797",
        "044d794c74134de7",
        "b283bcf24f714ca0",
        "c9bfcf0d45aa4652",
        "6b4a473cdeb5d9d7",
        "8ec714e9fde2c41f"
      ],
      "id": "6b4a473cdeb5d9d7",
      "date": 1438543975121
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "810af9b0688600e7",
        "text": "Video could be triggered by pasting a recognizable video URL into the box."
      },
      "after": "8ec714e9fde2c41f",
      "id": "810af9b0688600e7",
      "date": 1438543990600
    },
    {
      "item": {
        "type": "factory",
        "id": "a5c105eb60d7899a"
      },
      "id": "a5c105eb60d7899a",
      "type": "add",
      "after": "810af9b0688600e7",
      "date": 1438543992177
    },
    {
      "type": "edit",
      "id": "a5c105eb60d7899a",
      "item": {
        "type": "mathjax",
        "id": "a5c105eb60d7899a",
        "text": "## Video"
      },
      "date": 1438543998914
    },
    {
      "type": "remove",
      "id": "a5c105eb60d7899a",
      "date": 1438544003578
    },
    {
      "item": {
        "type": "factory",
        "id": "e0b0047551718d02"
      },
      "id": "e0b0047551718d02",
      "type": "add",
      "after": "810af9b0688600e7",
      "date": 1438544005410
    },
    {
      "type": "edit",
      "id": "e0b0047551718d02",
      "item": {
        "type": "video",
        "id": "e0b0047551718d02",
        "text": "## Video"
      },
      "date": 1438544013798
    },
    {
      "type": "remove",
      "id": "e0b0047551718d02",
      "date": 1438544018341
    },
    {
      "item": {
        "type": "factory",
        "id": "d8d45b11717ce5db"
      },
      "id": "d8d45b11717ce5db",
      "type": "add",
      "after": "810af9b0688600e7",
      "date": 1438544019550
    },
    {
      "type": "edit",
      "id": "d8d45b11717ce5db",
      "item": {
        "type": "markdown",
        "id": "d8d45b11717ce5db",
        "text": "## Video"
      },
      "date": 1438544025823
    },
    {
      "type": "edit",
      "id": "d8d45b11717ce5db",
      "item": {
        "type": "markdown",
        "id": "d8d45b11717ce5db",
        "text": "## Video and Audio"
      },
      "date": 1438544038592
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "546f8797eaab606a",
        "text": "Audio could be created by recognizable URLs."
      },
      "after": "d8d45b11717ce5db",
      "id": "546f8797eaab606a",
      "date": 1438544045275
    },
    {
      "type": "edit",
      "id": "546f8797eaab606a",
      "item": {
        "type": "paragraph",
        "id": "546f8797eaab606a",
        "text": "Audio could be created by recognizable URLs. As now, it would play as an embed referencing a remotely stored original."
      },
      "date": 1438544097887
    },
    {
      "type": "add",
      "id": "952e5e4d7eaeff5a",
      "item": {
        "type": "paragraph",
        "id": "952e5e4d7eaeff5a",
        "text": "Video would work similarly, creating a YouTube embed for YouTube URLs, etc. "
      },
      "after": "546f8797eaab606a",
      "date": 1438544153704
    },
    {
      "item": {
        "type": "factory",
        "id": "d5cf5aa3de31ace7"
      },
      "id": "d5cf5aa3de31ace7",
      "type": "add",
      "after": "952e5e4d7eaeff5a",
      "date": 1438544171552
    },
    {
      "type": "edit",
      "id": "d5cf5aa3de31ace7",
      "item": {
        "type": "markdown",
        "id": "d5cf5aa3de31ace7",
        "text": "## Data Features"
      },
      "date": 1438544189482
    },
    {
      "item": {
        "type": "factory",
        "id": "86a06f321166f36b"
      },
      "id": "86a06f321166f36b",
      "type": "add",
      "after": "d5cf5aa3de31ace7",
      "date": 1438544190956
    },
    {
      "type": "edit",
      "id": "86a06f321166f36b",
      "item": {
        "type": "paragraph",
        "id": "86a06f321166f36b",
        "text": "Data features could be supplied via links to csv output."
      },
      "date": 1438544244281
    },
    {
      "item": {
        "type": "factory",
        "id": "a37f041f6b49024f"
      },
      "id": "a37f041f6b49024f",
      "type": "add",
      "after": "86a06f321166f36b",
      "date": 1438544249152
    },
    {
      "type": "edit",
      "id": "a37f041f6b49024f",
      "item": {
        "type": "markdown",
        "id": "a37f041f6b49024f",
        "text": "## Cross-page Refactoring and Citation"
      },
      "date": 1438544268132
    },
    {
      "item": {
        "type": "factory",
        "id": "8307718b65c7bdea"
      },
      "id": "8307718b65c7bdea",
      "type": "add",
      "after": "a37f041f6b49024f",
      "date": 1438544276820
    },
    {
      "type": "edit",
      "id": "8307718b65c7bdea",
      "item": {
        "type": "paragraph",
        "id": "8307718b65c7bdea",
        "text": "Dragging from one page to another would not be possible in this one-page version. "
      },
      "date": 1438544319656
    },
    {
      "type": "add",
      "id": "8988837e046eee0f",
      "item": {
        "type": "paragraph",
        "id": "8988837e046eee0f",
        "text": "To preserve IDs for citation, the select all + copy sequence could be intercepted and insert an id reference into the copy buffer, as many online publications do currently. When pasted into factory factory would interpret this ID and follow the current practices with paragraph drops, e.g. assign the id to the new item unless a conflicting id exists."
      },
      "after": "8307718b65c7bdea",
      "date": 1438544563231
    },
    {
      "type": "add",
      "id": "eb23819e7cc06791",
      "item": {
        "type": "paragraph",
        "id": "eb23819e7cc06791",
        "text": "These select all options could in fact pull over a full specification of the item (as currently), provided it meet basic safety guidelines (conforms to escaping and type rules of the type brought in)."
      },
      "after": "8988837e046eee0f",
      "date": 1438544682666
    },
    {
      "type": "edit",
      "id": "eb23819e7cc06791",
      "item": {
        "type": "paragraph",
        "id": "eb23819e7cc06791",
        "text": "These select all and copy options could in fact pull over a full specification of the item (as currently), provided it meet basic safety guidelines (conforms to escaping and type rules of the type brought in)."
      },
      "date": 1438544691771
    },
    {
      "type": "edit",
      "id": "8ec714e9fde2c41f",
      "item": {
        "type": "paragraph",
        "id": "8ec714e9fde2c41f",
        "text": "Image support could be triggered by putting a single web URL in the box of the image. The system will go out and fetch the URL, resize and encode into the page, adding a [http://example.com/ source] tag to the caption."
      },
      "date": 1438563847722
    },
    {
      "type": "edit",
      "id": "8ec714e9fde2c41f",
      "item": {
        "type": "paragraph",
        "id": "8ec714e9fde2c41f",
        "text": "Image support could be triggered by putting a single web URL in the textbox for the image. The system will go out and fetch the URL, resize and encode into the page, adding a [http://example.com/ source] tag to the caption."
      },
      "date": 1438563868831
    },
    {
      "type": "fork",
      "site": "futurefed.hapgood.net",
      "date": 1438597934765
    }
  ]
}