{
  "title": "Transient Identity",
  "story": [
    {
      "type": "paragraph",
      "id": "b149c03c160f4123",
      "text": "I'm trying to imagine the use case @opn is exploring. I think it works like this:\n[https://github.com/fedwiki/wiki-node-server/issues/101 github]"
    },
    {
      "type": "paragraph",
      "id": "dd27ca83519975e1",
      "text": "A small server is set up for the purpose of cooperating on a lan, possibly disconnected from the larger internet. A number of users discover this server by convenient means and begin cooperating using some identity that has been conferred upon them by the network. I think some multi-player games work this way and that \"lan parties\" were once popular for playing them.\n\n"
    },
    {
      "type": "paragraph",
      "id": "7088e7c5eb22b1d3",
      "text": "To work in this way wiki would need to distinguish reads/writes to a player's own pages and still allow reads of other players' pages. We do something like this now when a user distinguishes themselves by logging into the origin.\n\n"
    },
    {
      "type": "paragraph",
      "id": "10a5d7ba8101aa5e",
      "text": "It might be that zeroconf delivers enough identity that players could be known by the names they have given their laptops. As I type this my laptop is known as nr.local and I'm ssh'd into au.local. (I name my laptops after my employers.) I just checked, au.local knows nr.local as 10.0.1.195. It might be able to do better if it tried harder with some sort of zeroconf name server reverse lookup.\n\n"
    },
    {
      "type": "paragraph",
      "id": "cfb6da0328b39587",
      "text": "In the informal setting of a lan party it might be reasonable to equate individual identity with machine identity. DHCP leases numbers and zeroconf adds to that slightly more persistent names.\n\n"
    },
    {
      "type": "paragraph",
      "id": "4450c6635d074b30",
      "text": "I have suggested elsewhere that transient identity be manufactured on first contact and stored in the user's browser as a session cookie. See [[Zero Steps to Claim]]"
    },
    {
      "type": "paragraph",
      "id": "852a74f17b417a3b",
      "text": "This mechanism has the advantage that an individual's manufactured identity is bound to their laptop login, not just the machine configuration. It has the disadvantage that it relies on wildcard addressing which might not be available within zeroconf. We should check.\n"
    },
    {
      "type": "pagefold",
      "id": "a3b11f9ddde2f384",
      "text": "."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Transient Identity",
        "story": []
      },
      "date": 1438178922400
    },
    {
      "item": {
        "type": "factory",
        "id": "b149c03c160f4123"
      },
      "id": "b149c03c160f4123",
      "type": "add",
      "date": 1438178924397
    },
    {
      "type": "edit",
      "id": "b149c03c160f4123",
      "item": {
        "type": "paragraph",
        "id": "b149c03c160f4123",
        "text": "I'm trying to imagine the use case @opn is exploring. I think it works like this:\n\nA small server is set up for the purpose of cooperating on a lan, possibly disconnected from the larger internet. A number of users discover this server by convenient means and begin cooperating using some identity that has been conferred upon them by the network. I think some multi-player games work this way and that \"lan parties\" were once popular for playing them.\n\nTo work in this way wiki would need to distinguish reads/writes to a player's own pages and still allow reads of other players' pages. We do something like this now when a user distinguishes themselves by logging into the origin.\n\nIt might be that zeroconf delivers enough identity that players could be known by the names they have given their laptops. As I type this my laptop is known as nr.local and I'm ssh'd into au.local. (I name my laptops after my employers.) I just checked, au.local knows nr.local as 10.0.1.195. It might be able to do better if it tried harder with some sort of zeroconf name server reverse lookup.\n\nIn the informal setting of a lan party it might be reasonable to equate individual identity with machine identity. DHCP leases numbers and zeroconf adds to that slightly more persistent names.\n![image](https://cloud.githubusercontent.com/assets/12127/8959404/81be3cac-35bf-11e5-9b19-02b28b338599.png)\n\nI have suggested elsewhere that transient identity be manufactured on first contact and stored in the user's browser as a session cookie. See [Zero Steps to Claim](http://ward.asia.wiki.org/zero-steps-to-claim.html). This mechanism has the advantage that an individual's manufactured identity is bound to their laptop login, not just the machine configuration. It has the disadvantage that it relies on wildcard addressing which might not be available within zeroconf. We should check.\n"
      },
      "date": 1438178939517
    },
    {
      "type": "edit",
      "id": "b149c03c160f4123",
      "item": {
        "type": "paragraph",
        "id": "b149c03c160f4123",
        "text": "I'm trying to imagine the use case @opn is exploring. I think it works like this:\n[https://github.com/fedwiki/wiki-node-server/issues/101 github]"
      },
      "date": 1438183390121
    },
    {
      "type": "add",
      "id": "dd27ca83519975e1",
      "item": {
        "type": "paragraph",
        "id": "dd27ca83519975e1",
        "text": "A small server is set up for the purpose of cooperating on a lan, possibly disconnected from the larger internet. A number of users discover this server by convenient means and begin cooperating using some identity that has been conferred upon them by the network. I think some multi-player games work this way and that \"lan parties\" were once popular for playing them.\n\n"
      },
      "after": "b149c03c160f4123",
      "date": 1438183395264
    },
    {
      "type": "add",
      "id": "7088e7c5eb22b1d3",
      "item": {
        "type": "paragraph",
        "id": "7088e7c5eb22b1d3",
        "text": "To work in this way wiki would need to distinguish reads/writes to a player's own pages and still allow reads of other players' pages. We do something like this now when a user distinguishes themselves by logging into the origin.\n\n"
      },
      "after": "dd27ca83519975e1",
      "date": 1438183399262
    },
    {
      "type": "add",
      "id": "10a5d7ba8101aa5e",
      "item": {
        "type": "paragraph",
        "id": "10a5d7ba8101aa5e",
        "text": "It might be that zeroconf delivers enough identity that players could be known by the names they have given their laptops. As I type this my laptop is known as nr.local and I'm ssh'd into au.local. (I name my laptops after my employers.) I just checked, au.local knows nr.local as 10.0.1.195. It might be able to do better if it tried harder with some sort of zeroconf name server reverse lookup.\n\n"
      },
      "after": "7088e7c5eb22b1d3",
      "date": 1438183404999
    },
    {
      "type": "add",
      "id": "cfb6da0328b39587",
      "item": {
        "type": "paragraph",
        "id": "cfb6da0328b39587",
        "text": "In the informal setting of a lan party it might be reasonable to equate individual identity with machine identity. DHCP leases numbers and zeroconf adds to that slightly more persistent names.\n\n"
      },
      "after": "10a5d7ba8101aa5e",
      "date": 1438183418518
    },
    {
      "type": "add",
      "id": "4450c6635d074b30",
      "item": {
        "type": "paragraph",
        "id": "4450c6635d074b30",
        "text": "I have suggested elsewhere that transient identity be manufactured on first contact and stored in the user's browser as a session cookie. See [Zero Steps to Claim](http://ward.asia.wiki.org/zero-steps-to-claim.html). This mechanism has the advantage that an individual's manufactured identity is bound to their laptop login, not just the machine configuration. It has the disadvantage that it relies on wildcard addressing which might not be available within zeroconf. We should check.\n"
      },
      "after": "cfb6da0328b39587",
      "date": 1438183423395
    },
    {
      "item": {
        "type": "factory",
        "id": "a3b11f9ddde2f384"
      },
      "id": "a3b11f9ddde2f384",
      "type": "add",
      "after": "4450c6635d074b30",
      "date": 1438183442259
    },
    {
      "type": "edit",
      "id": "a3b11f9ddde2f384",
      "item": {
        "type": "pagefold",
        "id": "a3b11f9ddde2f384",
        "text": "."
      },
      "date": 1438183447442
    },
    {
      "type": "edit",
      "id": "4450c6635d074b30",
      "item": {
        "type": "paragraph",
        "id": "4450c6635d074b30",
        "text": "I have suggested elsewhere that transient identity be manufactured on first contact and stored in the user's browser as a session cookie. See [[Zero Steps to Claim]]. This mechanism has the advantage that an individual's manufactured identity is bound to their laptop login, not just the machine configuration. It has the disadvantage that it relies on wildcard addressing which might not be available within zeroconf. We should check.\n"
      },
      "date": 1438183542149
    },
    {
      "type": "edit",
      "id": "4450c6635d074b30",
      "item": {
        "type": "paragraph",
        "id": "4450c6635d074b30",
        "text": "I have suggested elsewhere that transient identity be manufactured on first contact and stored in the user's browser as a session cookie. See [[Zero Steps to Claim]]."
      },
      "date": 1438183565837
    },
    {
      "type": "add",
      "id": "852a74f17b417a3b",
      "item": {
        "type": "paragraph",
        "id": "852a74f17b417a3b",
        "text": "This mechanism has the advantage that an individual's manufactured identity is bound to their laptop login, not just the machine configuration. It has the disadvantage that it relies on wildcard addressing which might not be available within zeroconf. We should check.\n"
      },
      "after": "4450c6635d074b30",
      "date": 1438183567324
    },
    {
      "type": "edit",
      "id": "4450c6635d074b30",
      "item": {
        "type": "paragraph",
        "id": "4450c6635d074b30",
        "text": "I have suggested elsewhere that transient identity be manufactured on first contact and stored in the user's browser as a session cookie. See [[Zero Steps to Claim]]"
      },
      "date": 1438183575495
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1455572337378
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1498481157964
    }
  ]
}