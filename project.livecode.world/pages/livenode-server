{
  "journal": [
    {
      "date": 1427885163198,
      "item": {
        "story": "",
        "title": "LiveNode Server"
      },
      "type": "create"
    },
    {
      "date": 1427885167364,
      "id": "1a9b19fe6c6efa78",
      "item": {
        "id": "1a9b19fe6c6efa78",
        "type": "factory"
      },
      "type": "add"
    },
    {
      "date": 1427885206386,
      "id": "1a9b19fe6c6efa78",
      "item": {
        "id": "1a9b19fe6c6efa78",
        "text": "The aim of this project is to create a [[LiveCode Server]] that interoperates with [[NodeJS]].",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "1a9b19fe6c6efa78",
      "date": 1427885208176,
      "id": "3a18e8248a671a57",
      "item": {
        "id": "3a18e8248a671a57",
        "type": "factory"
      },
      "type": "add"
    },
    {
      "date": 1427885216255,
      "id": "3a18e8248a671a57",
      "item": {
        "id": "3a18e8248a671a57",
        "text": "YOUTUBE cfHLgHCsZTc\n(double-click to edit caption)\n",
        "type": "video"
      },
      "type": "edit"
    },
    {
      "date": 1427885272987,
      "id": "3a18e8248a671a57",
      "item": {
        "id": "3a18e8248a671a57",
        "text": "YOUTUBE cfHLgHCsZTc\nA [[LiveCode]] HTTP server by [[\n",
        "type": "video"
      },
      "type": "edit"
    },
    {
      "date": 1427885354368,
      "id": "3a18e8248a671a57",
      "item": {
        "id": "3a18e8248a671a57",
        "text": "YOUTUBE cfHLgHCsZTc\nA [[LiveCode]] HTTP server by [[Todd Geist]]\n",
        "type": "video"
      },
      "type": "edit"
    },
    {
      "date": 1427885707999,
      "id": "1a9b19fe6c6efa78",
      "item": {
        "id": "1a9b19fe6c6efa78",
        "text": "The aim of this project is to create a [[LiveCode Server]] that interoperates efficiently with [[NodeJS]].",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "1a9b19fe6c6efa78",
      "date": 1427886324475,
      "id": "8f9831adcb444de2",
      "item": {
        "id": "8f9831adcb444de2",
        "text": "Below [[Todd Geist]] shows a simple LiveCode HTTP Server modified to add a [[Router]] and [[Middleware]]. ",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427886382511,
      "id": "8f9831adcb444de2",
      "item": {
        "id": "8f9831adcb444de2",
        "text": "Below [[Todd Geist]] shows a simple [[LiveCode HTTP Server]] modified to add a [[Router]] and [[Middleware]]. The architecture borrows from simple light servers like [[Ruby Sinatra]] or [[Node Express]].",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "type": "add",
      "id": "9eef8793d419dd2c",
      "item": {
        "type": "paragraph",
        "id": "9eef8793d419dd2c",
        "text": "Based on conversations with [[Richard Gaskin]] and [[dafs]]]"
      },
      "after": "1a9b19fe6c6efa78",
      "date": 1428484863681
    },
    {
      "type": "edit",
      "id": "9eef8793d419dd2c",
      "item": {
        "type": "paragraph",
        "id": "9eef8793d419dd2c",
        "text": "Based on conversations with [[Richard Gaskin]] and [[Andrew Kluthe]]"
      },
      "date": 1428484886370
    },
    {
      "type": "edit",
      "id": "9eef8793d419dd2c",
      "item": {
        "type": "paragraph",
        "id": "9eef8793d419dd2c",
        "text": "Based on conversations with [[Richard Gaskin]] and [[Andrew Kluthe]]:"
      },
      "date": 1428484923121
    },
    {
      "type": "add",
      "id": "5fc357e55ae6b5a3",
      "item": {
        "type": "paragraph",
        "id": "5fc357e55ae6b5a3",
        "text": "<UL><LI>"
      },
      "after": "9eef8793d419dd2c",
      "date": 1428484946139
    },
    {
      "item": {
        "type": "factory",
        "id": "0ea4b7c0257cd46d"
      },
      "id": "0ea4b7c0257cd46d",
      "type": "add",
      "after": "3a18e8248a671a57",
      "date": 1428484954914
    },
    {
      "type": "edit",
      "id": "0ea4b7c0257cd46d",
      "item": {
        "type": "markdown",
        "id": "0ea4b7c0257cd46d",
        "text": " * Hello"
      },
      "date": 1428484963137
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "0ea4b7c0257cd46d",
        "8f9831adcb444de2",
        "3a18e8248a671a57"
      ],
      "id": "0ea4b7c0257cd46d",
      "date": 1428484967949
    },
    {
      "type": "edit",
      "id": "0ea4b7c0257cd46d",
      "item": {
        "type": "markdown",
        "id": "0ea4b7c0257cd46d",
        "text": "- Hello"
      },
      "date": 1428485036379
    },
    {
      "type": "edit",
      "id": "5fc357e55ae6b5a3",
      "item": {
        "type": "html",
        "id": "5fc357e55ae6b5a3",
        "text": "<UL><LI>"
      },
      "date": 1428485105838
    },
    {
      "type": "remove",
      "id": "0ea4b7c0257cd46d",
      "date": 1428485367757
    },
    {
      "type": "edit",
      "id": "5fc357e55ae6b5a3",
      "item": {
        "type": "html",
        "id": "5fc357e55ae6b5a3",
        "text": "<UL><LI>\n  Livecode messaging is fully asynchronous</LI><LI>\n  adfs\n</UL</LI>"
      },
      "date": 1428485442199
    },
    {
      "type": "edit",
      "id": "5fc357e55ae6b5a3",
      "item": {
        "type": "html",
        "id": "5fc357e55ae6b5a3",
        "text": "<UL><LI>\n  [[Asynchronous Livecode Messaging]]</LI><LI>\n  adfs\n</UL</LI>"
      },
      "date": 1428485471988
    },
    {
      "type": "edit",
      "id": "5fc357e55ae6b5a3",
      "item": {
        "type": "html",
        "id": "5fc357e55ae6b5a3",
        "text": "<UL><LI>\n  [[Asynchronous Livecode Messaging]]</LI><LI>\n  [[Why Closures Are Useful]]\n</UL</LI>"
      },
      "date": 1428485810488
    },
    {
      "type": "edit",
      "id": "5fc357e55ae6b5a3",
      "item": {
        "type": "html",
        "id": "5fc357e55ae6b5a3",
        "text": "<UL><LI>\n  [[Asynchronous Livecode Messaging]]</LI><LI>\n  [[Why Closures Are Useful]]</LI><LI>\n  [[Dynamic Callbacks in Livecode]]\n</UL</LI>"
      },
      "date": 1428486008726
    },
    {
      "item": {
        "type": "factory",
        "id": "9d0e558833a2bcc4"
      },
      "id": "9d0e558833a2bcc4",
      "type": "add",
      "after": "3a18e8248a671a57",
      "date": 1433705560824
    },
    {
      "type": "edit",
      "id": "9d0e558833a2bcc4",
      "item": {
        "type": "paragraph",
        "id": "9d0e558833a2bcc4",
        "text": "[[Livecode Server on DigitalOcean]]"
      },
      "date": 1433705593473
    },
    {
      "item": {
        "type": "factory",
        "id": "945ff8bc3d10f0f2"
      },
      "id": "945ff8bc3d10f0f2",
      "type": "add",
      "after": "9d0e558833a2bcc4",
      "date": 1433705757774
    },
    {
      "type": "edit",
      "id": "945ff8bc3d10f0f2",
      "item": {
        "type": "reference",
        "id": "945ff8bc3d10f0f2",
        "site": "livecode.viral.academy",
        "slug": "livecode-server-on-digitalocean",
        "title": "Livecode Server on DigitalOcean",
        "text": "The following instructions from Mike Bonner describe how to get [[Livecode Server]] running on [[DigitalOcean]]:"
      },
      "date": 1433705763144
    },
    {
      "type": "remove",
      "id": "9d0e558833a2bcc4",
      "date": 1433705767533
    },
    {
      "type": "fork",
      "site": "livecode.viral.academy",
      "date": 1448365275596
    },
    {
      "type": "add",
      "id": "957c1fd7dea7746a",
      "item": {
        "type": "paragraph",
        "id": "957c1fd7dea7746a",
        "text": "# NodeS and LiveCode"
      },
      "after": "5fc357e55ae6b5a3",
      "site": "livecode.viral.academy",
      "date": 1448365275594
    },
    {
      "type": "add",
      "id": "df23e30195a7b482",
      "item": {
        "type": "paragraph",
        "id": "df23e30195a7b482",
        "text": "The official instructions only explain how to install \"LiveCode Server\" [1] as a CGI processor for the Apache web server - although the package may also be used behind other servers without any problems. If you prefer light-weight solutions, you may build your own server using Node.js [2] and Express.js [3] together with the SimpleCGI \"Middleware\", which forwards CGI requests to \"LiveCode Server\".\n\nRead here how to put together your own server in this way.\nOverview\n\nA simple Server for \"LiveCode Server\"\nServer Installation\nA few Sample Scripts\nA simple Server for \"LiveCode Server\"\n\nIf you plan to work with \"LiveCode Server\", terms such as \"Node.js\" and \"Express.js\" may not sound familiar to you - but setting up a CGI-enabled server is still pretty easy.\n\nAs a preliminary information: using \"Node.js\" (together with additional packages such as \"Express.js\" and \"SimpleCGI\") it is possible to create extremely light-weight yet still powerful servers which are programmed in JavaScript."
      },
      "after": "957c1fd7dea7746a",
      "date": 1448365277987
    },
    {
      "type": "fork",
      "date": 1448365394832
    },
    {
      "type": "edit",
      "id": "957c1fd7dea7746a",
      "item": {
        "type": "markdown",
        "id": "957c1fd7dea7746a",
        "text": "# NodeS and LiveCode"
      },
      "date": 1448365424196
    },
    {
      "type": "edit",
      "id": "df23e30195a7b482",
      "item": {
        "type": "paragraph",
        "id": "df23e30195a7b482",
        "text": "The official instructions only explain how to install \"LiveCode Server\" as a CGI processor for the Apache web server - although the package may also be used behind other servers without any problems."
      },
      "date": 1448365437336
    },
    {
      "type": "add",
      "id": "537f33528f2998b5",
      "item": {
        "type": "paragraph",
        "id": "537f33528f2998b5",
        "text": "If you prefer light-weight solutions, you may build your own server using [[Node.js]] and [[Express.js]] together with the SimpleCGI \"Middleware\", which forwards CGI requests to \"LiveCode Server\"."
      },
      "after": "df23e30195a7b482",
      "date": 1448365462119
    },
    {
      "type": "add",
      "id": "170802553acf36e6",
      "item": {
        "type": "paragraph",
        "id": "170802553acf36e6",
        "text": "* A simple Server for \"LiveCode Server\"\n* Server Installation\n* A few Sample Scripts\n* A simple Server for \"LiveCode Server\"\n\n"
      },
      "after": "537f33528f2998b5",
      "date": 1448365496566
    },
    {
      "type": "edit",
      "id": "170802553acf36e6",
      "item": {
        "type": "markdown",
        "id": "170802553acf36e6",
        "text": "* A simple Server for \"LiveCode Server\"\n* Server Installation\n* A few Sample Scripts\n* A simple Server for \"LiveCode Server\"\n\n"
      },
      "date": 1448365498326
    },
    {
      "type": "remove",
      "id": "8f9831adcb444de2",
      "date": 1448365524443
    },
    {
      "type": "remove",
      "id": "3a18e8248a671a57",
      "date": 1448365528314
    },
    {
      "item": {
        "type": "factory",
        "id": "86eef3f9bc9abd67"
      },
      "id": "86eef3f9bc9abd67",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448365535404
    },
    {
      "type": "edit",
      "id": "86eef3f9bc9abd67",
      "item": {
        "type": "reference",
        "id": "86eef3f9bc9abd67",
        "site": "livecode.viral.academy",
        "slug": "livecode-http-server",
        "title": "LiveCode HTTP Server",
        "text": "Below [[Todd Geist]] shows a simple [[LiveCode HTTP Server]] modified to add a [[Router]] and [[Middleware]]. The architecture borrows from simple light servers like [[Ruby Sinatra]] or [[Node Express]]."
      },
      "date": 1448365537433
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "df23e30195a7b482",
        "537f33528f2998b5",
        "170802553acf36e6",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "86eef3f9bc9abd67",
      "date": 1448365539754
    },
    {
      "type": "edit",
      "id": "957c1fd7dea7746a",
      "item": {
        "type": "markdown",
        "id": "957c1fd7dea7746a",
        "text": "# NodeJS and LiveCode"
      },
      "date": 1448811471746
    },
    {
      "type": "remove",
      "id": "df23e30195a7b482",
      "date": 1448811500471
    },
    {
      "type": "edit",
      "id": "537f33528f2998b5",
      "item": {
        "type": "paragraph",
        "id": "537f33528f2998b5",
        "text": "If you prefer light-weight server + the expressive power of [[LiveScript]], you may build your own server using [[Node.js]] and [[Express.js]] together with the SimpleCGI \"Middleware\", which forwards CGI requests to [[LiveCode Server]] - [http://www.rozek.mobi/LiveCode_Server/Node.js/index_scr_en.html rozek.mobi]"
      },
      "date": 1448811556137
    },
    {
      "item": {
        "type": "factory",
        "id": "0426d68071b8bf30"
      },
      "id": "0426d68071b8bf30",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448811642795
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "0426d68071b8bf30",
      "date": 1448811644759
    },
    {
      "type": "edit",
      "id": "0426d68071b8bf30",
      "item": {
        "type": "paragraph",
        "id": "0426d68071b8bf30",
        "text": "# Server Installation"
      },
      "date": 1448811820528
    },
    {
      "type": "add",
      "id": "0f0ed34843796137",
      "item": {
        "type": "paragraph",
        "id": "0f0ed34843796137",
        "text": "If not already done, download an installer for your operating system from nodejs.org and install [[Node.js]] on your computer;\n \nopen a terminal window;\n \ncreate a directory for your HTTP server\n \nmkdir WebServer\n \nchange to that directory\n \ncd WebServer\n \ninstall Express.js\n \nnpm install express\n \ninstall SimpleCGI\n \nnpm install simplecgi\n \nopen a text editor and create a file called WebServer in the current directory. The content of this file is the script shown above - if necessary with any changes you want\n \nusers of Mac OS X or Linux should now mark the script as executable\n \nchmod +x WebServer\n \n(Windows users should skip this step)\n \ncreate a subdirectory for the files the WebServer should deliver:\n \nmkdir www\nThat's all: users of Mac OS X or Linux may run the script file directly:\n\n  ./WebServer\n\nWindows users should enter\n\n  node WebServer\n\ninstead.\n\nThe newly started server is now waiting for requests on port 8080 - any errors are output to the still open terminal window."
      },
      "after": "0426d68071b8bf30",
      "date": 1448811859644
    },
    {
      "type": "edit",
      "id": "0f0ed34843796137",
      "item": {
        "type": "paragraph",
        "id": "0f0ed34843796137",
        "text": "If not already done, download an installer for your operating system from nodejs.org and install [[Node.js]] on your computer;\n \n* open a terminal window;\n* create a directory for your HTTP server\n"
      },
      "date": 1448811884834
    },
    {
      "type": "edit",
      "id": "0f0ed34843796137",
      "item": {
        "type": "markdown",
        "id": "0f0ed34843796137",
        "text": "If not already done, download an installer for your operating system from nodejs.org and install [[Node.js]] on your computer;\n \n* open a terminal window;\n* create a directory for your HTTP server\n"
      },
      "date": 1448811885931
    },
    {
      "type": "edit",
      "id": "0426d68071b8bf30",
      "item": {
        "type": "markdown",
        "id": "0426d68071b8bf30",
        "text": "# Server Installation"
      },
      "date": 1448811886770
    },
    {
      "type": "add",
      "id": "6656bca682a6b4af",
      "item": {
        "type": "paragraph",
        "id": "6656bca682a6b4af",
        "text": "mkdir WebServer\n \nchange to that directory\n \ncd WebServer\n \ninstall Express.js\n \nnpm install express\n \ninstall SimpleCGI\n \nnpm install simplecgi\n \nopen a text editor and create a file called WebServer in the current directory. The content of this file is the script shown above - if necessary with any changes you want\n \nusers of Mac OS X or Linux should now mark the script as executable\n \nchmod +x WebServer\n \n(Windows users should skip this step)\n \ncreate a subdirectory for the files the WebServer should deliver:\n \nmkdir www\nThat's all: users of Mac OS X or Linux may run the script file directly:\n\n  ./WebServer\n\nWindows users should enter\n\n  node WebServer\n\ninstead.\n\nThe newly started server is now waiting for requests on port 8080 - any errors are output to the still open terminal window."
      },
      "after": "0f0ed34843796137",
      "date": 1448811887983
    },
    {
      "type": "edit",
      "id": "0f0ed34843796137",
      "item": {
        "type": "markdown",
        "id": "0f0ed34843796137",
        "text": "If not already done, download an installer for your operating system from nodejs.org and install [[Node.js]] on your computer - [http://www.nodejs.org nodejs.org];\n* open a terminal window;\n* create a directory for your HTTP server\n"
      },
      "date": 1448811913036
    },
    {
      "item": {
        "type": "factory",
        "id": "f23f13dccaa337ef"
      },
      "id": "f23f13dccaa337ef",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448811924095
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "f23f13dccaa337ef",
      "date": 1448811926922
    },
    {
      "item": {
        "type": "factory",
        "id": "9ae517cec81c5088"
      },
      "id": "9ae517cec81c5088",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448811928543
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "9ae517cec81c5088",
        "6656bca682a6b4af",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "9ae517cec81c5088",
      "date": 1448811930285
    },
    {
      "type": "edit",
      "id": "6656bca682a6b4af",
      "item": {
        "type": "paragraph",
        "id": "6656bca682a6b4af",
        "text": "change to that directory\n \ncd WebServer\n \ninstall Express.js\n \nnpm install express\n \ninstall SimpleCGI\n \nnpm install simplecgi\n \nopen a text editor and create a file called WebServer in the current directory. The content of this file is the script shown above - if necessary with any changes you want\n \nusers of Mac OS X or Linux should now mark the script as executable\n \nchmod +x WebServer\n \n(Windows users should skip this step)\n \ncreate a subdirectory for the files the WebServer should deliver:\n \nmkdir www\nThat's all: users of Mac OS X or Linux may run the script file directly:\n\n  ./WebServer\n\nWindows users should enter\n\n  node WebServer\n\ninstead.\n\nThe newly started server is now waiting for requests on port 8080 - any errors are output to the still open terminal window."
      },
      "date": 1448811945640
    },
    {
      "type": "edit",
      "id": "f23f13dccaa337ef",
      "item": {
        "type": "code",
        "id": "f23f13dccaa337ef",
        "text": "mkdir WebServer"
      },
      "date": 1448811947963
    },
    {
      "type": "edit",
      "id": "6656bca682a6b4af",
      "item": {
        "type": "paragraph",
        "id": "6656bca682a6b4af",
        "text": "change to that directory"
      },
      "date": 1448811962959
    },
    {
      "type": "add",
      "id": "b59fa78713ab12a5",
      "item": {
        "type": "paragraph",
        "id": "b59fa78713ab12a5",
        "text": " \ninstall Express.js\n \nnpm install express\n \ninstall SimpleCGI\n \nnpm install simplecgi\n \nopen a text editor and create a file called WebServer in the current directory. The content of this file is the script shown above - if necessary with any changes you want\n \nusers of Mac OS X or Linux should now mark the script as executable\n \nchmod +x WebServer\n \n(Windows users should skip this step)\n \ncreate a subdirectory for the files the WebServer should deliver:\n \nmkdir www\nThat's all: users of Mac OS X or Linux may run the script file directly:\n\n  ./WebServer\n\nWindows users should enter\n\n  node WebServer\n\ninstead.\n\nThe newly started server is now waiting for requests on port 8080 - any errors are output to the still open terminal window."
      },
      "after": "6656bca682a6b4af",
      "date": 1448811964172
    },
    {
      "type": "edit",
      "id": "9ae517cec81c5088",
      "item": {
        "type": "code",
        "id": "9ae517cec81c5088",
        "text": "cd WebServer\n"
      },
      "date": 1448811965617
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "9ae517cec81c5088",
        "b59fa78713ab12a5",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "6656bca682a6b4af",
      "date": 1448811977741
    },
    {
      "type": "edit",
      "id": "b59fa78713ab12a5",
      "item": {
        "type": "paragraph",
        "id": "b59fa78713ab12a5",
        "text": "install Express.js"
      },
      "date": 1448812002996
    },
    {
      "type": "add",
      "id": "9a06493dcde80bf5",
      "item": {
        "type": "paragraph",
        "id": "9a06493dcde80bf5",
        "text": " install SimpleCGI"
      },
      "after": "b59fa78713ab12a5",
      "date": 1448812008334
    },
    {
      "item": {
        "type": "factory",
        "id": "93107a44b5c37bfc"
      },
      "id": "93107a44b5c37bfc",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448812010424
    },
    {
      "type": "add",
      "id": "00f5be6872084f0d",
      "item": {
        "type": "paragraph",
        "id": "00f5be6872084f0d",
        "text": " \nnpm install simplecgi\n \nopen a text editor and create a file called WebServer in the current directory. The content of this file is the script shown above - if necessary with any changes you want\n \nusers of Mac OS X or Linux should now mark the script as executable\n \nchmod +x WebServer\n \n(Windows users should skip this step)\n \ncreate a subdirectory for the files the WebServer should deliver:\n \nmkdir www\nThat's all: users of Mac OS X or Linux may run the script file directly:\n\n  ./WebServer\n\nWindows users should enter\n\n  node WebServer\n\ninstead.\n\nThe newly started server is now waiting for requests on port 8080 - any errors are output to the still open terminal window."
      },
      "after": "9a06493dcde80bf5",
      "date": 1448812011696
    },
    {
      "type": "edit",
      "id": "93107a44b5c37bfc",
      "item": {
        "type": "code",
        "id": "93107a44b5c37bfc",
        "text": "npm install express"
      },
      "date": 1448812013739
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "9ae517cec81c5088",
        "b59fa78713ab12a5",
        "93107a44b5c37bfc",
        "9a06493dcde80bf5",
        "00f5be6872084f0d",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "93107a44b5c37bfc",
      "date": 1448812016237
    },
    {
      "type": "edit",
      "id": "00f5be6872084f0d",
      "item": {
        "type": "paragraph",
        "id": "00f5be6872084f0d",
        "text": " npm install simplecgi"
      },
      "date": 1448812033866
    },
    {
      "type": "add",
      "id": "bdf5f227c4a355aa",
      "item": {
        "type": "paragraph",
        "id": "bdf5f227c4a355aa",
        "text": "open a text editor and create a file called WebServer in the current directory. The content of this file is the script shown above - if necessary with any changes you want"
      },
      "after": "00f5be6872084f0d",
      "date": 1448812042546
    },
    {
      "type": "add",
      "id": "8bbaf98bebf2c866",
      "item": {
        "type": "paragraph",
        "id": "8bbaf98bebf2c866",
        "text": "users of Mac OS X or Linux should now mark the script as executable"
      },
      "after": "bdf5f227c4a355aa",
      "date": 1448812048450
    },
    {
      "type": "add",
      "id": "833adbb0bb26f591",
      "item": {
        "type": "paragraph",
        "id": "833adbb0bb26f591",
        "text": "chmod +x WebServer"
      },
      "after": "8bbaf98bebf2c866",
      "date": 1448812052634
    },
    {
      "type": "add",
      "id": "b461ccea88923ecf",
      "item": {
        "type": "paragraph",
        "id": "b461ccea88923ecf",
        "text": "(Windows users should skip this step)\n \ncreate a subdirectory for the files the WebServer should deliver:\n \nmkdir www\nThat's all: users of Mac OS X or Linux may run the script file directly:\n\n  ./WebServer\n\nWindows users should enter\n\n  node WebServer\n\ninstead.\n\nThe newly started server is now waiting for requests on port 8080 - any errors are output to the still open terminal window."
      },
      "after": "833adbb0bb26f591",
      "date": 1448812058042
    },
    {
      "type": "edit",
      "id": "b461ccea88923ecf",
      "item": {
        "type": "paragraph",
        "id": "b461ccea88923ecf",
        "text": "(Windows users should skip this step)\n \n"
      },
      "date": 1448812067171
    },
    {
      "type": "add",
      "id": "d060050a67932745",
      "item": {
        "type": "paragraph",
        "id": "d060050a67932745",
        "text": "create a subdirectory for the files the WebServer should deliver:\n \n"
      },
      "after": "b461ccea88923ecf",
      "date": 1448812070486
    },
    {
      "type": "add",
      "id": "3170dedf5c981d24",
      "item": {
        "type": "paragraph",
        "id": "3170dedf5c981d24",
        "text": "mkdir www\n"
      },
      "after": "d060050a67932745",
      "date": 1448812072619
    },
    {
      "type": "add",
      "id": "c675f8c360985cad",
      "item": {
        "type": "paragraph",
        "id": "c675f8c360985cad",
        "text": "That's all: users of Mac OS X or Linux may run the script file directly:\n\n"
      },
      "after": "3170dedf5c981d24",
      "date": 1448812079179
    },
    {
      "type": "add",
      "id": "d4167ad3c929551a",
      "item": {
        "type": "paragraph",
        "id": "d4167ad3c929551a",
        "text": "./WebServer\n\n"
      },
      "after": "c675f8c360985cad",
      "date": 1448812081428
    },
    {
      "type": "add",
      "id": "164d548adf422d15",
      "item": {
        "type": "paragraph",
        "id": "164d548adf422d15",
        "text": "Windows users should enter\n\n"
      },
      "after": "d4167ad3c929551a",
      "date": 1448812083892
    },
    {
      "type": "add",
      "id": "a268c4c3d0d665b7",
      "item": {
        "type": "paragraph",
        "id": "a268c4c3d0d665b7",
        "text": "node WebServer\n\n"
      },
      "after": "164d548adf422d15",
      "date": 1448812087148
    },
    {
      "type": "add",
      "id": "a86924e57593f7f0",
      "item": {
        "type": "paragraph",
        "id": "a86924e57593f7f0",
        "text": "instead.\n\n"
      },
      "after": "a268c4c3d0d665b7",
      "date": 1448812089724
    },
    {
      "type": "add",
      "id": "b9fb69b02f53321a",
      "item": {
        "type": "paragraph",
        "id": "b9fb69b02f53321a",
        "text": "The newly started server is now waiting for requests on port 8080 - any errors are output to the still open terminal window."
      },
      "after": "a86924e57593f7f0",
      "date": 1448812091316
    },
    {
      "item": {
        "type": "factory",
        "id": "ce299d7a18e1a77e"
      },
      "id": "ce299d7a18e1a77e",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448812094975
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "9ae517cec81c5088",
        "b59fa78713ab12a5",
        "93107a44b5c37bfc",
        "9a06493dcde80bf5",
        "ce299d7a18e1a77e",
        "00f5be6872084f0d",
        "bdf5f227c4a355aa",
        "8bbaf98bebf2c866",
        "833adbb0bb26f591",
        "b461ccea88923ecf",
        "d060050a67932745",
        "3170dedf5c981d24",
        "c675f8c360985cad",
        "d4167ad3c929551a",
        "164d548adf422d15",
        "a268c4c3d0d665b7",
        "a86924e57593f7f0",
        "b9fb69b02f53321a",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "ce299d7a18e1a77e",
      "date": 1448812102005
    },
    {
      "type": "remove",
      "id": "00f5be6872084f0d",
      "date": 1448812106852
    },
    {
      "type": "edit",
      "id": "ce299d7a18e1a77e",
      "item": {
        "type": "code",
        "id": "ce299d7a18e1a77e",
        "text": "npm install simplecgi"
      },
      "date": 1448812112693
    },
    {
      "item": {
        "type": "factory",
        "id": "51999a41946964f0"
      },
      "id": "51999a41946964f0",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448812118090
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "9ae517cec81c5088",
        "b59fa78713ab12a5",
        "93107a44b5c37bfc",
        "9a06493dcde80bf5",
        "ce299d7a18e1a77e",
        "bdf5f227c4a355aa",
        "8bbaf98bebf2c866",
        "833adbb0bb26f591",
        "b461ccea88923ecf",
        "d060050a67932745",
        "51999a41946964f0",
        "3170dedf5c981d24",
        "c675f8c360985cad",
        "d4167ad3c929551a",
        "164d548adf422d15",
        "a268c4c3d0d665b7",
        "a86924e57593f7f0",
        "b9fb69b02f53321a",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "51999a41946964f0",
      "date": 1448812120420
    },
    {
      "item": {
        "type": "factory",
        "id": "eaeeeed86a70ae52"
      },
      "id": "eaeeeed86a70ae52",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448812122102
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "9ae517cec81c5088",
        "b59fa78713ab12a5",
        "93107a44b5c37bfc",
        "9a06493dcde80bf5",
        "ce299d7a18e1a77e",
        "bdf5f227c4a355aa",
        "8bbaf98bebf2c866",
        "833adbb0bb26f591",
        "b461ccea88923ecf",
        "d060050a67932745",
        "51999a41946964f0",
        "3170dedf5c981d24",
        "c675f8c360985cad",
        "eaeeeed86a70ae52",
        "d4167ad3c929551a",
        "164d548adf422d15",
        "a268c4c3d0d665b7",
        "a86924e57593f7f0",
        "b9fb69b02f53321a",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "eaeeeed86a70ae52",
      "date": 1448812123628
    },
    {
      "item": {
        "type": "factory",
        "id": "ffe3801f5d458fec"
      },
      "id": "ffe3801f5d458fec",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448812125927
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "9ae517cec81c5088",
        "b59fa78713ab12a5",
        "93107a44b5c37bfc",
        "9a06493dcde80bf5",
        "ce299d7a18e1a77e",
        "bdf5f227c4a355aa",
        "ffe3801f5d458fec",
        "8bbaf98bebf2c866",
        "833adbb0bb26f591",
        "b461ccea88923ecf",
        "d060050a67932745",
        "51999a41946964f0",
        "3170dedf5c981d24",
        "c675f8c360985cad",
        "eaeeeed86a70ae52",
        "d4167ad3c929551a",
        "164d548adf422d15",
        "a268c4c3d0d665b7",
        "a86924e57593f7f0",
        "b9fb69b02f53321a",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "ffe3801f5d458fec",
      "date": 1448812131562
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "9ae517cec81c5088",
        "b59fa78713ab12a5",
        "93107a44b5c37bfc",
        "9a06493dcde80bf5",
        "ce299d7a18e1a77e",
        "bdf5f227c4a355aa",
        "8bbaf98bebf2c866",
        "833adbb0bb26f591",
        "ffe3801f5d458fec",
        "b461ccea88923ecf",
        "d060050a67932745",
        "51999a41946964f0",
        "3170dedf5c981d24",
        "c675f8c360985cad",
        "eaeeeed86a70ae52",
        "d4167ad3c929551a",
        "164d548adf422d15",
        "a268c4c3d0d665b7",
        "a86924e57593f7f0",
        "b9fb69b02f53321a",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "ffe3801f5d458fec",
      "date": 1448812154186
    },
    {
      "type": "remove",
      "id": "833adbb0bb26f591",
      "date": 1448812158389
    },
    {
      "type": "edit",
      "id": "ffe3801f5d458fec",
      "item": {
        "type": "code",
        "id": "ffe3801f5d458fec",
        "text": "chmod +x WebServer"
      },
      "date": 1448812161503
    },
    {
      "type": "remove",
      "id": "3170dedf5c981d24",
      "date": 1448812173349
    },
    {
      "type": "edit",
      "id": "51999a41946964f0",
      "item": {
        "type": "code",
        "id": "51999a41946964f0",
        "text": "mkdir www"
      },
      "date": 1448812177959
    },
    {
      "type": "edit",
      "id": "d4167ad3c929551a",
      "item": {
        "type": "paragraph",
        "id": "d4167ad3c929551a",
        "text": "\n"
      },
      "date": 1448812188334
    },
    {
      "type": "edit",
      "id": "eaeeeed86a70ae52",
      "item": {
        "type": "code",
        "id": "eaeeeed86a70ae52",
        "text": "./WebServer"
      },
      "date": 1448812191439
    },
    {
      "item": {
        "type": "factory",
        "id": "f8ca4f935977b11e"
      },
      "id": "f8ca4f935977b11e",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448812195443
    },
    {
      "type": "move",
      "order": [
        "1a9b19fe6c6efa78",
        "9eef8793d419dd2c",
        "5fc357e55ae6b5a3",
        "957c1fd7dea7746a",
        "537f33528f2998b5",
        "170802553acf36e6",
        "0426d68071b8bf30",
        "0f0ed34843796137",
        "f23f13dccaa337ef",
        "6656bca682a6b4af",
        "9ae517cec81c5088",
        "b59fa78713ab12a5",
        "93107a44b5c37bfc",
        "9a06493dcde80bf5",
        "ce299d7a18e1a77e",
        "bdf5f227c4a355aa",
        "8bbaf98bebf2c866",
        "ffe3801f5d458fec",
        "b461ccea88923ecf",
        "d060050a67932745",
        "51999a41946964f0",
        "c675f8c360985cad",
        "eaeeeed86a70ae52",
        "d4167ad3c929551a",
        "164d548adf422d15",
        "a268c4c3d0d665b7",
        "f8ca4f935977b11e",
        "a86924e57593f7f0",
        "b9fb69b02f53321a",
        "86eef3f9bc9abd67",
        "945ff8bc3d10f0f2"
      ],
      "id": "f8ca4f935977b11e",
      "date": 1448812197834
    },
    {
      "type": "edit",
      "id": "a268c4c3d0d665b7",
      "item": {
        "type": "paragraph",
        "id": "a268c4c3d0d665b7",
        "text": "\n"
      },
      "date": 1448812203703
    },
    {
      "type": "edit",
      "id": "f8ca4f935977b11e",
      "item": {
        "type": "code",
        "id": "f8ca4f935977b11e",
        "text": "node WebServer"
      },
      "date": 1448812208167
    },
    {
      "type": "edit",
      "id": "a86924e57593f7f0",
      "item": {
        "type": "paragraph",
        "id": "a86924e57593f7f0",
        "text": "\n"
      },
      "date": 1448812221703
    },
    {
      "item": {
        "type": "factory",
        "id": "b1f8270561449471"
      },
      "id": "b1f8270561449471",
      "type": "add",
      "after": "945ff8bc3d10f0f2",
      "date": 1448813935648
    },
    {
      "type": "edit",
      "id": "b1f8270561449471",
      "item": {
        "type": "reference",
        "id": "b1f8270561449471",
        "site": "future.fedwiki.org",
        "slug": "block-server",
        "title": "Block Server",
        "text": "Block Server or BlockServer is a term that I am using for an HTTP server which interacts with the [[Blockchain]] and / or decentralised protocols such as [[IPFS]]."
      },
      "date": 1448813947018
    },
    {
      "type": "fork",
      "site": "livecode.viral.academy",
      "date": 1448964399422
    }
  ],
  "story": [
    {
      "id": "1a9b19fe6c6efa78",
      "text": "The aim of this project is to create a [[LiveCode Server]] that interoperates efficiently with [[NodeJS]].",
      "type": "paragraph"
    },
    {
      "type": "paragraph",
      "id": "9eef8793d419dd2c",
      "text": "Based on conversations with [[Richard Gaskin]] and [[Andrew Kluthe]]:"
    },
    {
      "type": "html",
      "id": "5fc357e55ae6b5a3",
      "text": "<UL><LI>\n  [[Asynchronous Livecode Messaging]]</LI><LI>\n  [[Why Closures Are Useful]]</LI><LI>\n  [[Dynamic Callbacks in Livecode]]\n</UL</LI>"
    },
    {
      "type": "markdown",
      "id": "957c1fd7dea7746a",
      "text": "# NodeJS and LiveCode"
    },
    {
      "type": "paragraph",
      "id": "537f33528f2998b5",
      "text": "If you prefer light-weight server + the expressive power of [[LiveScript]], you may build your own server using [[Node.js]] and [[Express.js]] together with the SimpleCGI \"Middleware\", which forwards CGI requests to [[LiveCode Server]] - [http://www.rozek.mobi/LiveCode_Server/Node.js/index_scr_en.html rozek.mobi]"
    },
    {
      "type": "markdown",
      "id": "170802553acf36e6",
      "text": "* A simple Server for \"LiveCode Server\"\n* Server Installation\n* A few Sample Scripts\n* A simple Server for \"LiveCode Server\"\n\n"
    },
    {
      "type": "markdown",
      "id": "0426d68071b8bf30",
      "text": "# Server Installation"
    },
    {
      "type": "markdown",
      "id": "0f0ed34843796137",
      "text": "If not already done, download an installer for your operating system from nodejs.org and install [[Node.js]] on your computer - [http://www.nodejs.org nodejs.org];\n* open a terminal window;\n* create a directory for your HTTP server\n"
    },
    {
      "type": "code",
      "id": "f23f13dccaa337ef",
      "text": "mkdir WebServer"
    },
    {
      "type": "paragraph",
      "id": "6656bca682a6b4af",
      "text": "change to that directory"
    },
    {
      "type": "code",
      "id": "9ae517cec81c5088",
      "text": "cd WebServer\n"
    },
    {
      "type": "paragraph",
      "id": "b59fa78713ab12a5",
      "text": "install Express.js"
    },
    {
      "type": "code",
      "id": "93107a44b5c37bfc",
      "text": "npm install express"
    },
    {
      "type": "paragraph",
      "id": "9a06493dcde80bf5",
      "text": " install SimpleCGI"
    },
    {
      "type": "code",
      "id": "ce299d7a18e1a77e",
      "text": "npm install simplecgi"
    },
    {
      "type": "paragraph",
      "id": "bdf5f227c4a355aa",
      "text": "open a text editor and create a file called WebServer in the current directory. The content of this file is the script shown above - if necessary with any changes you want"
    },
    {
      "type": "paragraph",
      "id": "8bbaf98bebf2c866",
      "text": "users of Mac OS X or Linux should now mark the script as executable"
    },
    {
      "type": "code",
      "id": "ffe3801f5d458fec",
      "text": "chmod +x WebServer"
    },
    {
      "type": "paragraph",
      "id": "b461ccea88923ecf",
      "text": "(Windows users should skip this step)\n \n"
    },
    {
      "type": "paragraph",
      "id": "d060050a67932745",
      "text": "create a subdirectory for the files the WebServer should deliver:\n \n"
    },
    {
      "type": "code",
      "id": "51999a41946964f0",
      "text": "mkdir www"
    },
    {
      "type": "paragraph",
      "id": "c675f8c360985cad",
      "text": "That's all: users of Mac OS X or Linux may run the script file directly:\n\n"
    },
    {
      "type": "code",
      "id": "eaeeeed86a70ae52",
      "text": "./WebServer"
    },
    {
      "type": "paragraph",
      "id": "d4167ad3c929551a",
      "text": "\n"
    },
    {
      "type": "paragraph",
      "id": "164d548adf422d15",
      "text": "Windows users should enter\n\n"
    },
    {
      "type": "paragraph",
      "id": "a268c4c3d0d665b7",
      "text": "\n"
    },
    {
      "type": "code",
      "id": "f8ca4f935977b11e",
      "text": "node WebServer"
    },
    {
      "type": "paragraph",
      "id": "a86924e57593f7f0",
      "text": "\n"
    },
    {
      "type": "paragraph",
      "id": "b9fb69b02f53321a",
      "text": "The newly started server is now waiting for requests on port 8080 - any errors are output to the still open terminal window."
    },
    {
      "type": "reference",
      "id": "86eef3f9bc9abd67",
      "site": "livecode.viral.academy",
      "slug": "livecode-http-server",
      "title": "LiveCode HTTP Server",
      "text": "Below [[Todd Geist]] shows a simple [[LiveCode HTTP Server]] modified to add a [[Router]] and [[Middleware]]. The architecture borrows from simple light servers like [[Ruby Sinatra]] or [[Node Express]]."
    },
    {
      "type": "reference",
      "id": "945ff8bc3d10f0f2",
      "site": "livecode.viral.academy",
      "slug": "livecode-server-on-digitalocean",
      "title": "Livecode Server on DigitalOcean",
      "text": "The following instructions from Mike Bonner describe how to get [[Livecode Server]] running on [[DigitalOcean]]:"
    },
    {
      "type": "reference",
      "id": "b1f8270561449471",
      "site": "future.fedwiki.org",
      "slug": "block-server",
      "title": "Block Server",
      "text": "Block Server or BlockServer is a term that I am using for an HTTP server which interacts with the [[Blockchain]] and / or decentralised protocols such as [[IPFS]]."
    }
  ],
  "title": "LiveNode Server"
}