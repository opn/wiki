{
  "title": "Web Services",
  "story": [
    {
      "id": "c3980d92cf105ddd",
      "text": "Livecode is an easy to learn, open source, high level language for creating programs and mobile apps for a variety of platforms including Windows, iOS and Android.",
      "type": "paragraph"
    },
    {
      "type": "html",
      "text": "<b>Web service:\tan Internet-accessible software component that is:</b>",
      "id": "400dc82557409a214fe056375d2639d7"
    },
    {
      "type": "markdown",
      "id": "329958a65706a35b",
      "text": "* self-contained\n* self-describing \"see [[WSDL For Rest]]\"\n* queryable\n* dynamically composable\n* platform, language, and protocol interoperability\n* run-time configurable (ie quality of service)\n* use distributed registries (further web services)"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "\nDiscuss the attributes here: [[Web Services Attributes]]",
      "id": "18d6f83741e098f610dea2609d8ef5f5"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "See a nice picture from [http://www.service-architecture.com/index.html www.service-architecture.com]",
      "id": "fa527a61ada81f0d06dfa81d9660e861"
    },
    {
      "type": "image",
      "url": "http://www.service-architecture.com/images/architecture.jpg",
      "text": "www.service-architecture.com",
      "id": "e51681f7f298d83d9e37833dad4c6792"
    },
    {
      "type": "html",
      "text": "\n",
      "id": "f14cae409ec62ac969d0c756dda1b0f3"
    },
    {
      "type": "html",
      "text": "<i>Comparisons with a [[Soa Implementation Framework]] inspired implementation?</i>",
      "id": "74cf5b060d608ca108ff30b73317853a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "In summary, Web services are effectively another attempt at solving the \"holy grail\" of [[Distributed Computing]]: a platform that will finally enable ubiquitous distributed components and composable systems to be written by average developers. Prior attempts have met with mixed results (some of which are Sun RPC, DCE RPC, DCOM, CORBA, and RMI).",
      "id": "1002b51408f52aa5d2e6125b4ecbc15f"
    },
    {
      "type": "code",
      "text": "  \"Many have tried.\"\n  \"They tried and failed?\"\n  \"They tried and died.\"\n    -- Reverend Mother Helen Moah'im, ''Dune''",
      "id": "80477287f0b7b887d020b2743f5bcced"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>[[Web Services]] under the influence of the dreaded Xml </b>",
      "id": "2a53273928d5e9109ae554ae60a68921"
    },
    {
      "type": "html",
      "text": "\n[[Web Services]] are different in that the common data representation is XML, or more specifically, the [[Xml Info Set]]. XML provides a <b>standardized information set</b> for specifying messages between software services, one that is independent of processing model. The text-based extensible markup language is the 'least common denominator' encoding method [[Xml Info Set]].",
      "id": "0c2689a01a8b61bf54baaefb9c887599"
    },
    {
      "type": "html",
      "text": "\nThe effect of XML is to enable what is effectively a <b>semantic data stream</b> for all messages. SDS is a concept coined by [[Oliver Sims]], but one that has a heritage in the [[Lisp Language]] (read [[Structure And Interpretation Of Computer Programs]]). SDS implies carrying the structure of the message (its metadata) along <i>with</i> the message, as opposed to completely relying on extrinsic definition of interface or data structure.",
      "id": "16ce17c714346a632a3a4f60be592235"
    },
    {
      "type": "html",
      "text": "\nCarrying along this \"metadata\" is crucial to allow for <i>loose coupling</i>, <i>dynamic binding</i> and <i>run-time interoperability</i>.\tThis is the <b>key difference</b> between the [[Web Services]] approach and previous approaches, which relied heavily on <i>immutable interfaces</i>, <i>early binding</i>, and/or <i>high coupling</i> to a particular platform or object model. ",
      "id": "f4bd87a69953853529e669eb1812715b"
    },
    {
      "type": "html",
      "text": "\nThe other key aspect to [[Web Services]] is the <b>simplicity</b> of its architecture compared to former models. [[Xml Schema]] throws a fair amount of complexity into the mix, so this simplicity isn't guaranteed to last. In the short term, the higher bandwidth consumption of XML versus binary data representations is the primary trade-off made to achieve this simplicity. In the long term, binary encodings of the [[Xml Info Set]] will enable high-performance [[Web Services]].",
      "id": "1e038daff143b348c836c29a11fbf122"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>The current specifications to enable Web services are:</b>",
      "id": "b2a42913320b30c38e29480a8be63f18"
    },
    {
      "type": "html",
      "text": " XML Schemas [http://www.w3.org/TR/xmlschema-0/ www.w3.org]",
      "id": "4d3a53a31c29d33b85570d9a09d7c9b9"
    },
    {
      "type": "html",
      "text": " UDDI (Universal Discovery, Description, and Integration) [http://www.uddi.org www.uddi.org]",
      "id": "875001377bd53e612352e84fb88df1e9"
    },
    {
      "type": "html",
      "text": " WSDL ( [[Web Services Description Language]]) [http://www.ibm.com/developerworks/library/w-wsdl.html www.ibm.com]",
      "id": "c34efafcd02554ded0cb88fd9a8a4811"
    },
    {
      "type": "html",
      "text": " see also [[Owl For Services]]",
      "id": "73c1a3c1949e0bff6505e7f90cec3aeb"
    },
    {
      "type": "html",
      "text": " SOAP (The [[Simple Object Access Protocol]], 1.1) [http://www.w3.org/TR/SOAP/ www.w3.org]",
      "id": "d41a55eef421c313919eba2f4561bdda"
    },
    {
      "type": "html",
      "text": " XML-RPC ([[Xml Rpc]]) - the lightweight alternative to (or offspring from) SOAP",
      "id": "218b7b04b825df1351544c7422a68579"
    },
    {
      "type": "html",
      "text": " ebXML [http://www.ebXML.org www.ebXML.org] (which leverages SOAP - [http://www.ebxml.org/news/pr_20010222.htm www.ebxml.org])",
      "id": "b97d330f0eda652a5a14487d14fb2755"
    },
    {
      "type": "html",
      "text": "<b> <i>I do not know much about the subject matter. However more than one article has stated that there are only three common implementations</i> </b>",
      "id": "3fb97c352bac8d9e14e50892d783f429"
    },
    {
      "type": "html",
      "text": " <b> <i>[[Simple Object Access Protocol]] (SOAP) - most widely known. Think of it as Windows for messaging</i> </b>",
      "id": "a40895e1e6424ced1804d2464941474a"
    },
    {
      "type": "html",
      "text": " <b> <i>[[Xml Rpc]] (XML-RPC) - performance is its strength. Think of it as Linux for messaging</i> </b>",
      "id": "668dcb38c10d3d28c9a4ae807b0102e3"
    },
    {
      "type": "html",
      "text": " <b> <i>[[Representational State Transfer]] (REST) - most widely used if available. Think of it as Mac for messaging</i> </b>",
      "id": "9e11fbed65447ce56c9d04b4b6cb8608"
    },
    {
      "type": "html",
      "text": "<b> <i>see for example: [http://www.hebig.org/blogs/archives/main/000046.php www.hebig.org]</i> </b>",
      "id": "f259c6ebf266d7f54d54cd0780b268b1"
    },
    {
      "type": "html",
      "text": "<i> <b>Assuming what I have here is ok, can someone in the know merge this with the above?</b> </i>",
      "id": "577f782ba4c924401d51f4e1f223c447"
    },
    {
      "type": "html",
      "text": " See also [[Kiss Web Services]] -- [[David Liu]] ",
      "id": "976780fa13da460af3f9109023a3d960"
    },
    {
      "type": "html",
      "text": "<i>SOAP implies XML Schemas or Relax-NG, WSDL, and UDDI. There are also the whole boatload of WS-* specifications coming from IBM, Microsoft, and BEA. ebXML is another kind of web service, though more niche. Those articles you've read are talking in broad strokes.</i>",
      "id": "f97bd8144bedcb4c2dc3b7b2a2ae8201"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "Check out the list of organizations and consortia involved in [[Web Services]] at [http://www.service-architecture.com/web-services/articles/organizations.html www.service-architecture.com]",
      "id": "5f6bd614e39666cb74f910a24d1984fb"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>[[Security Management]] concerns</b>",
      "id": "069954eb8192d7e844d49cb86007a516"
    },
    {
      "type": "html",
      "text": "\n[[Zap Think]] analyst said \"XML and Web services cut through existing firewalls and email-based spam and virus filters like a hot knife through butter\"",
      "id": "da96986609a1c4cf4013ae439abd7a06"
    },
    {
      "type": "html",
      "text": " more at \"XML viruses threaten Web services security\" article at [http://searchwebservices.techtarget.com/originalContent/0,289142,sid26_gci1083614,00.html searchwebservices.techtarget.com]",
      "id": "49ed9973cc2ec7c890327862a884ae03"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>[[Web Services]] for the <i>REST</i> of us </b>",
      "id": "49d11758584ac7c9b7a70d8fc2f533a3"
    },
    {
      "type": "html",
      "text": "\nThe most common transport protocol used will be HTTP, since it is ubiquitous and \"firewall safe\". Of course, the [[Real World]] will require differing levels of service or security, hence the perceived need for protocol independence.",
      "id": "0feb02c7a535794bd7e5711204b10c83"
    },
    {
      "type": "html",
      "text": "\nAn emerging debate about the shape of Web services is whether all these extra XML protocols and interfaces provide enough value in exchange for their complexity. The [[Rest Architectural Style]] is an alternative way of building Web services. Their premise is that HTTP in and of itself has the set of \"verbs\" (GET, POST, etc) we need to implement Web services. All we need new are lots of \"nouns\" (URIs). ",
      "id": "ec9e7f6228a2a3b00b3cc16fdf4f5761"
    },
    {
      "type": "html",
      "text": "\nA lot of big guys are making noise about Web services; currently the grassroots are doing the work of implementing real-world services.",
      "id": "0e60ef82b97e0ec13405b24e0457f643"
    },
    {
      "type": "html",
      "text": "\nThe main competing implementations of XML [[Web Services]] engines are:",
      "id": "861fcd7ce0813bb3987327f5392ab9cd"
    },
    {
      "type": "html",
      "text": " J2EE's JAX-packs: JAXR, JAXB, JAX-RPC, JAXM, JAXP. [http://java.sun.com/xml/ java.sun.com]",
      "id": "8038cae93aa7a5926fe4b07752ea3949"
    },
    {
      "type": "html",
      "text": " Microsoft [[Dot Net Remoting]] / [[Asp Dot Net]] Web Services [http://msdn.microsoft.com/ msdn.microsoft.com]",
      "id": "44a3c4438eca3947ce1da582005af02c"
    },
    {
      "type": "html",
      "text": " [[Apache Axis]] (Java) [http://xml.apache.org/axis/ xml.apache.org]",
      "id": "edd8425c871c7ec058e1d65e14f9ec3e"
    },
    {
      "type": "html",
      "text": " Open source packages for other languages are emerging",
      "id": "38d0540668c46d620b177c3c6f11511f"
    },
    {
      "type": "html",
      "text": "\nThe competing implementations of tools, frameworks, and systems that support [[Web Services]] are:",
      "id": "9a60c38a094c8d7fb94f1b1d0d17b04d"
    },
    {
      "type": "html",
      "text": " [[Sun Microsystems]]' [[Java Enterprise System]] (JES) - [http://wwws.sun.com/software/javaenterprisesystem/ wwws.sun.com]",
      "id": "e2e1379bc0a74662b79ffe13d9bce437"
    },
    {
      "type": "html",
      "text": " Microsoft [[Visual Studio Dot Net]] - [http://msdn.microsoft.com/vstudio/ msdn.microsoft.com]",
      "id": "41ea4d1dcc33a8a05406edc8e3e8c755"
    },
    {
      "type": "html",
      "text": " IBM's [[Web Sphere]] Architecture (which uses Apache SOAP)",
      "id": "d5c44849b742111219d4238446a542c4"
    },
    {
      "type": "html",
      "text": " [http://www-3.ibm.com/software/webservers/appserv/appserv_v5.html www-3.ibm.com]",
      "id": "f7684983e60db38296b8530190f419f1"
    },
    {
      "type": "html",
      "text": " [http://www-3.ibm.com/software/ad/studioappdev/ www-3.ibm.com]",
      "id": "78f689d2e78219868e33a1ee7e631c06"
    },
    {
      "type": "html",
      "text": " Oracle's Dynamic Services - [http://technet.oracle.com/tech/webservices/content.html technet.oracle.com]",
      "id": "1fe89d98e3d0f3d715c3e31fc3fbe89d"
    },
    {
      "type": "html",
      "text": " BEA's [[Weblogic Workshop]] - [http://bea.com/products/weblogic/workshop/index.shtml bea.com] ",
      "id": "5c958ebde9f39ef31ae5377729e1bd8e"
    },
    {
      "type": "html",
      "text": " The Mind Electric's GLUE (Java) - [http://www.themindelectric.com/ www.themindelectric.com]",
      "id": "2d083d2330fb8035da0ac6ccfe63479d"
    },
    {
      "type": "html",
      "text": " Systinet - [http://www.systinet.com/ www.systinet.com]",
      "id": "3e7ac9207d9eddf4d188919dfcf73ae9"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>[[Web Services]] without HTTP</b>",
      "id": "efcadc5e25ce84052a6a01a1385162a5"
    },
    {
      "type": "html",
      "text": "\nExamples maybe those transported using [[Message Oriented Middleware]] like [[Big Blue]] MQSeries, or via SMTP. Source: article listed in [[Public Key Infrastructure]] SSL subsection.",
      "id": "baccf1ed9aa96934e0b9872286a19554"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>Examples</b>\n[http://www.eaves.org/google/howcool www.eaves.org]",
      "id": "6bb6ab2d8cffa5048d7865ab2199b991"
    },
    {
      "type": "html",
      "text": "<i>Completely useless (or is it?) application using Google's [[Web Services]] API</i>",
      "id": "6f0ff0e68ea1ebe0e8a0867327143cb6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>[[Quick Questions]]</b>",
      "id": "9ca41f513b1adf4f680d648fef7e31dc"
    },
    {
      "type": "html",
      "text": "<b>Q</b> <i>Looking for a simplge way to wrap [[Big Blue]] functionality into [[Rest Architectural Style]] [[Web Services]] without using [[Soap Protocol]] offered in [[Ci Cs]] 2.2. We have [[Db Two]] version 6</i>",
      "id": "d80fc300212eb792679dc637b19a652b"
    },
    {
      "type": "html",
      "text": "<b>A</b>",
      "id": "31122c38a95741db125978e9e3794f1d"
    },
    {
      "type": "html",
      "text": "<b>Q</b> Any experiences related to [[Web Services Testing]]? -- [[Raghu Havaldar]]",
      "id": "949e82fdea8b5b6c758cc4fc8be1a199"
    },
    {
      "type": "html",
      "text": "<b>A</b>",
      "id": "31122c38a95741db125978e9e3794f1d"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>Interoperability aspects</b>",
      "id": "0a9a2f428bfe3af4b52622676d3c05d2"
    },
    {
      "type": "html",
      "text": "\n[[Business Process Execution Language]]forWebServices (BPEL4WS or just BPEL) is meant to be an execution environment independent mechanism for long running conversions between organizations. However there are efforts to have language specific extensions (e.g. BPELJ) that diminishs interoperability. See [http://www.theregister.co.uk/2004/03/24/ibm_moots_bpeljava_fusion/ www.theregister.co.uk]",
      "id": "0ba968d5437f04f9f824b4edef42690b"
    },
    {
      "type": "html",
      "text": "\n[[Universal Business Language]] (UBL) is another [[Extensible Markup Language]] based specification intended to reduce communication barrier between applications through due to semantic variances. See [http://searchwebservices.techtarget.com/originalContent/0,289142,sid26_gci970231,00.html searchwebservices.techtarget.com]",
      "id": "1eef72f2a58a1e14d386753f3cb1aee7"
    },
    {
      "type": "html",
      "text": "\nBoth can be considered to be higher level [[Work Flow]] activities.",
      "id": "9d2c5a47ab2c28c66e049899a339a5c7"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>Learning Resources</b>",
      "id": "0eb73f6bcc3cf7b506786de7ae4b0fa4"
    },
    {
      "type": "html",
      "text": " Oreilly sample chapter shows example of tinkering needed for Perl to communicate with [[Dot Net]]. See [http://www.oreilly.com/catalog/progwebsoap/chapter/ch03.html www.oreilly.com]",
      "id": "6b895f66b1c682a3d564872e8bc60528"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>[[Web Services]] [[User Stories]]</b>",
      "id": "a0fb009d45b9f5daa930946bc0cffbc9"
    },
    {
      "type": "html",
      "text": " <i>Lessons from companies that have embraced [[Service Oriented Architecture]]</i> [http://www.computerworld.com/printthis/2004/0,4814,95207,00.html www.computerworld.com]",
      "id": "a7cf810cdd6bd6a49a143d7088c1df24"
    },
    {
      "type": "html",
      "text": " <i>standardisation efforts for [[Web Services]]</i> [http://searchwebservices.techtarget.com/tip/1,289483,sid26_gci965479,00.html searchwebservices.techtarget.com] ",
      "id": "6f765d6ce00ddfe2f9fe93af492183d8"
    },
    {
      "type": "html",
      "text": " <i>Users getting confused by different standards bodies </i> [http://www.zdnet.com.au/insight/software/print.htm?TYPE=story&AT=39151273-39023769t-10000102c www.zdnet.com.au]",
      "id": "c3daf6c43804c48b99e1fc6e4793b675"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "(Dru here - and yes, Web Services will die too. This technology completely ignores certain _unwritten_truths_ about internet technologies, and will end up being a huge, performance sucking monster. Lets see how long this stays here.)",
      "id": "25ff320e850741c8f5a784ae0a487122"
    },
    {
      "type": "html",
      "text": "<i>All technologies die. The question is whether they provided value and paid the bills while they were alive. Thus far, WS are doing okay..</i> -- [[Stu Charlton]]",
      "id": "34b4de12251bf6f589cc7d60e3b85f8f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": " What use is a dynamic schema if the receiving party does not know about a change?",
      "id": "3a95eeb10d4ef21481c6b94e966004d5"
    },
    {
      "type": "html",
      "text": "\nThe whole point is that new extensions to the schema may be applicable to some receivers, but not others. That I can ignore those extensions the benefit. This is actually a distributed systems application of one of [[Uncle Bob]]'s principles - the [[Interface Segregation Principle]]. You pay attention to the smallest amount XML that matters to you. Prior approaches were \"strong typed first\", and only had secondary facilities for this kind of flexibility - Corba DII, COM Automation, etc. -- [[Stu Charlton]]",
      "id": "b7b58b03dcca20d6c9247c1f908ff225"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": " Anyone used a non HTTP based transport? Why and did it work well? -- dl",
      "id": "36351893fd559c302cede05f9acdae65"
    },
    {
      "type": "html",
      "text": "\nI've used [[Web Logic]] JMS, MQSeries, and plain-old TCP. HTTP really isn't necessary sometimes, and if you're doing asynchronous callbacks to a client, it doesn't make sense for that client to implement an HTTP server. Anyway, It works fine. Just have to be aware of what functionality of HTTP you might have assumed you were getting for free - SSL+HTTP authentication, for example. -- [[Stu Charlton]]",
      "id": "0a52ff7c076d88531763e11e41115634"
    },
    {
      "type": "html",
      "text": "\nIncidentally, asynchronous message patterns are a weakness of current web service specifications (WSDL) which assume that everything is a query-response or invoke-acknowledge one-shot interaction, rather than a two-way conversation. Agent-based systems have dealt with more complex conversation protocols for a long time now. -- [[David Allsopp]]",
      "id": "792588da13a95489ad1376d7559024e7"
    },
    {
      "type": "html",
      "text": "\nI think this is partly because of an unwritten assumption that web services are stateless. This obviously isn't always the case. [[Web Logic]] 9 (and Workshop 8.1) introduced some WSDL extensions to indicate conversation-based message exchange patterns (start/continue/finish). I believe the [[Web Logic]] 9 ones are based on [[Ws Addressing]] so are more standards-base (though the 8.1 conversation header has pretty easy to hookup with non-[[Web Logic]] services). -- [[Stu Charlton]]",
      "id": "5b68120f88693cff5af5a4e39543813f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "A [[Web Services Road Map]] has been created where you can find topics about [[Web Services]] organized by categories.",
      "id": "74c101a238d930b54bb3d706bd789dff"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "<b>Reading material</b>",
      "id": "ad95c2e983569a5088f2302ffe19b0d2"
    },
    {
      "type": "html",
      "text": " <i>WhosWHO in [[Web Services]] 2002</i> [http://www.pcmag.com/print_article/0,1761,a=27538,00.asp www.pcmag.com]",
      "id": "72343c90632590a21b24e87b4ad8fc0c"
    },
    {
      "type": "html",
      "text": " <i>[[Clay Shirky]] to spoil it again (share context problem not solved)</i> at [http://webservices.xml.com/lpt/a/ws/2001/10/03/webservices.html webservices.xml.com]",
      "id": "5c1ded394ad29445c59b534b35aeca0c"
    },
    {
      "type": "html",
      "text": " <i>[[Web Services]] as realization of SOA</i> at [http://searchwebservices.techtarget.com/searchWebServices/downloads/Weer_CH03.pdf searchwebservices.techtarget.com]",
      "id": "1fb5d8624afde9e1947313df302d8111"
    },
    {
      "type": "html",
      "text": "<i>Old (3 years or more) material can still be interesting</i>",
      "id": "84561f8b22a821e03d5ba7e243229bcd"
    },
    {
      "type": "html",
      "text": "\n2002 \"Web Services Enters a Critical Phase\" at [http://www.entmag.com/news/print.asp?EditorialsID=5394 www.entmag.com]",
      "id": "9aa23b164ecb61e9998582c6cb7d5bb3"
    },
    {
      "type": "html",
      "text": " Will [[Service Oriented Architecture]] be much the same three years hence?",
      "id": "7b7faaf27d351e525b83618fd5b00860"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "See also: [[Web Services Discussion]], [[Web Services Description Language]] (WSDL), [[Service Oriented Architecture]], [[What Is Soa]]",
      "id": "b3fd61922a9d48b8bb50a2a71d9ba8ba"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0c04333de1f07d4a6f980b917f95bfd0"
    },
    {
      "type": "html",
      "text": "[[Category Xml]] [[Category Messaging Services]]",
      "id": "7dd8ec31bd3e37b56825d37c9d167957"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?WebServices c2.com]",
      "id": "8eb913aa661f57dd9c16abdaf02cece9"
    }
  ],
  "journal": [
    {
      "date": 1161116441000,
      "id": "19a51e64c961aac1cbd679faa37a8a5d",
      "type": "create",
      "item": {
        "title": "Web Services",
        "story": [
          {
            "type": "html",
            "text": "<b>Web service:\tan Internet-accessible software component that is:</b>",
            "id": "400dc82557409a214fe056375d2639d7"
          },
          {
            "type": "html",
            "text": " self-contained",
            "id": "7a38c096af406bc29b52e7506a625614"
          },
          {
            "type": "html",
            "text": " self-describing \"see [[Wsdl For Rest]]\"",
            "id": "455410b4bd609452580e751c5ab43f91"
          },
          {
            "type": "html",
            "text": " queryable",
            "id": "1a38622d6cf05020b6b32c91b595a039"
          },
          {
            "type": "html",
            "text": " dynamically composable",
            "id": "22fb873984fb9812fcce7dafd2dca39b"
          },
          {
            "type": "html",
            "text": " universally interoperable (platform, language, and protocol)",
            "id": "195d3505aa78ad416f97f009cee08794"
          },
          {
            "type": "html",
            "text": " potentially configurable at run-time (in quality of service and security, for instance)",
            "id": "7ecd58634d8ac8fd58967ab4f5e2b3e1"
          },
          {
            "type": "html",
            "text": " bound, published, and located through distributed registries (which are themselves services)",
            "id": "1e921bdc355e726af061aefa6fd36d16"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "For the benefit of novices like myself, could someone please explain the above attributes, preferably with an example? In particular, 'dynamically composable'.",
            "id": "b5f6e5d5aafe977ec767dacab9fb7944"
          },
          {
            "type": "html",
            "text": "\nDiscuss the attributes here: [[Web Services Attributes]]",
            "id": "18d6f83741e098f610dea2609d8ef5f5"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "See a nice picture from [http://www.service-architecture.com/index.html www.service-architecture.com]",
            "id": "fa527a61ada81f0d06dfa81d9660e861"
          },
          {
            "type": "image",
            "url": "http://www.service-architecture.com/images/architecture.jpg",
            "text": "www.service-architecture.com",
            "id": "e51681f7f298d83d9e37833dad4c6792"
          },
          {
            "type": "html",
            "text": "\n",
            "id": "f14cae409ec62ac969d0c756dda1b0f3"
          },
          {
            "type": "html",
            "text": "<i>Comparisons with a [[Soa Implementation Framework]] inspired implementation?</i>",
            "id": "74cf5b060d608ca108ff30b73317853a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "In summary, Web services are effectively another attempt at solving the \"holy grail\" of [[Distributed Computing]]: a platform that will finally enable ubiquitous distributed components and composable systems to be written by average developers. Prior attempts have met with mixed results (some of which are Sun RPC, DCE RPC, DCOM, CORBA, and RMI).",
            "id": "1002b51408f52aa5d2e6125b4ecbc15f"
          },
          {
            "type": "code",
            "text": "  \"Many have tried.\"\n  \"They tried and failed?\"\n  \"They tried and died.\"\n    -- Reverend Mother Helen Moah'im, ''Dune''",
            "id": "80477287f0b7b887d020b2743f5bcced"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>[[Web Services]] under the influence of the dreaded Xml </b>",
            "id": "2a53273928d5e9109ae554ae60a68921"
          },
          {
            "type": "html",
            "text": "\n[[Web Services]] are different in that the common data representation is XML, or more specifically, the [[Xml Info Set]]. XML provides a <b>standardized information set</b> for specifying messages between software services, one that is independent of processing model. The text-based extensible markup language is the 'least common denominator' encoding method [[Xml Info Set]].",
            "id": "0c2689a01a8b61bf54baaefb9c887599"
          },
          {
            "type": "html",
            "text": "\nThe effect of XML is to enable what is effectively a <b>semantic data stream</b> for all messages. SDS is a concept coined by [[Oliver Sims]], but one that has a heritage in the [[Lisp Language]] (read [[Structure And Interpretation Of Computer Programs]]). SDS implies carrying the structure of the message (its metadata) along <i>with</i> the message, as opposed to completely relying on extrinsic definition of interface or data structure.",
            "id": "16ce17c714346a632a3a4f60be592235"
          },
          {
            "type": "html",
            "text": "\nCarrying along this \"metadata\" is crucial to allow for <i>loose coupling</i>, <i>dynamic binding</i> and <i>run-time interoperability</i>.\tThis is the <b>key difference</b> between the [[Web Services]] approach and previous approaches, which relied heavily on <i>immutable interfaces</i>, <i>early binding</i>, and/or <i>high coupling</i> to a particular platform or object model. ",
            "id": "f4bd87a69953853529e669eb1812715b"
          },
          {
            "type": "html",
            "text": "\nThe other key aspect to [[Web Services]] is the <b>simplicity</b> of its architecture compared to former models. [[Xml Schema]] throws a fair amount of complexity into the mix, so this simplicity isn't guaranteed to last. In the short term, the higher bandwidth consumption of XML versus binary data representations is the primary trade-off made to achieve this simplicity. In the long term, binary encodings of the [[Xml Info Set]] will enable high-performance [[Web Services]].",
            "id": "1e038daff143b348c836c29a11fbf122"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>The current specifications to enable Web services are:</b>",
            "id": "b2a42913320b30c38e29480a8be63f18"
          },
          {
            "type": "html",
            "text": " XML Schemas [http://www.w3.org/TR/xmlschema-0/ www.w3.org]",
            "id": "4d3a53a31c29d33b85570d9a09d7c9b9"
          },
          {
            "type": "html",
            "text": " UDDI (Universal Discovery, Description, and Integration) [http://www.uddi.org www.uddi.org]",
            "id": "875001377bd53e612352e84fb88df1e9"
          },
          {
            "type": "html",
            "text": " WSDL ( [[Web Services Description Language]]) [http://www.ibm.com/developerworks/library/w-wsdl.html www.ibm.com]",
            "id": "c34efafcd02554ded0cb88fd9a8a4811"
          },
          {
            "type": "html",
            "text": " see also [[Owl For Services]]",
            "id": "73c1a3c1949e0bff6505e7f90cec3aeb"
          },
          {
            "type": "html",
            "text": " SOAP (The [[Simple Object Access Protocol]], 1.1) [http://www.w3.org/TR/SOAP/ www.w3.org]",
            "id": "d41a55eef421c313919eba2f4561bdda"
          },
          {
            "type": "html",
            "text": " XML-RPC ([[Xml Rpc]]) - the lightweight alternative to (or offspring from) SOAP",
            "id": "218b7b04b825df1351544c7422a68579"
          },
          {
            "type": "html",
            "text": " ebXML [http://www.ebXML.org www.ebXML.org] (which leverages SOAP - [http://www.ebxml.org/news/pr_20010222.htm www.ebxml.org])",
            "id": "b97d330f0eda652a5a14487d14fb2755"
          },
          {
            "type": "html",
            "text": "<b> <i>I do not know much about the subject matter. However more than one article has stated that there are only three common implementations</i> </b>",
            "id": "3fb97c352bac8d9e14e50892d783f429"
          },
          {
            "type": "html",
            "text": " <b> <i>[[Simple Object Access Protocol]] (SOAP) - most widely known. Think of it as Windows for messaging</i> </b>",
            "id": "a40895e1e6424ced1804d2464941474a"
          },
          {
            "type": "html",
            "text": " <b> <i>[[Xml Rpc]] (XML-RPC) - performance is its strength. Think of it as Linux for messaging</i> </b>",
            "id": "668dcb38c10d3d28c9a4ae807b0102e3"
          },
          {
            "type": "html",
            "text": " <b> <i>[[Representational State Transfer]] (REST) - most widely used if available. Think of it as Mac for messaging</i> </b>",
            "id": "9e11fbed65447ce56c9d04b4b6cb8608"
          },
          {
            "type": "html",
            "text": "<b> <i>see for example: [http://www.hebig.org/blogs/archives/main/000046.php www.hebig.org]</i> </b>",
            "id": "f259c6ebf266d7f54d54cd0780b268b1"
          },
          {
            "type": "html",
            "text": "<i> <b>Assuming what I have here is ok, can someone in the know merge this with the above?</b> </i>",
            "id": "577f782ba4c924401d51f4e1f223c447"
          },
          {
            "type": "html",
            "text": " See also [[Kiss Web Services]] -- [[David Liu]] ",
            "id": "976780fa13da460af3f9109023a3d960"
          },
          {
            "type": "html",
            "text": "<i>SOAP implies XML Schemas or Relax-NG, WSDL, and UDDI. There are also the whole boatload of WS-* specifications coming from IBM, Microsoft, and BEA. ebXML is another kind of web service, though more niche. Those articles you've read are talking in broad strokes.</i>",
            "id": "f97bd8144bedcb4c2dc3b7b2a2ae8201"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "Check out the list of organizations and consortia involved in [[Web Services]] at [http://www.service-architecture.com/web-services/articles/organizations.html www.service-architecture.com]",
            "id": "5f6bd614e39666cb74f910a24d1984fb"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>[[Security Management]] concerns</b>",
            "id": "069954eb8192d7e844d49cb86007a516"
          },
          {
            "type": "html",
            "text": "\n[[Zap Think]] analyst said \"XML and Web services cut through existing firewalls and email-based spam and virus filters like a hot knife through butter\"",
            "id": "da96986609a1c4cf4013ae439abd7a06"
          },
          {
            "type": "html",
            "text": " more at \"XML viruses threaten Web services security\" article at [http://searchwebservices.techtarget.com/originalContent/0,289142,sid26_gci1083614,00.html searchwebservices.techtarget.com]",
            "id": "49ed9973cc2ec7c890327862a884ae03"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>[[Web Services]] for the <i>REST</i> of us </b>",
            "id": "49d11758584ac7c9b7a70d8fc2f533a3"
          },
          {
            "type": "html",
            "text": "\nThe most common transport protocol used will be HTTP, since it is ubiquitous and \"firewall safe\". Of course, the [[Real World]] will require differing levels of service or security, hence the perceived need for protocol independence.",
            "id": "0feb02c7a535794bd7e5711204b10c83"
          },
          {
            "type": "html",
            "text": "\nAn emerging debate about the shape of Web services is whether all these extra XML protocols and interfaces provide enough value in exchange for their complexity. The [[Rest Architectural Style]] is an alternative way of building Web services. Their premise is that HTTP in and of itself has the set of \"verbs\" (GET, POST, etc) we need to implement Web services. All we need new are lots of \"nouns\" (URIs). ",
            "id": "ec9e7f6228a2a3b00b3cc16fdf4f5761"
          },
          {
            "type": "html",
            "text": "\nA lot of big guys are making noise about Web services; currently the grassroots are doing the work of implementing real-world services.",
            "id": "0e60ef82b97e0ec13405b24e0457f643"
          },
          {
            "type": "html",
            "text": "\nThe main competing implementations of XML [[Web Services]] engines are:",
            "id": "861fcd7ce0813bb3987327f5392ab9cd"
          },
          {
            "type": "html",
            "text": " J2EE's JAX-packs: JAXR, JAXB, JAX-RPC, JAXM, JAXP. [http://java.sun.com/xml/ java.sun.com]",
            "id": "8038cae93aa7a5926fe4b07752ea3949"
          },
          {
            "type": "html",
            "text": " Microsoft [[Dot Net Remoting]] / [[Asp Dot Net]] Web Services [http://msdn.microsoft.com/ msdn.microsoft.com]",
            "id": "44a3c4438eca3947ce1da582005af02c"
          },
          {
            "type": "html",
            "text": " [[Apache Axis]] (Java) [http://xml.apache.org/axis/ xml.apache.org]",
            "id": "edd8425c871c7ec058e1d65e14f9ec3e"
          },
          {
            "type": "html",
            "text": " Open source packages for other languages are emerging",
            "id": "38d0540668c46d620b177c3c6f11511f"
          },
          {
            "type": "html",
            "text": "\nThe competing implementations of tools, frameworks, and systems that support [[Web Services]] are:",
            "id": "9a60c38a094c8d7fb94f1b1d0d17b04d"
          },
          {
            "type": "html",
            "text": " [[Sun Microsystems]]' [[Java Enterprise System]] (JES) - [http://wwws.sun.com/software/javaenterprisesystem/ wwws.sun.com]",
            "id": "e2e1379bc0a74662b79ffe13d9bce437"
          },
          {
            "type": "html",
            "text": " Microsoft [[Visual Studio Dot Net]] - [http://msdn.microsoft.com/vstudio/ msdn.microsoft.com]",
            "id": "41ea4d1dcc33a8a05406edc8e3e8c755"
          },
          {
            "type": "html",
            "text": " IBM's [[Web Sphere]] Architecture (which uses Apache SOAP)",
            "id": "d5c44849b742111219d4238446a542c4"
          },
          {
            "type": "html",
            "text": " [http://www-3.ibm.com/software/webservers/appserv/appserv_v5.html www-3.ibm.com]",
            "id": "f7684983e60db38296b8530190f419f1"
          },
          {
            "type": "html",
            "text": " [http://www-3.ibm.com/software/ad/studioappdev/ www-3.ibm.com]",
            "id": "78f689d2e78219868e33a1ee7e631c06"
          },
          {
            "type": "html",
            "text": " Oracle's Dynamic Services - [http://technet.oracle.com/tech/webservices/content.html technet.oracle.com]",
            "id": "1fe89d98e3d0f3d715c3e31fc3fbe89d"
          },
          {
            "type": "html",
            "text": " BEA's [[Weblogic Workshop]] - [http://bea.com/products/weblogic/workshop/index.shtml bea.com] ",
            "id": "5c958ebde9f39ef31ae5377729e1bd8e"
          },
          {
            "type": "html",
            "text": " The Mind Electric's GLUE (Java) - [http://www.themindelectric.com/ www.themindelectric.com]",
            "id": "2d083d2330fb8035da0ac6ccfe63479d"
          },
          {
            "type": "html",
            "text": " Systinet - [http://www.systinet.com/ www.systinet.com]",
            "id": "3e7ac9207d9eddf4d188919dfcf73ae9"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>[[Web Services]] without HTTP</b>",
            "id": "efcadc5e25ce84052a6a01a1385162a5"
          },
          {
            "type": "html",
            "text": "\nExamples maybe those transported using [[Message Oriented Middleware]] like [[Big Blue]] MQSeries, or via SMTP. Source: article listed in [[Public Key Infrastructure]] SSL subsection.",
            "id": "baccf1ed9aa96934e0b9872286a19554"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>Examples</b>\n[http://www.eaves.org/google/howcool www.eaves.org]",
            "id": "6bb6ab2d8cffa5048d7865ab2199b991"
          },
          {
            "type": "html",
            "text": "<i>Completely useless (or is it?) application using Google's [[Web Services]] API</i>",
            "id": "6f0ff0e68ea1ebe0e8a0867327143cb6"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>[[Quick Questions]]</b>",
            "id": "9ca41f513b1adf4f680d648fef7e31dc"
          },
          {
            "type": "html",
            "text": "<b>Q</b> <i>Looking for a simplge way to wrap [[Big Blue]] functionality into [[Rest Architectural Style]] [[Web Services]] without using [[Soap Protocol]] offered in [[Ci Cs]] 2.2. We have [[Db Two]] version 6</i>",
            "id": "d80fc300212eb792679dc637b19a652b"
          },
          {
            "type": "html",
            "text": "<b>A</b>",
            "id": "31122c38a95741db125978e9e3794f1d"
          },
          {
            "type": "html",
            "text": "<b>Q</b> Any experiences related to [[Web Services Testing]]? -- [[Raghu Havaldar]]",
            "id": "949e82fdea8b5b6c758cc4fc8be1a199"
          },
          {
            "type": "html",
            "text": "<b>A</b>",
            "id": "31122c38a95741db125978e9e3794f1d"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>Interoperability aspects</b>",
            "id": "0a9a2f428bfe3af4b52622676d3c05d2"
          },
          {
            "type": "html",
            "text": "\n[[Business Process Execution Language]]forWebServices (BPEL4WS or just BPEL) is meant to be an execution environment independent mechanism for long running conversions between organizations. However there are efforts to have language specific extensions (e.g. BPELJ) that diminishs interoperability. See [http://www.theregister.co.uk/2004/03/24/ibm_moots_bpeljava_fusion/ www.theregister.co.uk]",
            "id": "0ba968d5437f04f9f824b4edef42690b"
          },
          {
            "type": "html",
            "text": "\n[[Universal Business Language]] (UBL) is another [[Extensible Markup Language]] based specification intended to reduce communication barrier between applications through due to semantic variances. See [http://searchwebservices.techtarget.com/originalContent/0,289142,sid26_gci970231,00.html searchwebservices.techtarget.com]",
            "id": "1eef72f2a58a1e14d386753f3cb1aee7"
          },
          {
            "type": "html",
            "text": "\nBoth can be considered to be higher level [[Work Flow]] activities.",
            "id": "9d2c5a47ab2c28c66e049899a339a5c7"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>Learning Resources</b>",
            "id": "0eb73f6bcc3cf7b506786de7ae4b0fa4"
          },
          {
            "type": "html",
            "text": " Oreilly sample chapter shows example of tinkering needed for Perl to communicate with [[Dot Net]]. See [http://www.oreilly.com/catalog/progwebsoap/chapter/ch03.html www.oreilly.com]",
            "id": "6b895f66b1c682a3d564872e8bc60528"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>[[Web Services]] [[User Stories]]</b>",
            "id": "a0fb009d45b9f5daa930946bc0cffbc9"
          },
          {
            "type": "html",
            "text": " <i>Lessons from companies that have embraced [[Service Oriented Architecture]]</i> [http://www.computerworld.com/printthis/2004/0,4814,95207,00.html www.computerworld.com]",
            "id": "a7cf810cdd6bd6a49a143d7088c1df24"
          },
          {
            "type": "html",
            "text": " <i>standardisation efforts for [[Web Services]]</i> [http://searchwebservices.techtarget.com/tip/1,289483,sid26_gci965479,00.html searchwebservices.techtarget.com] ",
            "id": "6f765d6ce00ddfe2f9fe93af492183d8"
          },
          {
            "type": "html",
            "text": " <i>Users getting confused by different standards bodies </i> [http://www.zdnet.com.au/insight/software/print.htm?TYPE=story&AT=39151273-39023769t-10000102c www.zdnet.com.au]",
            "id": "c3daf6c43804c48b99e1fc6e4793b675"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "(Dru here - and yes, Web Services will die too. This technology completely ignores certain _unwritten_truths_ about internet technologies, and will end up being a huge, performance sucking monster. Lets see how long this stays here.)",
            "id": "25ff320e850741c8f5a784ae0a487122"
          },
          {
            "type": "html",
            "text": "<i>All technologies die. The question is whether they provided value and paid the bills while they were alive. Thus far, WS are doing okay..</i> -- [[Stu Charlton]]",
            "id": "34b4de12251bf6f589cc7d60e3b85f8f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": " What use is a dynamic schema if the receiving party does not know about a change?",
            "id": "3a95eeb10d4ef21481c6b94e966004d5"
          },
          {
            "type": "html",
            "text": "\nThe whole point is that new extensions to the schema may be applicable to some receivers, but not others. That I can ignore those extensions the benefit. This is actually a distributed systems application of one of [[Uncle Bob]]'s principles - the [[Interface Segregation Principle]]. You pay attention to the smallest amount XML that matters to you. Prior approaches were \"strong typed first\", and only had secondary facilities for this kind of flexibility - Corba DII, COM Automation, etc. -- [[Stu Charlton]]",
            "id": "b7b58b03dcca20d6c9247c1f908ff225"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": " Anyone used a non HTTP based transport? Why and did it work well? -- dl",
            "id": "36351893fd559c302cede05f9acdae65"
          },
          {
            "type": "html",
            "text": "\nI've used [[Web Logic]] JMS, MQSeries, and plain-old TCP. HTTP really isn't necessary sometimes, and if you're doing asynchronous callbacks to a client, it doesn't make sense for that client to implement an HTTP server. Anyway, It works fine. Just have to be aware of what functionality of HTTP you might have assumed you were getting for free - SSL+HTTP authentication, for example. -- [[Stu Charlton]]",
            "id": "0a52ff7c076d88531763e11e41115634"
          },
          {
            "type": "html",
            "text": "\nIncidentally, asynchronous message patterns are a weakness of current web service specifications (WSDL) which assume that everything is a query-response or invoke-acknowledge one-shot interaction, rather than a two-way conversation. Agent-based systems have dealt with more complex conversation protocols for a long time now. -- [[David Allsopp]]",
            "id": "792588da13a95489ad1376d7559024e7"
          },
          {
            "type": "html",
            "text": "\nI think this is partly because of an unwritten assumption that web services are stateless. This obviously isn't always the case. [[Web Logic]] 9 (and Workshop 8.1) introduced some WSDL extensions to indicate conversation-based message exchange patterns (start/continue/finish). I believe the [[Web Logic]] 9 ones are based on [[Ws Addressing]] so are more standards-base (though the 8.1 conversation header has pretty easy to hookup with non-[[Web Logic]] services). -- [[Stu Charlton]]",
            "id": "5b68120f88693cff5af5a4e39543813f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "A [[Web Services Road Map]] has been created where you can find topics about [[Web Services]] organized by categories.",
            "id": "74c101a238d930b54bb3d706bd789dff"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "<b>Reading material</b>",
            "id": "ad95c2e983569a5088f2302ffe19b0d2"
          },
          {
            "type": "html",
            "text": " <i>WhosWHO in [[Web Services]] 2002</i> [http://www.pcmag.com/print_article/0,1761,a=27538,00.asp www.pcmag.com]",
            "id": "72343c90632590a21b24e87b4ad8fc0c"
          },
          {
            "type": "html",
            "text": " <i>[[Clay Shirky]] to spoil it again (share context problem not solved)</i> at [http://webservices.xml.com/lpt/a/ws/2001/10/03/webservices.html webservices.xml.com]",
            "id": "5c1ded394ad29445c59b534b35aeca0c"
          },
          {
            "type": "html",
            "text": " <i>[[Web Services]] as realization of SOA</i> at [http://searchwebservices.techtarget.com/searchWebServices/downloads/Weer_CH03.pdf searchwebservices.techtarget.com]",
            "id": "1fb5d8624afde9e1947313df302d8111"
          },
          {
            "type": "html",
            "text": "<i>Old (3 years or more) material can still be interesting</i>",
            "id": "84561f8b22a821e03d5ba7e243229bcd"
          },
          {
            "type": "html",
            "text": "\n2002 \"Web Services Enters a Critical Phase\" at [http://www.entmag.com/news/print.asp?EditorialsID=5394 www.entmag.com]",
            "id": "9aa23b164ecb61e9998582c6cb7d5bb3"
          },
          {
            "type": "html",
            "text": " Will [[Service Oriented Architecture]] be much the same three years hence?",
            "id": "7b7faaf27d351e525b83618fd5b00860"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "See also: [[Web Services Discussion]], [[Web Services Description Language]] (WSDL), [[Service Oriented Architecture]], [[What Is Soa]]",
            "id": "b3fd61922a9d48b8bb50a2a71d9ba8ba"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0c04333de1f07d4a6f980b917f95bfd0"
          },
          {
            "type": "html",
            "text": "[[Category Xml]] [[Category Messaging Services]]",
            "id": "7dd8ec31bd3e37b56825d37c9d167957"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?WebServices c2.com]",
            "id": "8eb913aa661f57dd9c16abdaf02cece9"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "web.sfw.c2.com",
      "date": 1451355143511
    },
    {
      "type": "edit",
      "id": "7a38c096af406bc29b52e7506a625614",
      "item": {
        "type": "html",
        "text": "* self-contained",
        "id": "7a38c096af406bc29b52e7506a625614"
      },
      "date": 1451355267619
    },
    {
      "type": "remove",
      "id": "455410b4bd609452580e751c5ab43f91",
      "date": 1451355283906
    },
    {
      "type": "edit",
      "id": "7a38c096af406bc29b52e7506a625614",
      "item": {
        "type": "html",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"",
        "id": "7a38c096af406bc29b52e7506a625614"
      },
      "date": 1451355295836
    },
    {
      "item": {
        "type": "factory",
        "id": "329958a65706a35b"
      },
      "id": "329958a65706a35b",
      "type": "add",
      "after": "8eb913aa661f57dd9c16abdaf02cece9",
      "date": 1451355326953
    },
    {
      "type": "move",
      "order": [
        "400dc82557409a214fe056375d2639d7",
        "329958a65706a35b",
        "7a38c096af406bc29b52e7506a625614",
        "1a38622d6cf05020b6b32c91b595a039",
        "22fb873984fb9812fcce7dafd2dca39b",
        "195d3505aa78ad416f97f009cee08794",
        "7ecd58634d8ac8fd58967ab4f5e2b3e1",
        "1e921bdc355e726af061aefa6fd36d16",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "b5f6e5d5aafe977ec767dacab9fb7944",
        "18d6f83741e098f610dea2609d8ef5f5",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "fa527a61ada81f0d06dfa81d9660e861",
        "e51681f7f298d83d9e37833dad4c6792",
        "f14cae409ec62ac969d0c756dda1b0f3",
        "74cf5b060d608ca108ff30b73317853a",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "1002b51408f52aa5d2e6125b4ecbc15f",
        "80477287f0b7b887d020b2743f5bcced",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "2a53273928d5e9109ae554ae60a68921",
        "0c2689a01a8b61bf54baaefb9c887599",
        "16ce17c714346a632a3a4f60be592235",
        "f4bd87a69953853529e669eb1812715b",
        "1e038daff143b348c836c29a11fbf122",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "b2a42913320b30c38e29480a8be63f18",
        "4d3a53a31c29d33b85570d9a09d7c9b9",
        "875001377bd53e612352e84fb88df1e9",
        "c34efafcd02554ded0cb88fd9a8a4811",
        "73c1a3c1949e0bff6505e7f90cec3aeb",
        "d41a55eef421c313919eba2f4561bdda",
        "218b7b04b825df1351544c7422a68579",
        "b97d330f0eda652a5a14487d14fb2755",
        "3fb97c352bac8d9e14e50892d783f429",
        "a40895e1e6424ced1804d2464941474a",
        "668dcb38c10d3d28c9a4ae807b0102e3",
        "9e11fbed65447ce56c9d04b4b6cb8608",
        "f259c6ebf266d7f54d54cd0780b268b1",
        "577f782ba4c924401d51f4e1f223c447",
        "976780fa13da460af3f9109023a3d960",
        "f97bd8144bedcb4c2dc3b7b2a2ae8201",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "5f6bd614e39666cb74f910a24d1984fb",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "069954eb8192d7e844d49cb86007a516",
        "da96986609a1c4cf4013ae439abd7a06",
        "49ed9973cc2ec7c890327862a884ae03",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "49d11758584ac7c9b7a70d8fc2f533a3",
        "0feb02c7a535794bd7e5711204b10c83",
        "ec9e7f6228a2a3b00b3cc16fdf4f5761",
        "0e60ef82b97e0ec13405b24e0457f643",
        "861fcd7ce0813bb3987327f5392ab9cd",
        "8038cae93aa7a5926fe4b07752ea3949",
        "44a3c4438eca3947ce1da582005af02c",
        "edd8425c871c7ec058e1d65e14f9ec3e",
        "38d0540668c46d620b177c3c6f11511f",
        "9a60c38a094c8d7fb94f1b1d0d17b04d",
        "e2e1379bc0a74662b79ffe13d9bce437",
        "41ea4d1dcc33a8a05406edc8e3e8c755",
        "d5c44849b742111219d4238446a542c4",
        "f7684983e60db38296b8530190f419f1",
        "78f689d2e78219868e33a1ee7e631c06",
        "1fe89d98e3d0f3d715c3e31fc3fbe89d",
        "5c958ebde9f39ef31ae5377729e1bd8e",
        "2d083d2330fb8035da0ac6ccfe63479d",
        "3e7ac9207d9eddf4d188919dfcf73ae9",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "efcadc5e25ce84052a6a01a1385162a5",
        "baccf1ed9aa96934e0b9872286a19554",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "6bb6ab2d8cffa5048d7865ab2199b991",
        "6f0ff0e68ea1ebe0e8a0867327143cb6",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "9ca41f513b1adf4f680d648fef7e31dc",
        "d80fc300212eb792679dc637b19a652b",
        "31122c38a95741db125978e9e3794f1d",
        "949e82fdea8b5b6c758cc4fc8be1a199",
        "31122c38a95741db125978e9e3794f1d",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "0a9a2f428bfe3af4b52622676d3c05d2",
        "0ba968d5437f04f9f824b4edef42690b",
        "1eef72f2a58a1e14d386753f3cb1aee7",
        "9d2c5a47ab2c28c66e049899a339a5c7",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "0eb73f6bcc3cf7b506786de7ae4b0fa4",
        "6b895f66b1c682a3d564872e8bc60528",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "a0fb009d45b9f5daa930946bc0cffbc9",
        "a7cf810cdd6bd6a49a143d7088c1df24",
        "6f765d6ce00ddfe2f9fe93af492183d8",
        "c3daf6c43804c48b99e1fc6e4793b675",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "25ff320e850741c8f5a784ae0a487122",
        "34b4de12251bf6f589cc7d60e3b85f8f",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "3a95eeb10d4ef21481c6b94e966004d5",
        "b7b58b03dcca20d6c9247c1f908ff225",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "36351893fd559c302cede05f9acdae65",
        "0a52ff7c076d88531763e11e41115634",
        "792588da13a95489ad1376d7559024e7",
        "5b68120f88693cff5af5a4e39543813f",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "74c101a238d930b54bb3d706bd789dff",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "ad95c2e983569a5088f2302ffe19b0d2",
        "72343c90632590a21b24e87b4ad8fc0c",
        "5c1ded394ad29445c59b534b35aeca0c",
        "1fb5d8624afde9e1947313df302d8111",
        "84561f8b22a821e03d5ba7e243229bcd",
        "9aa23b164ecb61e9998582c6cb7d5bb3",
        "7b7faaf27d351e525b83618fd5b00860",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "b3fd61922a9d48b8bb50a2a71d9ba8ba",
        "0c04333de1f07d4a6f980b917f95bfd0",
        "7dd8ec31bd3e37b56825d37c9d167957",
        "8eb913aa661f57dd9c16abdaf02cece9"
      ],
      "id": "329958a65706a35b",
      "date": 1451355340189
    },
    {
      "type": "remove",
      "id": "7a38c096af406bc29b52e7506a625614",
      "date": 1451355345336
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\""
      },
      "date": 1451355347039
    },
    {
      "type": "remove",
      "id": "1a38622d6cf05020b6b32c91b595a039",
      "date": 1451355351471
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"\n*  queryable"
      },
      "date": 1451355357231
    },
    {
      "type": "remove",
      "id": "22fb873984fb9812fcce7dafd2dca39b",
      "date": 1451355362413
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"\n* queryable\n* dynamically composable"
      },
      "date": 1451355373391
    },
    {
      "type": "remove",
      "id": "195d3505aa78ad416f97f009cee08794",
      "date": 1451355377583
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"\n* queryable\n* dynamically composable\n* universally interoperable (platform, language, and protocol)\n*"
      },
      "date": 1451355387608
    },
    {
      "type": "remove",
      "id": "7ecd58634d8ac8fd58967ab4f5e2b3e1",
      "date": 1451355391794
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"\n* queryable\n* dynamically composable\n* universally interoperable (platform, language, and protocol)\n* potentially configurable at run-time (in quality of service and security, for instance)\n*"
      },
      "date": 1451355398168
    },
    {
      "type": "remove",
      "id": "1e921bdc355e726af061aefa6fd36d16",
      "date": 1451355401939
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"\n* queryable\n* dynamically composable\n* universally interoperable (platform, language, and protocol)\n* potentially configurable at run-time (in quality of service and security, for instance)\n* bound, published, and located through distributed registries (which are themselves services)"
      },
      "date": 1451355407201
    },
    {
      "type": "remove",
      "id": "b5f6e5d5aafe977ec767dacab9fb7944",
      "date": 1451355420155
    },
    {
      "type": "fork",
      "site": "plugin.fedwiki.org",
      "date": 1510651162716
    },
    {
      "type": "add",
      "item": {
        "id": "c3980d92cf105ddd",
        "text": "Livecode is an easy to learn, open source, high level language for creating programs and mobile apps for a variety of platforms including Windows, iOS and Android.",
        "type": "paragraph"
      },
      "id": "c3980d92cf105ddd",
      "date": 1510651172366
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"\n* queryable\n* dynamically composable\n* platform, language, and protocol interoperability\n* run-time configurable (ie quality of service)\n* bound, published, and located through distributed registries (which are themselves services)"
      },
      "date": 1510651298408
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"\n* queryable\n* dynamically composable\n* platform, language, and protocol interoperability\n* run-time configurable (ie quality of service)\n* use distributed registries (which are themselves services)"
      },
      "date": 1510651317049
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[Wsdl For Rest]]\"\n* queryable\n* dynamically composable\n* platform, language, and protocol interoperability\n* run-time configurable (ie quality of service)\n* use distributed registries (further web services)"
      },
      "date": 1510651344122
    },
    {
      "type": "edit",
      "id": "329958a65706a35b",
      "item": {
        "type": "markdown",
        "id": "329958a65706a35b",
        "text": "* self-contained\n* self-describing \"see [[WSDL For Rest]]\"\n* queryable\n* dynamically composable\n* platform, language, and protocol interoperability\n* run-time configurable (ie quality of service)\n* use distributed registries (further web services)"
      },
      "date": 1510651352897
    }
  ]
}