{
  "title": "Sowing Apparatus",
  "story": [
    {
      "type": "paragraph",
      "id": "ec17444ac41115df",
      "text": "How to connect [[Apparatus]] and wiki?  I find myself stalled in this question.  Here, I write to think as a first tiny step.  Can I build some momentum?"
    },
    {
      "type": "paragraph",
      "id": "be349d7ce6d44d47",
      "text": "See [http://worrydream.com/LadderOfAbstraction/ Up and Down the Ladder of Abstraction].  Combining wiki with apparatus would empower similar \"writing.\"  But this writing will defy or what we mean by publishing.  Or force its redefinition."
    },
    {
      "type": "paragraph",
      "id": "b982453c970a1c57",
      "text": "I containerized apparatus for use in a local installation: [[Container dobbs/apparatus]]. I have also made it easier to add virtual hosts to [[Container dobbs/proxy]]."
    },
    {
      "type": "markdown",
      "id": "62a2af5ba668b439",
      "text": "* [x] publish apparatus container to [https://apparatus.wiki.dbbs.co apparatus.wiki.dbbs.co]\n* [ ] tell a story in wiki about publishing apparatus\n* [ ] upload TickTock.json and tell a story about it [[Publishing TickTock]]"
    },
    {
      "type": "paragraph",
      "id": "21472b609d96b43f",
      "text": "I sketched an apparatus viewer plugin.  That could situate a diagram within wiki; allow for diagrams to be surrounded with prose.  Forking such a page would depend on installing the viewer plugin on the remote wiki.  Plugmatic would help there, once the plugin were published in npm.  But the diagram would remain in my containerized server."
    },
    {
      "type": "paragraph",
      "id": "f314cc253466845b",
      "text": "Provided the wiki container and the apparatus container can share a docker volume, then perhaps careful naming could allow the page to carry the diagram with it.  But that would impose more than forking on the admin of another wiki."
    },
    {
      "type": "paragraph",
      "id": "46b9f4ebe2acac45",
      "text": "Apparatus is all coffeescript, statically compiled for use in the browser.  Should therefore be small-ish effort to put all of it in a plugin.  No external container required.  Perhaps that's phase two in a plugin development roadmap.  But how to manage the interaction?  Double-click on a diagram opens the editor full screen?  One can foresee conflicts between two code bases listening for drag events."
    },
    {
      "type": "paragraph",
      "id": "ca2a5e9699d17f46",
      "text": "Do I hack apparatus to save diagrams in wiki?"
    },
    {
      "type": "paragraph",
      "id": "014e0e5d489c37a0",
      "text": "Do I expose apparatus variables to radar plugins?"
    },
    {
      "type": "paragraph",
      "id": "ee3c628dd974b449",
      "text": "Do I instrument apparatus so detect wiki radar data?"
    },
    {
      "type": "paragraph",
      "id": "e7fcb7130099435d",
      "text": "Which of these seeds to plant?"
    },
    {
      "type": "pagefold",
      "id": "f266e86e683ee048",
      "text": "ward"
    },
    {
      "type": "paragraph",
      "id": "21ba2e487c8e2b0b",
      "text": "All good ideas. Running apparatus in the wiki-client address space would seem the big win for interesting integrations. Map is a good example. It can look for other markers and set bounds accordingly. Scrolling isn't an action and won't be saved. But planting a new marker is and can be undone by forking earlier revisions."
    },
    {
      "type": "paragraph",
      "id": "13091d7fa0e1a41e",
      "text": "A good approach might be hacking one example (maybe the wheel) and making it an interactive viewer like the map. If the apparatus codebase yields to this then we can consider how authoring might work."
    },
    {
      "type": "paragraph",
      "id": "da4eceead3b8763b",
      "text": "We're always looking for ways that authoring can be shared between different authors on different sites. Mix and match features? What would that be like?"
    },
    {
      "type": "paragraph",
      "id": "60a98bfcd6d53d66",
      "text": "An interesting warm up might be to build a plugin that could run a couple of examples from g9. Authoring is left to javascript in g9 so that looks less attractive from a secure sharing point of view. But the viewer interactions are awesome and might factor out in ways we can't imagine. See [[Solve for Initial Conditions]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Sowing Apparatus",
        "story": []
      },
      "date": 1512329629378
    },
    {
      "item": {
        "type": "factory",
        "id": "ec17444ac41115df"
      },
      "id": "ec17444ac41115df",
      "type": "add",
      "date": 1512329631476
    },
    {
      "type": "edit",
      "id": "ec17444ac41115df",
      "item": {
        "type": "paragraph",
        "id": "ec17444ac41115df",
        "text": "How to connect [[Apparatus]] and wiki?  I find myself stalled in this question.  Here, I write to think as a first tiny step.  Can I build some momentum?"
      },
      "date": 1512329819865
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b982453c970a1c57",
        "text": "Apparatus itself wants a whole browser for editing.  Graphics editing inside a wiki page seems quite limiting -- not enough screen real estate.  But while I was browsing the code and tests, I did find docs about self-hosting an installation.  I containerized apparatus for use in a local installation: [[Container dobbs/apparatus]]"
      },
      "after": "ec17444ac41115df",
      "id": "b982453c970a1c57",
      "date": 1512330014142
    },
    {
      "type": "edit",
      "id": "b982453c970a1c57",
      "item": {
        "type": "paragraph",
        "id": "b982453c970a1c57",
        "text": "I containerized apparatus for use in a local installation: [[Container dobbs/apparatus]]. I have also made it easier to add virtual hosts to [[Container dobbs/proxy]].  Do I connect those dots: publish my own public-facing apparatus?"
      },
      "date": 1512330282536
    },
    {
      "type": "add",
      "id": "3fe0c45d188661ff",
      "item": {
        "type": "paragraph",
        "id": "3fe0c45d188661ff",
        "text": "Do I (also) tell a story in wiki, with apparatus as the example, about reverse proxy and virtual hosts?"
      },
      "after": "b982453c970a1c57",
      "date": 1512330343815
    },
    {
      "type": "add",
      "id": "21472b609d96b43f",
      "item": {
        "type": "paragraph",
        "id": "21472b609d96b43f",
        "text": "I sketched an apparatus viewer plugin.  That could situate a diagram within wiki; allow for diagrams to be surrounded with prose.  Forking such a page would depend on installing the viewer plugin on the remote wiki.  Plugmatic would help there, once the plugin were published in npm.  But the diagram would remain in my containerized server."
      },
      "after": "3fe0c45d188661ff",
      "date": 1512330608657
    },
    {
      "type": "add",
      "id": "f314cc253466845b",
      "item": {
        "type": "paragraph",
        "id": "f314cc253466845b",
        "text": "Provided the wiki container and the apparatus container can share a docker volume, then perhaps careful naming could allow the page to carry the diagram with it."
      },
      "after": "21472b609d96b43f",
      "date": 1512330942857
    },
    {
      "type": "add",
      "id": "be349d7ce6d44d47",
      "item": {
        "type": "paragraph",
        "id": "be349d7ce6d44d47",
        "text": "See [http://worrydream.com/LadderOfAbstraction/ worrydream]'s Up and Down the Ladder of Abstraction.  Combining wiki with apparatus would empower similar \"writing.\"  But this writing will defy or redefine what we mean by publishing."
      },
      "after": "ec17444ac41115df",
      "date": 1512331340267
    },
    {
      "type": "edit",
      "id": "be349d7ce6d44d47",
      "item": {
        "type": "paragraph",
        "id": "be349d7ce6d44d47",
        "text": "See [http://worrydream.com/LadderOfAbstraction/ Up and Down the Ladder of Abstraction].  Combining wiki with apparatus would empower similar \"writing.\"  But this writing will defy or what we mean by publishing.  Or force its redefinition."
      },
      "date": 1512331390973
    },
    {
      "type": "edit",
      "id": "f314cc253466845b",
      "item": {
        "type": "paragraph",
        "id": "f314cc253466845b",
        "text": "Provided the wiki container and the apparatus container can share a docker volume, then perhaps careful naming could allow the page to carry the diagram with it.  But that would impose more than forking on the admin of another wiki."
      },
      "date": 1512331487004
    },
    {
      "type": "add",
      "id": "46b9f4ebe2acac45",
      "item": {
        "type": "paragraph",
        "id": "46b9f4ebe2acac45",
        "text": "Apparatus is all coffeescript, statically compiled for use in the browser.  Should therefore be small-ish effort to put all of it in a plugin.  No external container required.  Perhaps that's phase two in a plugin development roadmap."
      },
      "after": "f314cc253466845b",
      "date": 1512331645736
    },
    {
      "type": "edit",
      "id": "46b9f4ebe2acac45",
      "item": {
        "type": "paragraph",
        "id": "46b9f4ebe2acac45",
        "text": "Apparatus is all coffeescript, statically compiled for use in the browser.  Should therefore be small-ish effort to put all of it in a plugin.  No external container required.  Perhaps that's phase two in a plugin development roadmap.  But how to manage the interaction?  Double-click on a diagram opens the editor full screen?  One can foresee conflicts between two code bases listening for drag events."
      },
      "date": 1512331800883
    },
    {
      "type": "add",
      "id": "e7fcb7130099435d",
      "item": {
        "type": "paragraph",
        "id": "e7fcb7130099435d",
        "text": "Which of these seeds to plant?"
      },
      "after": "46b9f4ebe2acac45",
      "date": 1512331870631
    },
    {
      "type": "add",
      "id": "014e0e5d489c37a0",
      "item": {
        "type": "paragraph",
        "id": "014e0e5d489c37a0",
        "text": "Do I expose apparatus variables to radar plugins?"
      },
      "after": "46b9f4ebe2acac45",
      "date": 1512332064790
    },
    {
      "type": "add",
      "id": "ee3c628dd974b449",
      "item": {
        "type": "paragraph",
        "id": "ee3c628dd974b449",
        "text": "Do I instrument apparatus so detect wiki radar data?"
      },
      "after": "014e0e5d489c37a0",
      "date": 1512332102230
    },
    {
      "type": "add",
      "id": "ca2a5e9699d17f46",
      "item": {
        "type": "paragraph",
        "id": "ca2a5e9699d17f46",
        "text": "Do I hack apparatus to save diagrams in wiki?"
      },
      "after": "46b9f4ebe2acac45",
      "date": 1512332146628
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1512616086315
    },
    {
      "item": {
        "type": "factory",
        "id": "f266e86e683ee048"
      },
      "id": "f266e86e683ee048",
      "type": "add",
      "after": "e7fcb7130099435d",
      "date": 1512616092805
    },
    {
      "type": "edit",
      "id": "f266e86e683ee048",
      "item": {
        "type": "pagefold",
        "id": "f266e86e683ee048",
        "text": "ward"
      },
      "date": 1512616161007
    },
    {
      "item": {
        "type": "factory",
        "id": "21ba2e487c8e2b0b"
      },
      "id": "21ba2e487c8e2b0b",
      "type": "add",
      "after": "f266e86e683ee048",
      "date": 1512616163157
    },
    {
      "type": "edit",
      "id": "21ba2e487c8e2b0b",
      "item": {
        "type": "paragraph",
        "id": "21ba2e487c8e2b0b",
        "text": "All good ideas. Running apparatus in the wiki-client address space would seem the big win for interesting integrations. Map is a good example. It can look for other markers and set bounds accordingly. Scrolling isn't an action and won't be saved. But planting a new marker is and can be undone by forking earlier revisions from the journal."
      },
      "date": 1512616336705
    },
    {
      "type": "edit",
      "id": "21ba2e487c8e2b0b",
      "item": {
        "type": "paragraph",
        "id": "21ba2e487c8e2b0b",
        "text": "All good ideas. Running apparatus in the wiki-client address space would seem the big win for interesting integrations. Map is a good example. It can look for other markers and set bounds accordingly. Scrolling isn't an action and won't be saved. But planting a new marker is and can be undone by forking earlier revisions."
      },
      "date": 1512616346185
    },
    {
      "type": "add",
      "id": "13091d7fa0e1a41e",
      "item": {
        "type": "paragraph",
        "id": "13091d7fa0e1a41e",
        "text": "A good approach might be hacking one example (maybe the wheel) and making it an interactive viewer like the map. If the apparatus codebase yields to this then we can consider how authoring might work."
      },
      "after": "21ba2e487c8e2b0b",
      "date": 1512616500948
    },
    {
      "type": "add",
      "id": "da4eceead3b8763b",
      "item": {
        "type": "paragraph",
        "id": "da4eceead3b8763b",
        "text": "We're always looking for ways that authoring can be shared between different authors on different sites. Mix and match features? What would that be like?"
      },
      "after": "13091d7fa0e1a41e",
      "date": 1512616553507
    },
    {
      "type": "add",
      "id": "60a98bfcd6d53d66",
      "item": {
        "type": "paragraph",
        "id": "60a98bfcd6d53d66",
        "text": "An interesting warm up might be to build a plugin that could run a couple of examples from g9. Authoring is left to javascript in g9 so that looks less attractive from a secure sharing point of view. But the viewer interactions are awesome and might factor out in ways we can't imagine. See [[Solve for Initial Conditions]]"
      },
      "after": "da4eceead3b8763b",
      "date": 1512616915432
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1512623776033
    },
    {
      "item": {
        "type": "factory",
        "id": "62a2af5ba668b439"
      },
      "id": "62a2af5ba668b439",
      "type": "add",
      "after": "60a98bfcd6d53d66",
      "date": 1512711913283
    },
    {
      "type": "edit",
      "id": "62a2af5ba668b439",
      "item": {
        "type": "markdown",
        "id": "62a2af5ba668b439",
        "text": "* [ ] publish apparatus container to [https://apparatus.wiki.dbbs.co apparatus.wiki.dbbs.co]"
      },
      "date": 1512711965726
    },
    {
      "type": "move",
      "order": [
        "ec17444ac41115df",
        "be349d7ce6d44d47",
        "b982453c970a1c57",
        "62a2af5ba668b439",
        "3fe0c45d188661ff",
        "21472b609d96b43f",
        "f314cc253466845b",
        "46b9f4ebe2acac45",
        "ca2a5e9699d17f46",
        "014e0e5d489c37a0",
        "ee3c628dd974b449",
        "e7fcb7130099435d",
        "f266e86e683ee048",
        "21ba2e487c8e2b0b",
        "13091d7fa0e1a41e",
        "da4eceead3b8763b",
        "60a98bfcd6d53d66"
      ],
      "id": "62a2af5ba668b439",
      "date": 1512711975138
    },
    {
      "type": "edit",
      "id": "b982453c970a1c57",
      "item": {
        "type": "paragraph",
        "id": "b982453c970a1c57",
        "text": "I containerized apparatus for use in a local installation: [[Container dobbs/apparatus]]. I have also made it easier to add virtual hosts to [[Container dobbs/proxy]]."
      },
      "date": 1512711985567
    },
    {
      "type": "edit",
      "id": "62a2af5ba668b439",
      "item": {
        "type": "markdown",
        "id": "62a2af5ba668b439",
        "text": "* [x] publish apparatus container to [https://apparatus.wiki.dbbs.co apparatus.wiki.dbbs.co]"
      },
      "date": 1512711988431
    },
    {
      "type": "edit",
      "id": "62a2af5ba668b439",
      "item": {
        "type": "markdown",
        "id": "62a2af5ba668b439",
        "text": "* [x] publish apparatus container to [https://apparatus.wiki.dbbs.co apparatus.wiki.dbbs.co]\n* [ ] tell a story in wiki about publishing apparatus\n* [ ] upload TickTock.json and tell a story about it"
      },
      "date": 1512712096238
    },
    {
      "type": "remove",
      "id": "3fe0c45d188661ff",
      "date": 1512712103441
    },
    {
      "type": "edit",
      "id": "62a2af5ba668b439",
      "item": {
        "type": "markdown",
        "id": "62a2af5ba668b439",
        "text": "* [x] publish apparatus container to [https://apparatus.wiki.dbbs.co apparatus.wiki.dbbs.co]\n* [ ] tell a story in wiki about publishing apparatus\n* [ ] upload TickTock.json and tell a story about it [[Publishing TickTock]]"
      },
      "date": 1513090626335
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1518367834768
    }
  ]
}