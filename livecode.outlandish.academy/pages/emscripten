{
  "title": "Emscripten",
  "story": [
    {
      "type": "paragraph",
      "id": "f70d4954b8321ab9",
      "text": "Emscripten is a type of source-to-source compiler that runs as a back end to the LLVM compiler and produces a subset of JavaScript known as asm.js - [https://en.wikipedia.org/wiki/Emscripten wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "fc25e47802bb688f",
      "text": "This allows applications and libraries originally designed to be run as standard executables to be integrated into client side web applications. "
    },
    {
      "type": "paragraph",
      "id": "231ce81cf55bf1e0",
      "text": "[[asm.js]] can be compiled by browsers ahead of time meaning that the compiled programs can run much faster than those traditionally written in JavaScript."
    },
    {
      "type": "paragraph",
      "id": "8a7995068d64aee6",
      "text": "Emscripten has been used to port, among other things, Unreal Engine 3, SQLite, and Bullet physics - [https://github.com/kripken/emscripten/wiki/Porting-Examples-and-Demos github]"
    },
    {
      "type": "html",
      "id": "d2e6070304ed89fb",
      "text": "So what would it take for Livecode to join this set of languages, all running in the browser, in an open source emulator:\n<UL>\n<LI>    Python\n<LI>    Ruby\n<LI>    PHP\n<LI>    Sceme\n<LI>    Lua\n<LI>    Java\n<LI>    Lolcode\n<LI>    FORTH\n<LI>    Many others - [http://repl.it/languages repl.it]\n</UL>"
    },
    {
      "type": "html",
      "id": "12a792e365eabab3",
      "text": "Here I can see how you can expose C functions:\n<UL>\n<LI>    http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html#calling-compiled-c-functions-from-javascript\n</UL>"
    },
    {
      "type": "paragraph",
      "id": "693b3318e5457dbd",
      "text": "So my question would be how is this extended so that a handler in Livecode Builder is exposed?"
    },
    {
      "type": "paragraph",
      "id": "4a100032b9bc5849",
      "text": "[[Livecode Builder]] - being the robust strongly typed language that compilers like - lends to being something that could be run through the compiler chain you are creating to export Javascript. "
    },
    {
      "type": "paragraph",
      "id": "6d594ed69ef2a496",
      "text": "For instance a [[Livecode Builder]] library - would be the sort of thing that could be compiled into a Javascript library that would then be called by standard HTML5/Javascript on a web page. This would be the same as emsripten ports of other languages like Ruby - [https://github.com/kripken/emscripten/wiki/Porting-Examples-and-Demos github]"
    },
    {
      "type": "paragraph",
      "id": "0f29c182b63f0e55",
      "text": "The one thing I would like to understand is how you would expose interfaces to the resulting exported JS code - are there any links to how you would do this / any thoughts regarding how Livecode.js exports would do this? "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Emscripten",
        "story": []
      },
      "date": 1437141581436
    },
    {
      "item": {
        "type": "factory",
        "id": "f70d4954b8321ab9"
      },
      "id": "f70d4954b8321ab9",
      "type": "add",
      "date": 1437141583030
    },
    {
      "type": "edit",
      "id": "f70d4954b8321ab9",
      "item": {
        "type": "paragraph",
        "id": "f70d4954b8321ab9",
        "text": "So my understanding now is that Livecode Builder - being the robust strongly typed language that compilers like - lends to being something that could be run through the compiler chain you are creating to export Javascript. For instance a Livecode Builder library - would be the sort of thing that could be compiled into a Javascript library that would then be called by standard HTML5/Javascript on a web page. This would be the same as emsripten ports of other languages like perl - https://github.com/kripken/emscripten/wiki/Porting-Examples-and-Demos"
      },
      "date": 1437141624424
    },
    {
      "type": "add",
      "id": "bc46bc0bcb8d6f09",
      "item": {
        "type": "paragraph",
        "id": "bc46bc0bcb8d6f09",
        "text": "However as your priority is to create a full export of stacks to the web - creating a Livecode Builder library export tool chain is something that we'd need to do as a community project or wait :)"
      },
      "after": "f70d4954b8321ab9",
      "date": 1437141631369
    },
    {
      "type": "add",
      "id": "0f29c182b63f0e55",
      "item": {
        "type": "paragraph",
        "id": "0f29c182b63f0e55",
        "text": "The one thing I would like to understand is how you would expose interfaces to the resulting exported JS code - are there any links to how you would do this / any thoughts regarding how Livecode.js exports would do this? Here I can see how you can expose C functions:\n<UL>\n<LI>    http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html#calling-compiled-c-functions-from-javascript\n</UL>"
      },
      "after": "bc46bc0bcb8d6f09",
      "date": 1437141778438
    },
    {
      "type": "add",
      "id": "693b3318e5457dbd",
      "item": {
        "type": "paragraph",
        "id": "693b3318e5457dbd",
        "text": "So my question would be how is this extended so that a handler in Livecode Builder is exposed?"
      },
      "after": "0f29c182b63f0e55",
      "date": 1437141780140
    },
    {
      "type": "edit",
      "id": "0f29c182b63f0e55",
      "item": {
        "type": "paragraph",
        "id": "0f29c182b63f0e55",
        "text": "The one thing I would like to understand is how you would expose interfaces to the resulting exported JS code - are there any links to how you would do this / any thoughts regarding how Livecode.js exports would do this? "
      },
      "date": 1437141791396
    },
    {
      "type": "add",
      "id": "12a792e365eabab3",
      "item": {
        "type": "paragraph",
        "id": "12a792e365eabab3",
        "text": "Here I can see how you can expose C functions:\n<UL>\n<LI>    http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html#calling-compiled-c-functions-from-javascript\n</UL>"
      },
      "after": "0f29c182b63f0e55",
      "date": 1437141793548
    },
    {
      "type": "edit",
      "id": "12a792e365eabab3",
      "item": {
        "type": "html",
        "id": "12a792e365eabab3",
        "text": "Here I can see how you can expose C functions:\n<UL>\n<LI>    http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html#calling-compiled-c-functions-from-javascript\n</UL>"
      },
      "date": 1437141795158
    },
    {
      "type": "edit",
      "id": "f70d4954b8321ab9",
      "item": {
        "type": "paragraph",
        "id": "f70d4954b8321ab9",
        "text": "So my understanding now is that Livecode Builder - being the robust strongly typed language that compilers like - lends to being something that could be run through the compiler chain you are creating to export Javascript. "
      },
      "date": 1437141886423
    },
    {
      "type": "add",
      "id": "6d594ed69ef2a496",
      "item": {
        "type": "paragraph",
        "id": "6d594ed69ef2a496",
        "text": "For instance a Livecode Builder library - would be the sort of thing that could be compiled into a Javascript library that would then be called by standard HTML5/Javascript on a web page. This would be the same as emsripten ports of other languages like perl - https://github.com/kripken/emscripten/wiki/Porting-Examples-and-Demos"
      },
      "after": "f70d4954b8321ab9",
      "date": 1437141886868
    },
    {
      "type": "edit",
      "id": "f70d4954b8321ab9",
      "item": {
        "type": "paragraph",
        "id": "f70d4954b8321ab9",
        "text": "Emscripten is a type of source-to-source compiler that runs as a back end to the LLVM compiler and produces a subset of JavaScript known as asm.js.[2] This allows applications and libraries originally designed to be run as standard executables to be integrated into client side web applications. asm.js can be compiled by browsers ahead of time meaning that the compiled programs can run much faster than those traditionally written in JavaScript.\n\nEmscripten has been used to port, among other things, Unreal Engine 3, SQLite, and Bullet physics."
      },
      "date": 1437142163745
    },
    {
      "type": "add",
      "id": "4a100032b9bc5849",
      "item": {
        "type": "paragraph",
        "id": "4a100032b9bc5849",
        "text": "So my understanding now is that Livecode Builder - being the robust strongly typed language that compilers like - lends to being something that could be run through the compiler chain you are creating to export Javascript. "
      },
      "after": "f70d4954b8321ab9",
      "date": 1437142165505
    },
    {
      "type": "edit",
      "id": "f70d4954b8321ab9",
      "item": {
        "type": "paragraph",
        "id": "f70d4954b8321ab9",
        "text": "Emscripten is a type of source-to-source compiler that runs as a back end to the LLVM compiler and produces a subset of JavaScript known as asm.js."
      },
      "date": 1437142170144
    },
    {
      "type": "add",
      "id": "fc25e47802bb688f",
      "item": {
        "type": "paragraph",
        "id": "fc25e47802bb688f",
        "text": "This allows applications and libraries originally designed to be run as standard executables to be integrated into client side web applications. asm.js can be compiled by browsers ahead of time meaning that the compiled programs can run much faster than those traditionally written in JavaScript.\n\nEmscripten has been used to port, among other things, Unreal Engine 3, SQLite, and Bullet physics."
      },
      "after": "f70d4954b8321ab9",
      "date": 1437142172122
    },
    {
      "type": "edit",
      "id": "f70d4954b8321ab9",
      "item": {
        "type": "paragraph",
        "id": "f70d4954b8321ab9",
        "text": "Emscripten is a type of source-to-source compiler that runs as a back end to the LLVM compiler and produces a subset of JavaScript known as asm.js - [https://en.wikipedia.org/wiki/Emscripten wikipedia]"
      },
      "date": 1437142182945
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "d2e6070304ed89fb",
        "text": "So what would it take for Livecode to join this set of languages, all running in the browser, in an open source emulator:\n<UL>\n<LI>    Python\n<LI>    Ruby\n<LI>    PHP\n<LI>    Sceme\n<LI>    Lua\n<LI>    Java\n<LI>    Lolcode\n<LI>    FORTH\n<LI>    Many others - [http://repl.it/languages repl.it]\n</UL>"
      },
      "after": "fc25e47802bb688f",
      "id": "d2e6070304ed89fb",
      "date": 1437142273737
    },
    {
      "type": "edit",
      "id": "fc25e47802bb688f",
      "item": {
        "type": "paragraph",
        "id": "fc25e47802bb688f",
        "text": "This allows applications and libraries originally designed to be run as standard executables to be integrated into client side web applications. asm.js can be compiled by browsers ahead of time meaning that the compiled programs can run much faster than those traditionally written in JavaScript.\n\nEmscripten has been used to port, among other things, Unreal Engine 3, SQLite, and Bullet physics - [https://github.com/kripken/emscripten/wiki/Porting-Examples-and-Demos github]"
      },
      "date": 1437142300555
    },
    {
      "type": "edit",
      "id": "fc25e47802bb688f",
      "item": {
        "type": "paragraph",
        "id": "fc25e47802bb688f",
        "text": "This allows applications and libraries originally designed to be run as standard executables to be integrated into client side web applications. "
      },
      "date": 1437142328325
    },
    {
      "type": "add",
      "id": "231ce81cf55bf1e0",
      "item": {
        "type": "paragraph",
        "id": "231ce81cf55bf1e0",
        "text": "[[asm.js]] can be compiled by browsers ahead of time meaning that the compiled programs can run much faster than those traditionally written in JavaScript."
      },
      "after": "fc25e47802bb688f",
      "date": 1437142334375
    },
    {
      "type": "add",
      "id": "8a7995068d64aee6",
      "item": {
        "type": "paragraph",
        "id": "8a7995068d64aee6",
        "text": "Emscripten has been used to port, among other things, Unreal Engine 3, SQLite, and Bullet physics - [https://github.com/kripken/emscripten/wiki/Porting-Examples-and-Demos github]"
      },
      "after": "231ce81cf55bf1e0",
      "date": 1437142338294
    },
    {
      "type": "edit",
      "id": "4a100032b9bc5849",
      "item": {
        "type": "paragraph",
        "id": "4a100032b9bc5849",
        "text": "[[Livecode Builder]] - being the robust strongly typed language that compilers like - lends to being something that could be run through the compiler chain you are creating to export Javascript. "
      },
      "date": 1437142356991
    },
    {
      "type": "edit",
      "id": "6d594ed69ef2a496",
      "item": {
        "type": "paragraph",
        "id": "6d594ed69ef2a496",
        "text": "For instance a [[Livecode Builder]] library - would be the sort of thing that could be compiled into a Javascript library that would then be called by standard HTML5/Javascript on a web page. This would be the same as emsripten ports of other languages like Ruby - [https://github.com/kripken/emscripten/wiki/Porting-Examples-and-Demos github]"
      },
      "date": 1437142399455
    },
    {
      "type": "remove",
      "id": "bc46bc0bcb8d6f09",
      "date": 1437142407758
    },
    {
      "type": "move",
      "order": [
        "f70d4954b8321ab9",
        "fc25e47802bb688f",
        "231ce81cf55bf1e0",
        "8a7995068d64aee6",
        "d2e6070304ed89fb",
        "12a792e365eabab3",
        "4a100032b9bc5849",
        "6d594ed69ef2a496",
        "0f29c182b63f0e55",
        "693b3318e5457dbd"
      ],
      "id": "12a792e365eabab3",
      "date": 1437142423562
    },
    {
      "type": "move",
      "order": [
        "f70d4954b8321ab9",
        "fc25e47802bb688f",
        "231ce81cf55bf1e0",
        "8a7995068d64aee6",
        "d2e6070304ed89fb",
        "12a792e365eabab3",
        "693b3318e5457dbd",
        "4a100032b9bc5849",
        "6d594ed69ef2a496",
        "0f29c182b63f0e55"
      ],
      "id": "693b3318e5457dbd",
      "date": 1437142432960
    },
    {
      "type": "fork",
      "site": "c0de.academy",
      "date": 1437142459977
    }
  ]
}