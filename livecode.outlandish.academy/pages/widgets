{
  "title": "Widgets",
  "story": [
    {
      "id": "342b2f5e5d370ada",
      "text": "[[Widgets]] are collections of commands, functions and event handlers that together create a new control type, or widget. ",
      "type": "paragraph"
    },
    {
      "type": "paragraph",
      "id": "b7e47f4ef2f321e5",
      "text": "You can create you own controls which look, feel and act as if they were in fact part of the engine itself. Indeed, widgets will be very familiar to anyone who has ever written a control in Visual Basic, Delphi, or derived a new control from the base control class in any of the multiplicity of C++ GUI frameworks. "
    },
    {
      "type": "paragraph",
      "id": "1b2be55a5b5db6cd",
      "text": "This idea of controls is different from the aggregate style of custom control we currently see in [[LiveCode]]. Rather than using a container in which you put other controls you instead get a ‚\"paint\" event and all the basic interaction events you need to craft your control entirely the way you want. "
    },
    {
      "type": "paragraph",
      "id": "1d50cc17e3586558",
      "text": "To help you do this, you'll also have access to an array of functionality crafted for the task - most importantly, you'll be able to use a collection of syntax that provides 2d vector drawing capabilities along the lines of the [[HTML5 Canvas]], or [[CoreGraphics]] library to draw your widgets."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Widgets",
        "story": []
      },
      "date": 1437143443985
    },
    {
      "item": {
        "type": "factory",
        "id": "5b14a6d37f500da3"
      },
      "id": "5b14a6d37f500da3",
      "type": "add",
      "date": 1437143447930
    },
    {
      "type": "add",
      "item": {
        "id": "342b2f5e5d370ada",
        "text": "[[Widgets]] are collections of commands, functions and event handlers that together create a new control type, or widget. ",
        "type": "paragraph"
      },
      "id": "342b2f5e5d370ada",
      "date": 1437143449697
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b7e47f4ef2f321e5",
        "text": "You can create you own controls which look, feel and act as if they were in fact part of the engine itself. Indeed, widgets will be very familiar to anyone who has ever written a control in Visual Basic, Delphi, or derived a new control from the base control class in any of the multiplicity of C++ GUI frameworks. "
      },
      "after": "342b2f5e5d370ada",
      "id": "b7e47f4ef2f321e5",
      "date": 1437143451370
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1b2be55a5b5db6cd",
        "text": "This idea of controls is different from the aggregate style of custom control we currently see in [[LiveCode]]. Rather than using a container in which you put other controls you instead get a ‚\"paint\" event and all the basic interaction events you need to craft your control entirely the way you want. "
      },
      "after": "b7e47f4ef2f321e5",
      "id": "1b2be55a5b5db6cd",
      "date": 1437143453161
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1d50cc17e3586558",
        "text": "To help you do this, you'll also have access to an array of functionality crafted for the task - most importantly, you'll be able to use a collection of syntax that provides 2d vector drawing capabilities along the lines of the [[HTML5 Canvas]], or [[CoreGraphics]] library to draw your widgets."
      },
      "after": "1b2be55a5b5db6cd",
      "id": "1d50cc17e3586558",
      "date": 1437143497991
    },
    {
      "type": "remove",
      "id": "5b14a6d37f500da3",
      "date": 1437143587928
    }
  ]
}