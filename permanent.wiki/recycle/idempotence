{
  "title": "Idempotence",
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "Idempotence"
      },
      "date": 1507293440351,
      "source": {
        "pageTitle": "Idempotence",
        "pageSlug": "Idempotent",
        "url": "https://en.wikipedia.org/wiki/Idempotence",
        "date": 1507293440351,
        "link_dictionary": {
          "wiki_links": {
            "Definitions": {
              "section_number": 1,
              "section_level": 2,
              "dot_number": 1
            },
            "References": {
              "section_number": 14,
              "section_level": 2,
              "dot_number": 6
            },
            "Computer science meaning": {
              "section_number": 10,
              "section_level": 2,
              "dot_number": 3
            },
            "See also": {
              "section_number": 13,
              "section_level": 2,
              "dot_number": 5
            },
            "Common examples": {
              "section_number": 5,
              "section_level": 2,
              "dot_number": 2
            },
            "Applied examples": {
              "section_number": 12,
              "section_level": 2,
              "dot_number": 4
            },
            "Further reading": {
              "section_number": 15,
              "section_level": 2,
              "dot_number": 7
            }
          },
          "default": {
            "transport": "https://rest.livecode.world/mediawiki/importSection"
          }
        },
        "transport": "https://rest.livecode.world/mediawiki/transportAgain",
        "rev": 801530954,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "add",
      "id": "faa8a7f2-878e-472b-8e4a-05682ebdfa2b",
      "item": {
        "type": "factory",
        "id": "faa8a7f2-878e-472b-8e4a-05682ebdfa2b"
      },
      "date": 1507293440353
    },
    {
      "type": "edit",
      "id": "faa8a7f2-878e-472b-8e4a-05682ebdfa2b",
      "item": {
        "id": "faa8a7f2-878e-472b-8e4a-05682ebdfa2b",
        "type": "paragraph",
        "text": "Idempotence (UK: ; US:  EYE-dəm-POH-təns) is the property of certain operations in mathematics and computer science that they can be applied multiple times without changing the result beyond the initial application. The concept of idempotence arises in a number of places in abstract algebra (in particular, in the theory of projectors and closure operators) and functional programming (in which it is connected to the property of referential transparency) - [https://en.wikipedia.org/wiki/Idempotence wikipedia]"
      },
      "date": 1507293440353
    },
    {
      "order": [
        "faa8a7f2-878e-472b-8e4a-05682ebdfa2b"
      ],
      "id": "pID",
      "type": "move",
      "date": 1507293440353
    },
    {
      "type": "add",
      "id": "e14e3bed-a64d-4fcf-a9f0-284a5ad27226",
      "after": "faa8a7f2-878e-472b-8e4a-05682ebdfa2b",
      "item": {
        "type": "factory",
        "id": "e14e3bed-a64d-4fcf-a9f0-284a5ad27226"
      },
      "date": 1507293440504
    },
    {
      "type": "edit",
      "id": "e14e3bed-a64d-4fcf-a9f0-284a5ad27226",
      "item": {
        "id": "e14e3bed-a64d-4fcf-a9f0-284a5ad27226",
        "type": "paragraph",
        "text": "The term was introduced by Benjamin Peirce in the context of elements of algebras that remain invariant when raised to a positive integer power, and literally means \"(the quality of having) the same power\", from idem + potence (same + power)."
      },
      "date": 1507293440504
    },
    {
      "type": "add",
      "id": "983d1a6e-51df-4059-a8a0-6e5969a540b9",
      "after": "e14e3bed-a64d-4fcf-a9f0-284a5ad27226",
      "item": {
        "type": "factory",
        "id": "983d1a6e-51df-4059-a8a0-6e5969a540b9"
      },
      "date": 1507293440505
    },
    {
      "type": "edit",
      "id": "983d1a6e-51df-4059-a8a0-6e5969a540b9",
      "item": {
        "id": "983d1a6e-51df-4059-a8a0-6e5969a540b9",
        "type": "paragraph",
        "text": "There are several meanings of idempotence, depending on what the concept is applied to:"
      },
      "date": 1507293440505
    },
    {
      "type": "add",
      "id": "3cbeec72-7a7a-483c-ade3-f5211c9b0bcd",
      "after": "983d1a6e-51df-4059-a8a0-6e5969a540b9",
      "item": {
        "type": "factory",
        "id": "3cbeec72-7a7a-483c-ade3-f5211c9b0bcd"
      },
      "date": 1507293440505
    },
    {
      "type": "edit",
      "id": "3cbeec72-7a7a-483c-ade3-f5211c9b0bcd",
      "item": {
        "id": "3cbeec72-7a7a-483c-ade3-f5211c9b0bcd",
        "type": "paragraph",
        "text": "A unary operation (or function) is idempotent if, whenever it is applied twice to any value, it gives the same result as if it were applied once; i.e., ƒ(ƒ(x)) ≡ ƒ(x). For example, the absolute value function, where abs(abs(x)) ≡ abs(x), is idempotent."
      },
      "date": 1507293440505
    },
    {
      "type": "add",
      "id": "27d87506-76b3-4fa7-b39f-0266c16c7eca",
      "after": "3cbeec72-7a7a-483c-ade3-f5211c9b0bcd",
      "item": {
        "type": "factory",
        "id": "27d87506-76b3-4fa7-b39f-0266c16c7eca"
      },
      "date": 1507293440506
    },
    {
      "type": "edit",
      "id": "27d87506-76b3-4fa7-b39f-0266c16c7eca",
      "item": {
        "id": "27d87506-76b3-4fa7-b39f-0266c16c7eca",
        "type": "paragraph",
        "text": "Given a binary operation, an idempotent element (or simply an \"idempotent\") for the operation is a value for which the operation, when given that value for both of its operands, gives that value as the result. For example, the number 1 is an idempotent of multiplication: 1 × 1 = 1."
      },
      "date": 1507293440506
    },
    {
      "type": "add",
      "id": "a3e7917c-5c3f-4a40-94bf-bd3314439975",
      "after": "27d87506-76b3-4fa7-b39f-0266c16c7eca",
      "item": {
        "type": "factory",
        "id": "a3e7917c-5c3f-4a40-94bf-bd3314439975"
      },
      "date": 1507293440507
    },
    {
      "type": "edit",
      "id": "a3e7917c-5c3f-4a40-94bf-bd3314439975",
      "item": {
        "id": "a3e7917c-5c3f-4a40-94bf-bd3314439975",
        "type": "paragraph",
        "text": "A binary operation is called idempotent if all elements are idempotent elements with respect to the operation. In other words, whenever it is applied to two equal values, it gives that value as the result. For example, the function giving the maximum value of two equal values is idempotent: max(x, x) ≡ x."
      },
      "date": 1507293440507
    },
    {
      "order": [
        "faa8a7f2-878e-472b-8e4a-05682ebdfa2b",
        "e14e3bed-a64d-4fcf-a9f0-284a5ad27226",
        "983d1a6e-51df-4059-a8a0-6e5969a540b9",
        "3cbeec72-7a7a-483c-ade3-f5211c9b0bcd",
        "27d87506-76b3-4fa7-b39f-0266c16c7eca",
        "a3e7917c-5c3f-4a40-94bf-bd3314439975"
      ],
      "id": "pID",
      "type": "move",
      "date": 1507293440507
    },
    {
      "type": "add",
      "id": "0ab43a21-caa4-4320-b80b-2b21d381f08d",
      "after": "a3e7917c-5c3f-4a40-94bf-bd3314439975",
      "item": {
        "type": "factory",
        "id": "0ab43a21-caa4-4320-b80b-2b21d381f08d"
      },
      "date": 1507293440508
    },
    {
      "type": "edit",
      "id": "0ab43a21-caa4-4320-b80b-2b21d381f08d",
      "item": {
        "id": "0ab43a21-caa4-4320-b80b-2b21d381f08d",
        "type": "markdown",
        "text": "# See also\n* [[Definitions]]\n* [[Common examples]]\n* [[Computer science meaning]]\n* [[Applied examples]]\n* [[See also]]\n* [[References]]\n* [[Further reading]]"
      },
      "date": 1507293440508
    },
    {
      "type": "fork",
      "date": 1507293444666
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "faa8a7f2-878e-472b-8e4a-05682ebdfa2b",
      "text": "Idempotence (UK: ; US:  EYE-dəm-POH-təns) is the property of certain operations in mathematics and computer science that they can be applied multiple times without changing the result beyond the initial application. The concept of idempotence arises in a number of places in abstract algebra (in particular, in the theory of projectors and closure operators) and functional programming (in which it is connected to the property of referential transparency) - [https://en.wikipedia.org/wiki/Idempotence wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "e14e3bed-a64d-4fcf-a9f0-284a5ad27226",
      "text": "The term was introduced by Benjamin Peirce in the context of elements of algebras that remain invariant when raised to a positive integer power, and literally means \"(the quality of having) the same power\", from idem + potence (same + power)."
    },
    {
      "type": "paragraph",
      "id": "983d1a6e-51df-4059-a8a0-6e5969a540b9",
      "text": "There are several meanings of idempotence, depending on what the concept is applied to:"
    },
    {
      "type": "paragraph",
      "id": "3cbeec72-7a7a-483c-ade3-f5211c9b0bcd",
      "text": "A unary operation (or function) is idempotent if, whenever it is applied twice to any value, it gives the same result as if it were applied once; i.e., ƒ(ƒ(x)) ≡ ƒ(x). For example, the absolute value function, where abs(abs(x)) ≡ abs(x), is idempotent."
    },
    {
      "type": "paragraph",
      "id": "27d87506-76b3-4fa7-b39f-0266c16c7eca",
      "text": "Given a binary operation, an idempotent element (or simply an \"idempotent\") for the operation is a value for which the operation, when given that value for both of its operands, gives that value as the result. For example, the number 1 is an idempotent of multiplication: 1 × 1 = 1."
    },
    {
      "type": "paragraph",
      "id": "a3e7917c-5c3f-4a40-94bf-bd3314439975",
      "text": "A binary operation is called idempotent if all elements are idempotent elements with respect to the operation. In other words, whenever it is applied to two equal values, it gives that value as the result. For example, the function giving the maximum value of two equal values is idempotent: max(x, x) ≡ x."
    },
    {
      "type": "markdown",
      "id": "0ab43a21-caa4-4320-b80b-2b21d381f08d",
      "text": "# See also\n* [[Definitions]]\n* [[Common examples]]\n* [[Computer science meaning]]\n* [[Applied examples]]\n* [[See also]]\n* [[References]]\n* [[Further reading]]"
    }
  ]
}