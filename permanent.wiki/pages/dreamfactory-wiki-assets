{
  "title": "Dreamfactory Wiki Assets",
  "story": [
    {
      "type": "paragraph",
      "id": "f5b3c44273efb8c2",
      "text": "Here we explore how we will organise media assets in wiki to create our own [[decentralised media commons]] on"
    },
    {
      "type": "markdown",
      "id": "b3d1ab1bd038d37f",
      "text": "We look to serve the files simply from:\n\n-  [http://assets.permanent.wiki http://assets.permanent.wiki]"
    },
    {
      "type": "markdown",
      "id": "420394f2bbe6f80d",
      "text": "# Simple Web Server\nYou can use this theme folder to serve [[Dreamfactory Wiki Assets]]:\n\n- [http://david.outlandish.academy/theme/david.jpg david.jpg ]"
    },
    {
      "type": "audio",
      "id": "9bce333a42390c80",
      "text": "http://david.icotopia.io/status/theme/file_3.ogg\nYou can use this to link to audio files like this ogg - [http://david.icotopia.io/status/theme/file_3.ogg file_3.ogg ]"
    },
    {
      "type": "html",
      "id": "fca821613feba51f",
      "text": "You can also use it to serve images for instance:\n<p>\n<img src=\"http://david.outlandish.academy/theme/david.jpg\" width=100%\">"
    },
    {
      "type": "html",
      "id": "37ec403738012528",
      "text": "Even without mime-tytpe being served - [http://pics.permanent.wiki/test.jpg http://pics.permanent.wiki/test.jpg]\n<p>\n<img src=\"http://pics.permanent.wiki/test.jpg\" width=100%\">\n"
    },
    {
      "type": "reference",
      "id": "170f809593ccdba4",
      "site": "hosting.permanent.wiki",
      "slug": "assets-in-ipfs",
      "title": "Assets in IPFS",
      "text": "We explore distributing assets via a node on localhost. The strategy is to store postcard sized assets in the json along with full resolution content in ipfs. Double-click will retrieve and display the ipfs version."
    },
    {
      "type": "reference",
      "id": "78a178b15cf862d5",
      "site": "hosting.permanent.wiki",
      "slug": "ipfs-video-streaming",
      "title": "IPFS Video Streaming",
      "text": "Here we examine how we stream video using IPFS."
    },
    {
      "type": "reference",
      "id": "c7bd1186a15a10ee",
      "site": "hosting.permanent.wiki",
      "slug": "dreamfactory-wiki",
      "title": "DreamFactory Wiki",
      "text": "So the idea here is to see if we can get [[DreamFactory]] to fulfil the basic [[Fedwiki Server Requirements]], which essentially means serving json files, a favicon and a sitemap via HTTP GET."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Dreamfactory Wiki Assets",
        "story": []
      },
      "date": 1502543001785
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "420394f2bbe6f80d",
        "text": "You can use this theme folder to serve [[Dreamfactory Wiki Assets]]:\n\n- [http://david.outlandish.academy/theme/david.jpg david.jpg ]"
      },
      "id": "420394f2bbe6f80d",
      "date": 1502543012326
    },
    {
      "type": "add",
      "item": {
        "type": "audio",
        "id": "9bce333a42390c80",
        "text": "http://david.icotopia.io/status/theme/file_3.ogg\nYou can use this to link to audio files like this ogg - [http://david.icotopia.io/status/theme/file_3.ogg file_3.ogg ]"
      },
      "after": "2d1ee70b0aa79dde",
      "id": "9bce333a42390c80",
      "date": 1502543017201
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "fca821613feba51f",
        "text": "You can also use it to serve images for instance:\n<p>\n<img src=\"http://david.outlandish.academy/theme/david.jpg\" width=100%\">"
      },
      "after": "9bce333a42390c80",
      "id": "fca821613feba51f",
      "date": 1502543021294
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "37ec403738012528",
        "text": "Even without mime-tytpe being served - [http://pics.permanent.wiki/test.jpg http://pics.permanent.wiki/test.jpg]\n<p>\n<img src=\"http://pics.permanent.wiki/test.jpg\" width=100%\">\n"
      },
      "after": "fca821613feba51f",
      "id": "37ec403738012528",
      "date": 1502543025156
    },
    {
      "item": {
        "type": "factory",
        "id": "78a178b15cf862d5"
      },
      "id": "78a178b15cf862d5",
      "type": "add",
      "after": "37ec403738012528",
      "date": 1502543042235
    },
    {
      "type": "edit",
      "id": "78a178b15cf862d5",
      "item": {
        "type": "reference",
        "id": "78a178b15cf862d5",
        "site": "hosting.permanent.wiki",
        "slug": "ipfs-video-streaming",
        "title": "IPFS Video Streaming",
        "text": "Here we examine how we stream video using IPFS."
      },
      "date": 1502543045633
    },
    {
      "item": {
        "type": "factory",
        "id": "170f809593ccdba4"
      },
      "id": "170f809593ccdba4",
      "type": "add",
      "after": "420394f2bbe6f80d",
      "date": 1502543075974
    },
    {
      "type": "edit",
      "id": "170f809593ccdba4",
      "item": {
        "type": "reference",
        "id": "170f809593ccdba4",
        "site": "hosting.permanent.wiki",
        "slug": "assets-in-ipfs",
        "title": "Assets in IPFS",
        "text": "We explore distributing assets via a node on localhost. The strategy is to store postcard sized assets in the json along with full resolution content in ipfs. Double-click will retrieve and display the ipfs version."
      },
      "date": 1502543082753
    },
    {
      "type": "move",
      "order": [
        "9bce333a42390c80",
        "fca821613feba51f",
        "37ec403738012528",
        "420394f2bbe6f80d",
        "170f809593ccdba4",
        "78a178b15cf862d5"
      ],
      "id": "78a178b15cf862d5",
      "date": 1502543085357
    },
    {
      "item": {
        "type": "factory",
        "id": "c7bd1186a15a10ee"
      },
      "id": "c7bd1186a15a10ee",
      "type": "add",
      "after": "78a178b15cf862d5",
      "date": 1502543104289
    },
    {
      "type": "edit",
      "id": "c7bd1186a15a10ee",
      "item": {
        "type": "reference",
        "id": "c7bd1186a15a10ee",
        "site": "hosting.permanent.wiki",
        "slug": "dreamfactory-wiki",
        "title": "DreamFactory Wiki",
        "text": "So the idea here is to see if we can get [[DreamFactory]] to fulfil the basic [[Fedwiki Server Requirements]], which essentially means serving json files, a favicon and a sitemap via HTTP GET."
      },
      "date": 1502543107067
    },
    {
      "type": "move",
      "order": [
        "420394f2bbe6f80d",
        "9bce333a42390c80",
        "fca821613feba51f",
        "37ec403738012528",
        "170f809593ccdba4",
        "78a178b15cf862d5",
        "c7bd1186a15a10ee"
      ],
      "id": "420394f2bbe6f80d",
      "date": 1502543152772
    },
    {
      "item": {
        "type": "factory",
        "id": "f5b3c44273efb8c2"
      },
      "id": "f5b3c44273efb8c2",
      "type": "add",
      "after": "c7bd1186a15a10ee",
      "date": 1502543158049
    },
    {
      "type": "move",
      "order": [
        "f5b3c44273efb8c2",
        "420394f2bbe6f80d",
        "9bce333a42390c80",
        "fca821613feba51f",
        "37ec403738012528",
        "170f809593ccdba4",
        "78a178b15cf862d5",
        "c7bd1186a15a10ee"
      ],
      "id": "f5b3c44273efb8c2",
      "date": 1502543161845
    },
    {
      "type": "edit",
      "id": "f5b3c44273efb8c2",
      "item": {
        "type": "paragraph",
        "id": "f5b3c44273efb8c2",
        "text": "Here we explore how we will organise media assets in wiki. We look to serve the files simply from our own [[decentralised media commons]] on [http://assets.permanent.wiki http://assets.permanent.wiki]"
      },
      "date": 1502543257218
    },
    {
      "type": "edit",
      "id": "f5b3c44273efb8c2",
      "item": {
        "type": "paragraph",
        "id": "f5b3c44273efb8c2",
        "text": "Here we explore how we will organise media assets in wiki. "
      },
      "date": 1502543264642
    },
    {
      "type": "add",
      "id": "b3d1ab1bd038d37f",
      "item": {
        "type": "paragraph",
        "id": "b3d1ab1bd038d37f",
        "text": "We look to serve the files simply from our own [[decentralised media commons]] on [http://assets.permanent.wiki http://assets.permanent.wiki]"
      },
      "after": "f5b3c44273efb8c2",
      "date": 1502543265040
    },
    {
      "type": "edit",
      "id": "b3d1ab1bd038d37f",
      "item": {
        "type": "paragraph",
        "id": "b3d1ab1bd038d37f",
        "text": "We look to serve the files simply from:-  [http://assets.permanent.wiki http://assets.permanent.wiki]"
      },
      "date": 1502543299690
    },
    {
      "type": "edit",
      "id": "b3d1ab1bd038d37f",
      "item": {
        "type": "markdown",
        "id": "b3d1ab1bd038d37f",
        "text": "We look to serve the files simply from:-  [http://assets.permanent.wiki http://assets.permanent.wiki]"
      },
      "date": 1502543300836
    },
    {
      "type": "edit",
      "id": "b3d1ab1bd038d37f",
      "item": {
        "type": "markdown",
        "id": "b3d1ab1bd038d37f",
        "text": "We look to serve the files simply from:\n\n-  [http://assets.permanent.wiki http://assets.permanent.wiki]"
      },
      "date": 1502543306321
    },
    {
      "type": "edit",
      "id": "f5b3c44273efb8c2",
      "item": {
        "type": "paragraph",
        "id": "f5b3c44273efb8c2",
        "text": "Here we explore how we will organise media assets in wiki to create our own [[decentralised media commons]] on"
      },
      "date": 1502543324202
    },
    {
      "type": "edit",
      "id": "420394f2bbe6f80d",
      "item": {
        "type": "markdown",
        "id": "420394f2bbe6f80d",
        "text": "# Simple Web Server\nYou can use this theme folder to serve [[Dreamfactory Wiki Assets]]:\n\n- [http://david.outlandish.academy/theme/david.jpg david.jpg ]"
      },
      "date": 1502543350082
    },
    {
      "type": "fork",
      "site": "hosting.permanent.wiki",
      "date": 1517411430656
    }
  ]
}