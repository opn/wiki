{
  "title": "InterPlanetary File System",
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "InterPlanetary File System"
      },
      "date": 1466675669138,
      "source": {
        "pageTitle": "InterPlanetary File System",
        "pageSlug": "InterPlanetary_File_System",
        "url": "https://en.wikipedia.org/wiki/Interplanetary_file_system",
        "date": 1466675669138,
        "link_dictionary": {
          "wiki_links": {
            "Merkle Data Format": {
              "section_number": 2,
              "section_level": 2,
              "dot_number": 2
            },
            "External links": {
              "section_number": 4,
              "section_level": 2,
              "dot_number": 4
            },
            "References": {
              "section_number": 3,
              "section_level": 2,
              "dot_number": 3
            },
            "Description": {
              "section_number": 1,
              "section_level": 2,
              "dot_number": 1
            }
          },
          "default": {
            "transport": "https://livecode.world/mediawiki/importSection"
          }
        },
        "transport": "https://livecode.world/mediawiki/transportAgain",
        "rev": 726249957,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "fork",
      "date": 1466675671582
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f40d7705-3654-425c-9c78-f0eb64334347",
        "text": "IPFS is a peer-to-peer distributed file system that seeks to connect all computing devices with the same system of files. In some ways, IPFS is similar to the [[World Wide Web]], but IPFS could be seen as a single [[BitTorrent]] swarm, exchanging objects within one Git ([[Git (software)]]) repository. In other words, IPFS provides a high-throughput, content-addressed [[block storage]] model, with content-addressed [[hyperlink]]s. This forms a generalized Merkle ([[Merkle tree]]) DAG ([[directed acyclic graph]]). IPFS combines a [[distributed hash table]], an incentivized block exchange, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other.[https://ipfs.io/#how-it-works The IPFS Project - How it works] Distributed Content Delivery saves bandwidth and prevent DDoS attacks which HTTP struggles with - [https://en.wikipedia.org/wiki/Interplanetary_file_system#Description wikipedia]"
      },
      "after": "9b12306f-4793-4324-85e8-74825dcc9be1",
      "id": "f40d7705-3654-425c-9c78-f0eb64334347",
      "date": 1466675679060
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4ea766bd-df49-4abf-8551-82121fb1c50c",
        "text": "The filesystem can be accessed in a variety of ways, including via FUSE ([[Filesystem in Userspace]]) and over [[HTTP]].  A local file can be added to the IPFS filesystem, making it available to the world. Files are identified by their hashes, so it's caching-friendly. They are distributed using a BitTorrent-based protocol.  Other users viewing the content aid in serving the content to others on the network.  IPFS has a name service called IPNS, a global namespace based on PKI ([[public key infrastructure]]), serves to build trust chains, is compatible with other NSes and can map DNS ([[Domain Name System]]), .onion, .bit, etc. to IPNS.[https://github.com/ipfs/ipfs/blob/master/README.md IPFS README]"
      },
      "after": "f40d7705-3654-425c-9c78-f0eb64334347",
      "id": "4ea766bd-df49-4abf-8551-82121fb1c50c",
      "date": 1466675684116
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0feb2758-dcf5-4b29-a23d-ee2bae591264",
        "text": "Every Merkle ([[Merkle tree]]) is a DAG ([[directed acyclic graph]]) because each node is named by a hash algorithm (a [[One-way function]]) which prevents cycles - [https://en.wikipedia.org/wiki/Interplanetary_file_system#Merkle_Data_Format wikipedia]"
      },
      "after": "4ea766bd-df49-4abf-8551-82121fb1c50c",
      "id": "0feb2758-dcf5-4b29-a23d-ee2bae591264",
      "date": 1466675701602
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2f4c88b8-536a-4892-8e28-32291f2f8ae0",
        "text": "Each branch of Merkle ([[Merkle tree]]) is the hash of its local contents, naming childs by their hash instead of their full contents."
      },
      "after": "0feb2758-dcf5-4b29-a23d-ee2bae591264",
      "id": "2f4c88b8-536a-4892-8e28-32291f2f8ae0",
      "date": 1466675704141
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e95f6066-1444-42db-a15d-a3502bda72c5",
        "text": "In general for any Merkle ([[Merkle tree]]), to create a new branch or verify an existing branch, a hash algorithm is used on some combination of the local contents, such as a list of child hashes and other bytes. A few different hash algorithms are available in IPFS."
      },
      "after": "2f4c88b8-536a-4892-8e28-32291f2f8ae0",
      "id": "e95f6066-1444-42db-a15d-a3502bda72c5",
      "date": 1466675706941
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4011bdd4-4657-403e-a66e-15bb9c33c1d5",
        "text": "The data input to any of those hash algorithms is described somewhere around [https://github.com/ipfs/go-ipfs/tree/master/merkledag https://github.com/ipfs/go-ipfs/tree/master/merkledag]"
      },
      "after": "e95f6066-1444-42db-a15d-a3502bda72c5",
      "id": "4011bdd4-4657-403e-a66e-15bb9c33c1d5",
      "date": 1466675710474
    },
    {
      "type": "edit",
      "id": "4ea766bd-df49-4abf-8551-82121fb1c50c",
      "item": {
        "type": "paragraph",
        "id": "4ea766bd-df49-4abf-8551-82121fb1c50c",
        "text": "The filesystem can be accessed in a variety of ways, including via FUSE ([[Filesystem in Userspace]]) and over [[HTTP]].  A local file can be added to the IPFS filesystem, making it available to the world. Files are identified by their hashes, so it's caching-friendly. They are distributed using a BitTorrent-based protocol.  Other users viewing the content aid in serving the content to others on the network.  IPFS has a name service called IPNS, a global namespace based on PKI ([[Public Key Infrastructure]]), serves to build trust chains, is compatible with other NSes and can map DNS ([[Domain Name System]]), .onion, .bit, etc. to IPNS.[https://github.com/ipfs/ipfs/blob/master/README.md IPFS README]"
      },
      "date": 1466675807270
    },
    {
      "type": "edit",
      "id": "0feb2758-dcf5-4b29-a23d-ee2bae591264",
      "item": {
        "type": "paragraph",
        "id": "0feb2758-dcf5-4b29-a23d-ee2bae591264",
        "text": "Every Merkle ([[Merkle Tree]]) is a DAG ([[directed acyclic graph]]) because each node is named by a hash algorithm (a [[One-way function]]) which prevents cycles - [https://en.wikipedia.org/wiki/Interplanetary_file_system#Merkle_Data_Format wikipedia]"
      },
      "date": 1466675835303
    },
    {
      "type": "edit",
      "id": "0feb2758-dcf5-4b29-a23d-ee2bae591264",
      "item": {
        "type": "paragraph",
        "id": "0feb2758-dcf5-4b29-a23d-ee2bae591264",
        "text": "Every Merkle ([[Merkle Tree]]) is a DAG ([[Directed Acyclic Graph]]) because each node is named by a hash algorithm (a [[One-way function]]) which prevents cycles - [https://en.wikipedia.org/wiki/Interplanetary_file_system#Merkle_Data_Format wikipedia]"
      },
      "date": 1466675894121
    },
    {
      "type": "edit",
      "id": "dfc58710-c783-4ef2-a6a2-8ee58faa7a6d",
      "item": {
        "type": "markdown",
        "id": "dfc58710-c783-4ef2-a6a2-8ee58faa7a6d",
        "text": "# See also\n* [[Description]]\n* [[References]]\n* [[External links]]"
      },
      "date": 1466675948058
    },
    {
      "type": "add",
      "id": "3acb5430972759e3",
      "item": {
        "type": "paragraph",
        "id": "3acb5430972759e3",
        "text": "# Merkle Data Formats\n"
      },
      "after": "4ea766bd-df49-4abf-8551-82121fb1c50c",
      "date": 1466675958787
    },
    {
      "type": "edit",
      "id": "3acb5430972759e3",
      "item": {
        "type": "markdown",
        "id": "3acb5430972759e3",
        "text": "# Merkle Data Formats\n"
      },
      "date": 1466675959918
    },
    {
      "type": "edit",
      "id": "dfc58710-c783-4ef2-a6a2-8ee58faa7a6d",
      "item": {
        "type": "markdown",
        "id": "dfc58710-c783-4ef2-a6a2-8ee58faa7a6d",
        "text": "# See also\n"
      },
      "date": 1466675982508
    },
    {
      "type": "edit",
      "id": "f40d7705-3654-425c-9c78-f0eb64334347",
      "item": {
        "type": "paragraph",
        "id": "f40d7705-3654-425c-9c78-f0eb64334347",
        "text": "# Description"
      },
      "date": 1466675996067
    },
    {
      "type": "add",
      "id": "972a37df6dd0f9e2",
      "item": {
        "type": "paragraph",
        "id": "972a37df6dd0f9e2",
        "text": "IPFS is a peer-to-peer distributed file system that seeks to connect all computing devices with the same system of files. In some ways, IPFS is similar to the [[World Wide Web]], but IPFS could be seen as a single [[BitTorrent]] swarm, exchanging objects within one Git ([[Git (software)]]) repository. In other words, IPFS provides a high-throughput, content-addressed [[block storage]] model, with content-addressed [[hyperlink]]s. This forms a generalized Merkle ([[Merkle tree]]) DAG ([[directed acyclic graph]]). IPFS combines a [[distributed hash table]], an incentivized block exchange, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other.[https://ipfs.io/#how-it-works The IPFS Project - How it works] Distributed Content Delivery saves bandwidth and prevent DDoS attacks which HTTP struggles with - [https://en.wikipedia.org/wiki/Interplanetary_file_system#Description wikipedia]"
      },
      "after": "f40d7705-3654-425c-9c78-f0eb64334347",
      "date": 1466675996631
    },
    {
      "type": "edit",
      "id": "f40d7705-3654-425c-9c78-f0eb64334347",
      "item": {
        "type": "markdown",
        "id": "f40d7705-3654-425c-9c78-f0eb64334347",
        "text": "# Description"
      },
      "date": 1466675997804
    },
    {
      "type": "edit",
      "id": "9b12306f-4793-4324-85e8-74825dcc9be1",
      "item": {
        "type": "paragraph",
        "id": "9b12306f-4793-4324-85e8-74825dcc9be1",
        "text": "InterPlanetary File System ([[IPFS]]) is a content-addressable, peer-to-peer hypermedia distribution protocol. Nodes in the IPFS network form a distributed file system. IPFS is an open source project developed by Protocol Labs with help from the open source community. It was initially designed by Juan Benet - [https://en.wikipedia.org/wiki/Interplanetary_file_system wikipedia]"
      },
      "date": 1466676011069
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org"
    },
    {
      "type": "add",
      "item": {
        "id": "3a7360198b072f65",
        "text": "[[Thought Soup]]\n",
        "type": "paragraph"
      },
      "after": "dfc58710-c783-4ef2-a6a2-8ee58faa7a6d",
      "id": "3a7360198b072f65",
      "date": 1490213679536
    },
    {
      "type": "edit",
      "id": "972a37df6dd0f9e2",
      "item": {
        "type": "paragraph",
        "id": "972a37df6dd0f9e2",
        "text": "IPFS is a peer-to-peer distributed file system that seeks to connect all computing devices with the same system of files. In some ways, IPFS is similar to the [[World Wide Web]], but IPFS could be seen as a single [[BitTorrent]] swarm, exchanging objects within one Git ([[Git (software)]]) repository. In other words, IPFS provides a high-throughput, content-addressed [[block storage]] model, with content-addressed [[hyperlink]]s. This forms a generalized Merkle ([[Merkle tree]]) DAG ([[directed acyclic graph]]). "
      },
      "date": 1490213699225
    },
    {
      "type": "add",
      "id": "1f736732a3bf161b",
      "item": {
        "type": "paragraph",
        "id": "1f736732a3bf161b",
        "text": "IPFS combines a [[distributed hash table]], an incentivized block exchange, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other.[https://ipfs.io/#how-it-works The IPFS Project - How it works] Distributed Content Delivery saves bandwidth and prevent DDoS attacks which HTTP struggles with - [https://en.wikipedia.org/wiki/Interplanetary_file_system#Description wikipedia]"
      },
      "after": "972a37df6dd0f9e2",
      "date": 1490213701465
    },
    {
      "type": "edit",
      "id": "1f736732a3bf161b",
      "item": {
        "type": "paragraph",
        "id": "1f736732a3bf161b",
        "text": "IPFS combines a [[distributed hash table]], an incentivized block exchange, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other.- [https://ipfs.io/#how-it-works The IPFS Project - ipfs.io]"
      },
      "date": 1490213739578
    },
    {
      "type": "edit",
      "id": "4ea766bd-df49-4abf-8551-82121fb1c50c",
      "item": {
        "type": "paragraph",
        "id": "4ea766bd-df49-4abf-8551-82121fb1c50c",
        "text": "The filesystem can be accessed in a variety of ways, including via FUSE ([[Filesystem in Userspace]]) and over [[HTTP]].  A local file can be added to the IPFS filesystem, making it available to the world. Files are identified by their hashes, so it's caching-friendly. They are distributed using a BitTorrent-based protocol.  Other users viewing the content aid in serving the content to others on the network.  "
      },
      "date": 1490213749635
    },
    {
      "type": "add",
      "id": "f3a9a8f5fe8e4d2f",
      "item": {
        "type": "paragraph",
        "id": "f3a9a8f5fe8e4d2f",
        "text": "IPFS has a name service called IPNS, a global namespace based on PKI ([[Public Key Infrastructure]]), serves to build trust chains, is compatible with other NSes and can map DNS ([[Domain Name System]]), .onion, .bit, etc. to IPNS.[https://github.com/ipfs/ipfs/blob/master/README.md IPFS README]"
      },
      "after": "4ea766bd-df49-4abf-8551-82121fb1c50c",
      "date": 1490213751755
    },
    {
      "type": "edit",
      "id": "f3a9a8f5fe8e4d2f",
      "item": {
        "type": "paragraph",
        "id": "f3a9a8f5fe8e4d2f",
        "text": "IPFS has a name service called IPNS, a global namespace based on PKI ([[Public Key Infrastructure]]), serves to build trust chains, is compatible with other NSes and can map DNS ([[Domain Name System]]), .onion, .bit, etc. to IPNS - [https://github.com/ipfs/ipfs/blob/master/README.md github]"
      },
      "date": 1490213775596
    },
    {
      "type": "remove",
      "id": "3a7360198b072f65",
      "date": 1490213786563
    },
    {
      "type": "edit",
      "id": "dfc58710-c783-4ef2-a6a2-8ee58faa7a6d",
      "item": {
        "type": "markdown",
        "id": "dfc58710-c783-4ef2-a6a2-8ee58faa7a6d",
        "text": "# See also\n\n- [[Thought Soup]]\n\n"
      },
      "date": 1490213790868
    },
    {
      "type": "fork",
      "site": "david.feast.fm",
      "date": 1490213836011
    },
    {
      "type": "edit",
      "id": "4011bdd4-4657-403e-a66e-15bb9c33c1d5",
      "item": {
        "type": "paragraph",
        "id": "4011bdd4-4657-403e-a66e-15bb9c33c1d5",
        "text": "The data input to any of those hash algorithms is described somewhere around [https://github.com/ipfs/go-ipfs/tree/master/merkledag github]"
      },
      "date": 1493402383523
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "9b12306f-4793-4324-85e8-74825dcc9be1",
      "text": "InterPlanetary File System ([[IPFS]]) is a content-addressable, peer-to-peer hypermedia distribution protocol. Nodes in the IPFS network form a distributed file system. IPFS is an open source project developed by Protocol Labs with help from the open source community. It was initially designed by Juan Benet - [https://en.wikipedia.org/wiki/Interplanetary_file_system wikipedia]"
    },
    {
      "type": "markdown",
      "id": "f40d7705-3654-425c-9c78-f0eb64334347",
      "text": "# Description"
    },
    {
      "type": "paragraph",
      "id": "972a37df6dd0f9e2",
      "text": "IPFS is a peer-to-peer distributed file system that seeks to connect all computing devices with the same system of files. In some ways, IPFS is similar to the [[World Wide Web]], but IPFS could be seen as a single [[BitTorrent]] swarm, exchanging objects within one Git ([[Git (software)]]) repository. In other words, IPFS provides a high-throughput, content-addressed [[block storage]] model, with content-addressed [[hyperlink]]s. This forms a generalized Merkle ([[Merkle tree]]) DAG ([[directed acyclic graph]]). "
    },
    {
      "type": "paragraph",
      "id": "1f736732a3bf161b",
      "text": "IPFS combines a [[distributed hash table]], an incentivized block exchange, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other.- [https://ipfs.io/#how-it-works The IPFS Project - ipfs.io]"
    },
    {
      "type": "paragraph",
      "id": "4ea766bd-df49-4abf-8551-82121fb1c50c",
      "text": "The filesystem can be accessed in a variety of ways, including via FUSE ([[Filesystem in Userspace]]) and over [[HTTP]].  A local file can be added to the IPFS filesystem, making it available to the world. Files are identified by their hashes, so it's caching-friendly. They are distributed using a BitTorrent-based protocol.  Other users viewing the content aid in serving the content to others on the network.  "
    },
    {
      "type": "paragraph",
      "id": "f3a9a8f5fe8e4d2f",
      "text": "IPFS has a name service called IPNS, a global namespace based on PKI ([[Public Key Infrastructure]]), serves to build trust chains, is compatible with other NSes and can map DNS ([[Domain Name System]]), .onion, .bit, etc. to IPNS - [https://github.com/ipfs/ipfs/blob/master/README.md github]"
    },
    {
      "type": "markdown",
      "id": "3acb5430972759e3",
      "text": "# Merkle Data Formats\n"
    },
    {
      "type": "paragraph",
      "id": "0feb2758-dcf5-4b29-a23d-ee2bae591264",
      "text": "Every Merkle ([[Merkle Tree]]) is a DAG ([[Directed Acyclic Graph]]) because each node is named by a hash algorithm (a [[One-way function]]) which prevents cycles - [https://en.wikipedia.org/wiki/Interplanetary_file_system#Merkle_Data_Format wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "2f4c88b8-536a-4892-8e28-32291f2f8ae0",
      "text": "Each branch of Merkle ([[Merkle tree]]) is the hash of its local contents, naming childs by their hash instead of their full contents."
    },
    {
      "type": "paragraph",
      "id": "e95f6066-1444-42db-a15d-a3502bda72c5",
      "text": "In general for any Merkle ([[Merkle tree]]), to create a new branch or verify an existing branch, a hash algorithm is used on some combination of the local contents, such as a list of child hashes and other bytes. A few different hash algorithms are available in IPFS."
    },
    {
      "type": "paragraph",
      "id": "4011bdd4-4657-403e-a66e-15bb9c33c1d5",
      "text": "The data input to any of those hash algorithms is described somewhere around [https://github.com/ipfs/go-ipfs/tree/master/merkledag github]"
    },
    {
      "type": "markdown",
      "id": "dfc58710-c783-4ef2-a6a2-8ee58faa7a6d",
      "text": "# See also\n\n- [[Thought Soup]]\n\n"
    }
  ]
}