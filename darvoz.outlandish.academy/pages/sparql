{
  "journal": [
    {
      "date": 1427715655343,
      "item": {
        "story": "",
        "title": "SPARQL"
      },
      "type": "create"
    },
    {
      "date": 1427715656651,
      "id": "566826224c0bad8c",
      "item": {
        "id": "566826224c0bad8c",
        "type": "factory"
      },
      "type": "add"
    },
    {
      "date": 1427715671915,
      "id": "566826224c0bad8c",
      "item": {
        "id": "566826224c0bad8c",
        "text": "SPARQL (pronounced \"sparkle\", a recursive acronym for SPARQL Protocol and RDF Query Language) is an RDF query language, that is, a semantic query language for databases, able to retrieve and manipulate data stored in Resource Description Framework format.",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "566826224c0bad8c",
      "date": 1427715674739,
      "id": "67abd82f6a3fd494",
      "item": {
        "id": "67abd82f6a3fd494",
        "text": "It was made a standard by the RDF Data Access Working Group (DAWG) of the World Wide Web Consortium, and is recognized as one of the key technologies of the semantic web. On 15 January 2008, SPARQL 1.0 became an official W3C Recommendation,[4][5] and SPARQL 1.1 in March, 2013.[6]\n\nSPARQL allows for a query to consist of triple patterns, conjunctions, disjunctions, and optional patterns.[7]\n\nImplementations for multiple programming languages exist.[8] \"SPARQL will make a huge difference\" making the web machine-readable according to Sir Tim Berners-Lee in a May 2006 interview.[9]\n\nThere exist tools that allow one to connect and semi-automatically construct a SPARQL query for a SPARQL endpoint, for example ViziQuer.[10] In addition, there exist tools that translate SPARQL queries to other query languages, for example to SQL[11] and to XQuery.[12]",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427715723406,
      "id": "566826224c0bad8c",
      "item": {
        "id": "566826224c0bad8c",
        "text": "SPARQL (pronounced \"sparkle\" is an [[RDF Query Language]], that is, a semantic query language for databases, able to retrieve and manipulate data stored in [[RDF]] format.",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "date": 1427715738996,
      "id": "67abd82f6a3fd494",
      "item": {
        "id": "67abd82f6a3fd494",
        "text": "SPARQL allows for a query to consist of triple patterns, conjunctions, disjunctions, and optional patterns.",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "67abd82f6a3fd494",
      "date": 1427715765949,
      "id": "7e83ea17262c17a8",
      "item": {
        "id": "7e83ea17262c17a8",
        "text": "Implementations for multiple programming languages exist. \"SPARQL will make a huge difference\" making the web machine-readable according to [[Tim Berners-Lee]] in a May 2006 interview.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "after": "7e83ea17262c17a8",
      "date": 1427715783057,
      "id": "575ac8f9ae415f49",
      "item": {
        "id": "575ac8f9ae415f49",
        "text": "There exist tools that allow one to connect and semi-automatically construct a SPARQL query for a SPARQL endpoint, for example ViziQuer. In addition, there exist tools that translate SPARQL queries to other query languages, for example to SQL and to XQuery.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427715801518,
      "id": "566826224c0bad8c",
      "item": {
        "id": "566826224c0bad8c",
        "text": "SPARQL (pronounced \"sparkle\" is an [[RDF Query Language]], that is, a semantic query language for databases, able to retrieve and manipulate data stored in [[RDF]] format - [https://en.wikipedia.org/wiki/SPARQL wikipedia]",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "575ac8f9ae415f49",
      "date": 1427715804187,
      "id": "178de7db13668346",
      "item": {
        "id": "178de7db13668346",
        "type": "factory"
      },
      "type": "add"
    },
    {
      "date": 1427715826828,
      "id": "178de7db13668346",
      "item": {
        "id": "178de7db13668346",
        "text": "PREFIX abc: <http://example.com/exampleOntology#>\nSELECT ?capital ?country\nWHERE {\n  ?x abc:cityname ?capital ;\n     abc:isCapitalOf ?y .\n  ?y abc:countryname ?country ;\n     abc:isInContinent abc:Africa .\n}",
        "type": "code"
      },
      "type": "edit"
    },
    {
      "date": 1427715830472,
      "id": "178de7db13668346",
      "order": [
        "566826224c0bad8c",
        "67abd82f6a3fd494",
        "178de7db13668346",
        "7e83ea17262c17a8",
        "575ac8f9ae415f49"
      ],
      "type": "move"
    },
    {
      "after": "67abd82f6a3fd494",
      "date": 1427715840439,
      "id": "23023faca3212f82",
      "item": {
        "id": "23023faca3212f82",
        "text": "Another SPARQL query example that models the question \"What are all the country capitals in Africa?\":\n\n",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427715898004,
      "id": "23023faca3212f82",
      "item": {
        "id": "23023faca3212f82",
        "text": "Another SPARQL query example that models the question:<UL><LI>What are all the country capitals in Africa?</LI></UL>\n\n",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "date": 1427715898772,
      "id": "23023faca3212f82",
      "item": {
        "id": "23023faca3212f82",
        "text": "Another SPARQL query example that models the question:<UL><LI>What are all the country capitals in Africa?</LI></UL>\n\n",
        "type": "html"
      },
      "type": "edit"
    },
    {
      "date": 1427715920195,
      "id": "7e83ea17262c17a8",
      "item": {
        "id": "7e83ea17262c17a8",
        "text": "<H3>Implementations",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "7e83ea17262c17a8",
      "date": 1427715921343,
      "id": "1417dd67490cc44c",
      "item": {
        "id": "1417dd67490cc44c",
        "text": "Implementations for multiple programming languages exist. \"SPARQL will make a huge difference\" making the web machine-readable according to [[Tim Berners-Lee]] in a May 2006 interview.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427715922588,
      "id": "7e83ea17262c17a8",
      "item": {
        "id": "7e83ea17262c17a8",
        "text": "<H3>Implementations",
        "type": "html"
      },
      "type": "edit"
    },
    {
      "after": "67abd82f6a3fd494",
      "date": 1427715939906,
      "id": "2d613365e2b01f0e",
      "item": {
        "id": "2d613365e2b01f0e",
        "text": "<H3>Examples",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427715940955,
      "id": "2d613365e2b01f0e",
      "item": {
        "id": "2d613365e2b01f0e",
        "text": "<H3>Examples",
        "type": "html"
      },
      "type": "edit"
    },
    {
      "after": "575ac8f9ae415f49",
      "date": 1427715954961,
      "id": "e9cac96b6204996b",
      "item": {
        "id": "e9cac96b6204996b",
        "type": "factory"
      },
      "type": "add"
    },
    {
      "date": 1427715959416,
      "id": "e9cac96b6204996b",
      "item": {
        "id": "e9cac96b6204996b",
        "text": "PREFIX foaf: <http://xmlns.com/foaf/0.1/>\nSELECT ?name ?email\nWHERE {\n  ?person a foaf:Person.\n  ?person foaf:name ?name.\n  ?person foaf:mbox ?email.\n}",
        "type": "code"
      },
      "type": "edit"
    },
    {
      "date": 1427715968093,
      "id": "e9cac96b6204996b",
      "order": [
        "566826224c0bad8c",
        "67abd82f6a3fd494",
        "2d613365e2b01f0e",
        "e9cac96b6204996b",
        "23023faca3212f82",
        "178de7db13668346",
        "7e83ea17262c17a8",
        "1417dd67490cc44c",
        "575ac8f9ae415f49"
      ],
      "type": "move"
    },
    {
      "after": "67abd82f6a3fd494",
      "date": 1427715986461,
      "id": "9955f241f7ca7d8e",
      "item": {
        "id": "9955f241f7ca7d8e",
        "text": "The following query returns names and emails of every person in the dataset:",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427715988292,
      "id": "9955f241f7ca7d8e",
      "order": [
        "566826224c0bad8c",
        "67abd82f6a3fd494",
        "2d613365e2b01f0e",
        "9955f241f7ca7d8e",
        "e9cac96b6204996b",
        "23023faca3212f82",
        "178de7db13668346",
        "7e83ea17262c17a8",
        "1417dd67490cc44c",
        "575ac8f9ae415f49"
      ],
      "type": "move"
    },
    {
      "after": "67abd82f6a3fd494",
      "date": 1427716031251,
      "id": "2f01976e1c5cd470",
      "item": {
        "id": "2f01976e1c5cd470",
        "text": "<H3>Use Cases",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "after": "2f01976e1c5cd470",
      "date": 1427716159228,
      "id": "b3fa4d41b4310439",
      "item": {
        "id": "b3fa4d41b4310439",
        "text": "The idea here is that if you want to search from a given [[Federated Wiki Page]] you can simply queery it using SPARQL - so each wiki page becomes a SPARQL end point.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427716162176,
      "id": "2f01976e1c5cd470",
      "item": {
        "id": "2f01976e1c5cd470",
        "text": "<H3>Use Cases",
        "type": "html"
      },
      "type": "edit"
    },
    {
      "after": "b3fa4d41b4310439",
      "date": 1427716263472,
      "id": "8115f8cad67ca182",
      "item": {
        "id": "8115f8cad67ca182",
        "text": "It is not clear what to do, when we have a [[Federated WIki URI]] which displays several wiki-page \"panels\" in a singe web page, but the problem looks to have interesting solutions and uses.",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "after": "8115f8cad67ca182",
      "date": 1427716369037,
      "id": "c73712efeb8b5854",
      "item": {
        "id": "c73712efeb8b5854",
        "text": "Taking the two standard examples of SPARQL query's below, we can imagine looking at a Federated Wiki page that contains an index of people - such as ",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427716503731,
      "id": "c73712efeb8b5854",
      "item": {
        "id": "c73712efeb8b5854",
        "text": "Taking the two standard examples of SPARQL query's below, we can imagine looking at a Federated Wiki page that contains an index of people - such as [[Teaching Machines Sites]] and send a SPARQL query to teaching-machines-sites which asks \"",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "date": 1427716529297,
      "id": "c73712efeb8b5854",
      "item": {
        "id": "c73712efeb8b5854",
        "text": "Taking the two standard examples of SPARQL query's below, we can imagine looking at a Federated Wiki page that contains an index of people - such as [[Teaching Machines Sites]] and send a SPARQL query to teaching-machines-sites which asks \"Give me the names and emails of every person linked to this page\".",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "c73712efeb8b5854",
      "date": 1427716621151,
      "id": "349aa5afda95086c",
      "item": {
        "id": "349aa5afda95086c",
        "text": "Similarly if we are looking at a page about geography that contains a map an index to pages about",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427717569437,
      "id": "349aa5afda95086c",
      "item": {
        "id": "349aa5afda95086c",
        "text": "Similarly if we are looking at a page about geography that contains a map an index to pages about ",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "date": 1427718345368,
      "id": "349aa5afda95086c",
      "item": {
        "id": "349aa5afda95086c",
        "text": "Similarly if we are looking at a page about geography that contains a map and an index to pages about those countries",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "date": 1427719210347,
      "id": "349aa5afda95086c",
      "item": {
        "id": "349aa5afda95086c",
        "text": "Similarly if we are looking at a page about geography that contains a map and an index to pages about those countries - we could ask \"What are all the country capitals in Africa?\" - or an even more specific query.",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "after": "349aa5afda95086c",
      "date": 1427719310291,
      "id": "357040a35001fb61",
      "item": {
        "id": "357040a35001fb61",
        "text": "In this way adding data to wiki=pages and organising them the way you wish, results as a side effect, in the creation of a beautifully anotated and custom crafted database that other people can query in a wide r",
        "type": "paragraph"
      },
      "type": "add"
    },
    {
      "date": 1427719331453,
      "id": "357040a35001fb61",
      "item": {
        "id": "357040a35001fb61",
        "text": "In this way adding data to wiki=pages and organising them the way you wish, results as a side effect, in the creation of a beautifully anotated and custom crafted database that other people can query in a wide range tools.",
        "type": "paragraph"
      },
      "type": "edit"
    },
    {
      "type": "fork",
      "site": "david.outlandish.academy",
      "date": 1517665086847
    },
    {
      "type": "edit",
      "id": "b3fa4d41b4310439",
      "item": {
        "id": "b3fa4d41b4310439",
        "text": "The idea here is that if you want to search from a given [[Federated Wiki]] you can simply query it using SPARQL - so each wiki page becomes a SPARQL end point.",
        "type": "paragraph"
      },
      "date": 1517665910625
    }
  ],
  "story": [
    {
      "id": "566826224c0bad8c",
      "text": "SPARQL (pronounced \"sparkle\" is an [[RDF Query Language]], that is, a semantic query language for databases, able to retrieve and manipulate data stored in [[RDF]] format - [https://en.wikipedia.org/wiki/SPARQL wikipedia]",
      "type": "paragraph"
    },
    {
      "id": "67abd82f6a3fd494",
      "text": "SPARQL allows for a query to consist of triple patterns, conjunctions, disjunctions, and optional patterns.",
      "type": "paragraph"
    },
    {
      "id": "2f01976e1c5cd470",
      "text": "<H3>Use Cases",
      "type": "html"
    },
    {
      "id": "b3fa4d41b4310439",
      "text": "The idea here is that if you want to search from a given [[Federated Wiki]] you can simply query it using SPARQL - so each wiki page becomes a SPARQL end point.",
      "type": "paragraph"
    },
    {
      "id": "8115f8cad67ca182",
      "text": "It is not clear what to do, when we have a [[Federated WIki URI]] which displays several wiki-page \"panels\" in a singe web page, but the problem looks to have interesting solutions and uses.",
      "type": "paragraph"
    },
    {
      "id": "c73712efeb8b5854",
      "text": "Taking the two standard examples of SPARQL query's below, we can imagine looking at a Federated Wiki page that contains an index of people - such as [[Teaching Machines Sites]] and send a SPARQL query to teaching-machines-sites which asks \"Give me the names and emails of every person linked to this page\".",
      "type": "paragraph"
    },
    {
      "id": "349aa5afda95086c",
      "text": "Similarly if we are looking at a page about geography that contains a map and an index to pages about those countries - we could ask \"What are all the country capitals in Africa?\" - or an even more specific query.",
      "type": "paragraph"
    },
    {
      "id": "357040a35001fb61",
      "text": "In this way adding data to wiki=pages and organising them the way you wish, results as a side effect, in the creation of a beautifully anotated and custom crafted database that other people can query in a wide range tools.",
      "type": "paragraph"
    },
    {
      "id": "2d613365e2b01f0e",
      "text": "<H3>Examples",
      "type": "html"
    },
    {
      "id": "9955f241f7ca7d8e",
      "text": "The following query returns names and emails of every person in the dataset:",
      "type": "paragraph"
    },
    {
      "id": "e9cac96b6204996b",
      "text": "PREFIX foaf: <http://xmlns.com/foaf/0.1/>\nSELECT ?name ?email\nWHERE {\n  ?person a foaf:Person.\n  ?person foaf:name ?name.\n  ?person foaf:mbox ?email.\n}",
      "type": "code"
    },
    {
      "id": "23023faca3212f82",
      "text": "Another SPARQL query example that models the question:<UL><LI>What are all the country capitals in Africa?</LI></UL>\n\n",
      "type": "html"
    },
    {
      "id": "178de7db13668346",
      "text": "PREFIX abc: <http://example.com/exampleOntology#>\nSELECT ?capital ?country\nWHERE {\n  ?x abc:cityname ?capital ;\n     abc:isCapitalOf ?y .\n  ?y abc:countryname ?country ;\n     abc:isInContinent abc:Africa .\n}",
      "type": "code"
    },
    {
      "id": "7e83ea17262c17a8",
      "text": "<H3>Implementations",
      "type": "html"
    },
    {
      "id": "1417dd67490cc44c",
      "text": "Implementations for multiple programming languages exist. \"SPARQL will make a huge difference\" making the web machine-readable according to [[Tim Berners-Lee]] in a May 2006 interview.",
      "type": "paragraph"
    },
    {
      "id": "575ac8f9ae415f49",
      "text": "There exist tools that allow one to connect and semi-automatically construct a SPARQL query for a SPARQL endpoint, for example ViziQuer. In addition, there exist tools that translate SPARQL queries to other query languages, for example to SQL and to XQuery.",
      "type": "paragraph"
    }
  ],
  "title": "SPARQL"
}