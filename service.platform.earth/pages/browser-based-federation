{
  "title": "Browser-based Federation",
  "story": [
    {
      "type": "paragraph",
      "id": "32a862688c5e599d",
      "text": "Pure javascript in the browser, combined with [[CORS]] headers, enables federation of content and services leveraging only the browser."
    },
    {
      "type": "paragraph",
      "id": "d9546713ca37c25f",
      "text": "This architecture has the advantage of creating a federated architecture, with only one half of the client-server stack to worry about. Almost any existing server can serve the required json to the federation, and new servers can be written in a few lines of code. All we need to worry about is the development of the wiki-client."
    },
    {
      "type": "paragraph",
      "id": "9c3daac3868f82ad",
      "text": "this simplification also helps enforce federation. The client runs in your browser. All you need is the javascript, and you are able to load the software you need in a local browser to start navigating content from multiple providers."
    },
    {
      "type": "markdown",
      "id": "85df1e7930012c42",
      "text": "# Drawbacks\n"
    },
    {
      "type": "markdown",
      "id": "c4d30286efb2789a",
      "text": "Only being able to use javascript is a current limitation, at least until web assembly enables other languages to be deployed in the browser.\n"
    },
    {
      "type": "markdown",
      "id": "1ce3f633e5d814b0",
      "text": "The wiki-client depends on new plugins to be created for each new service. There is a great deal of simplicity and power in this approach. However being able to integrate existing software stacks into the federation requires a rewrite. This is not such a draw back as it could be due to the extensive nature of the [[npm]] ecosystem."
    },
    {
      "type": "markdown",
      "id": "59df729d77d1d10a",
      "text": "# Conclusion\n"
    },
    {
      "type": "markdown",
      "id": "92d3b287ee898a06",
      "text": "The current browser-based federation has the merit of being pragmatic, modern, simple and light-weight. This approach should not be compromised, and independence of the browser based wiki-client to consume json from whichever source it like maintained.\n\n"
    },
    {
      "type": "markdown",
      "id": "6fd21734dd4536f9",
      "text": "However, this independence, does not and should not preclude an equal and equivalent form of federation taking place in terms of those services that provide json to the wiki-client. In tis way we can envisage doubling the growth-rate of useful services provided to the federation, without either system compromising the independence of the other.\n"
    },
    {
      "type": "markdown",
      "id": "2de30aabfaf4e15b",
      "text": "The federation, so conceived is essentially a [[JSON Pipeline]] of actors that consume, process and send json data structures to each other. In this word the browser is the canonical display device, but not necessarily the only one."
    },
    {
      "type": "markdown",
      "id": "6082af57514c5669",
      "text": "# See also\n\n- [[Three layers of federation]]\n- [[Browser-based Federation]]\n- [[Federated servers]]\n- [[Reclaiming Servers]]\n- [[Decentralised protocols]]\n- [[JSON Pipeline]]\n- [[Decentralized Technology]]\n- [[Platform Earth]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Browser-based Federation",
        "story": []
      },
      "date": 1523453522764
    },
    {
      "item": {
        "type": "factory",
        "id": "32a862688c5e599d"
      },
      "id": "32a862688c5e599d",
      "type": "add",
      "date": 1523453523906
    },
    {
      "type": "edit",
      "id": "32a862688c5e599d",
      "item": {
        "type": "paragraph",
        "id": "32a862688c5e599d",
        "text": "Pure javascript in the browser, combined with DORS headers, enables federation of content and services leveraging only the browser."
      },
      "date": 1523458867752
    },
    {
      "type": "edit",
      "id": "32a862688c5e599d",
      "item": {
        "type": "paragraph",
        "id": "32a862688c5e599d",
        "text": "Pure javascript in the browser, combined with [[CORS]] headers, enables federation of content and services leveraging only the browser."
      },
      "date": 1523458877480
    },
    {
      "type": "add",
      "id": "d9546713ca37c25f",
      "item": {
        "type": "paragraph",
        "id": "d9546713ca37c25f",
        "text": "This architecture has the advantage of creating a federated architecture, with only one half of the client-server stack to worry about. Almost any existing server can serve the required json to the federation, and new servers can be written in a few lines of code. All we need to worry about is the development of the wiki-client."
      },
      "after": "32a862688c5e599d",
      "date": 1523458997882
    },
    {
      "type": "add",
      "id": "9c3daac3868f82ad",
      "item": {
        "type": "paragraph",
        "id": "9c3daac3868f82ad",
        "text": "this simplification also helps enforce federation. The client runs in your browser. All you need is the javascript, and you are able to load the software you need in a local browser to start navigating content from multiple providers."
      },
      "after": "d9546713ca37c25f",
      "date": 1523459064767
    },
    {
      "item": {
        "type": "factory",
        "id": "85df1e7930012c42"
      },
      "id": "85df1e7930012c42",
      "type": "add",
      "after": "9c3daac3868f82ad",
      "date": 1523459384902
    },
    {
      "type": "edit",
      "id": "85df1e7930012c42",
      "item": {
        "type": "markdown",
        "id": "85df1e7930012c42",
        "text": "# Drawbacks\n"
      },
      "date": 1523459390782
    },
    {
      "type": "add",
      "id": "c4d30286efb2789a",
      "item": {
        "type": "markdown",
        "id": "c4d30286efb2789a",
        "text": "Only being able to use javascript is a current limitation, at least until web assembly enables other languages to be deployed in the browser.\n"
      },
      "after": "85df1e7930012c42",
      "date": 1523459440304
    },
    {
      "type": "add",
      "id": "1ce3f633e5d814b0",
      "item": {
        "type": "markdown",
        "id": "1ce3f633e5d814b0",
        "text": "The wiki-client depends on new plugins to be created for each new service. There is a great deal of simplicity and power in this approach. However being able to integrate existing software stacks into the federation requires a rewrite. This is not such a draw back as it could be due to the extensive nature of the [[npm]] ecosystem."
      },
      "after": "c4d30286efb2789a",
      "date": 1523459552179
    },
    {
      "item": {
        "type": "factory",
        "id": "59df729d77d1d10a"
      },
      "id": "59df729d77d1d10a",
      "type": "add",
      "after": "1ce3f633e5d814b0",
      "date": 1523459553571
    },
    {
      "type": "edit",
      "id": "59df729d77d1d10a",
      "item": {
        "type": "markdown",
        "id": "59df729d77d1d10a",
        "text": "# Conclusion\n"
      },
      "date": 1523459563291
    },
    {
      "type": "add",
      "id": "92d3b287ee898a06",
      "item": {
        "type": "markdown",
        "id": "92d3b287ee898a06",
        "text": "The current browser-based federation has the merit of being pragmatic, modern, simple and light-weight. This approach should not be compromised, and independence of the browser based wiki-client to consume json from whichever source it like maintained.\n"
      },
      "after": "59df729d77d1d10a",
      "date": 1523459659288
    },
    {
      "type": "edit",
      "id": "92d3b287ee898a06",
      "item": {
        "type": "markdown",
        "id": "92d3b287ee898a06",
        "text": "The current browser-based federation has the merit of being pragmatic, modern, simple and light-weight. This approach should not be compromised, and independence of the browser based wiki-client to consume json from whichever source it like maintained.\n\n"
      },
      "date": 1523459664543
    },
    {
      "type": "add",
      "id": "6fd21734dd4536f9",
      "item": {
        "type": "markdown",
        "id": "6fd21734dd4536f9",
        "text": "However, this independence, does not and should not preclude an equal and equivalent form of federation taking place in terms of those services that provide json to the wiki-client. In tis way we can envisage doubling the growth-rate of useful services provided to the federation, without either system compromising the independence of the other.\n"
      },
      "after": "92d3b287ee898a06",
      "date": 1523460418959
    },
    {
      "type": "add",
      "id": "2de30aabfaf4e15b",
      "item": {
        "type": "markdown",
        "id": "2de30aabfaf4e15b",
        "text": "The federation, so conceived is essentially a [[JSON Pipeline]] of actors that consume, process and send json data structures to each other. In this word the browser is the canonical display device, but not necessarily the only one."
      },
      "after": "6fd21734dd4536f9",
      "date": 1523460533399
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "6082af57514c5669",
        "text": "# See also\n\n- [[Three layers of federation]]\n- [[Browser-based Federation]]\n- [[Federated servers]]\n- [[Reclaiming Servers]]\n- [[Decentralised protocols]]\n- [[JSON Pipeline]]\n- [[Decentralized Technology]]\n- [[Platform Earth]]"
      },
      "after": "2de30aabfaf4e15b",
      "id": "6082af57514c5669",
      "date": 1523465369210
    },
    {
      "type": "fork",
      "site": "permanent.wiki",
      "date": 1523780116348
    }
  ]
}