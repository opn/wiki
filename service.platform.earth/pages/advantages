{
  "title": "Advantages",
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "Advantages"
      },
      "date": 1523478145192,
      "source": {
        "pageTitle": "Serverless computing",
        "pageSlug": "Serverless computing",
        "url": "https://en.wikipedia.org/wiki/Serverless_Computing#Advantages",
        "date": 1523478145191,
        "transport": "https://livecode.world/mediawiki/transportAgain",
        "rev": 835406190,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "remove",
      "id": "56cd1a5b-4ffa-4e26-b446-262632447206",
      "date": 1523478432031,
      "error": {
        "type": "error",
        "msg": "Not Found",
        "response": "Page not found"
      }
    },
    {
      "type": "fork",
      "date": 1524233254777
    },
    {
      "type": "edit",
      "id": "d8e2f1e7-764f-406f-b0dd-d3285c99414d",
      "item": {
        "type": "paragraph",
        "id": "d8e2f1e7-764f-406f-b0dd-d3285c99414d",
        "text": "This can be described as pay-as-you-go computing or bare-code as you are charged based solely upon the time and memory allocated to run your code; without associated fees for idle time."
      },
      "date": 1524233297741
    },
    {
      "type": "edit",
      "id": "6a6aacd7-9ce8-452b-8065-664615d47046",
      "item": {
        "type": "paragraph",
        "id": "6a6aacd7-9ce8-452b-8065-664615d47046",
        "text": "Serverless is more cost-effective than renting or purchasing a fixed quantity of servers, which generally involves significant periods of underutilization or idle time."
      },
      "date": 1524233313836
    },
    {
      "type": "add",
      "id": "0591a6a669319f7a",
      "item": {
        "type": "paragraph",
        "id": "0591a6a669319f7a",
        "text": "It can even be more cost-efficient than provisioning an autoscaling group ([[autoscaling]]), due to more efficient bin-packing ([[Bin packing problem]]) of the underlying machine resources - [https://en.wikipedia.org/wiki/Serverless_Computing#Advantages wikipedia]"
      },
      "after": "6a6aacd7-9ce8-452b-8065-664615d47046",
      "date": 1524233321341
    },
    {
      "type": "edit",
      "id": "ab466410-2073-4af3-87e5-734f8e2c7312",
      "item": {
        "type": "paragraph",
        "id": "ab466410-2073-4af3-87e5-734f8e2c7312",
        "text": "Immediate cost benefits are related to the lack of operating systems costs, including: licences, installation, dependencies, maintenance, support, and patching."
      },
      "date": 1524233329465
    },
    {
      "type": "edit",
      "id": "2256722e-8dbc-4dbc-b0a1-cbe954136493",
      "item": {
        "type": "paragraph",
        "id": "2256722e-8dbc-4dbc-b0a1-cbe954136493",
        "text": "In addition, a serverless architecture means that developers and operators do not need to spend time setting up and tuning autoscaling policies or systems; the cloud provider is responsible for seamlessly scaling the capacity to the demand - [http://www.bcs.org/content/conWebDoc/58491 Losing the server? Everybody is talking about serverless architecture]. "
      },
      "date": 1524233352939
    },
    {
      "type": "edit",
      "id": "2256722e-8dbc-4dbc-b0a1-cbe954136493",
      "item": {
        "type": "paragraph",
        "id": "2256722e-8dbc-4dbc-b0a1-cbe954136493",
        "text": "In addition, a serverless architecture means that developers and operators do not need to spend time setting up and tuning autoscaling policies or systems; the cloud provider is responsible for seamlessly scaling the capacity to the demand. As Google puts it: ‘from prototype to production to planet-scale.’ - [http://www.bcs.org/content/conWebDoc/58491 bcs.org]"
      },
      "date": 1524233417114
    },
    {
      "type": "edit",
      "id": "d55fc271-3162-4f23-aa5a-2dbe4e75ca93",
      "item": {
        "type": "paragraph",
        "id": "d55fc271-3162-4f23-aa5a-2dbe4e75ca93",
        "text": "Small teams of developers are able to run code themselves without the dependence upon teams of infrastructure and support engineers; more developers are becoming [[DevOps]] skilled and distinctions between being a software developer or hardware engineer are blurring."
      },
      "date": 1524233424586
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "6a6aacd7-9ce8-452b-8065-664615d47046",
      "text": "Serverless is more cost-effective than renting or purchasing a fixed quantity of servers, which generally involves significant periods of underutilization or idle time."
    },
    {
      "type": "paragraph",
      "id": "0591a6a669319f7a",
      "text": "It can even be more cost-efficient than provisioning an autoscaling group ([[autoscaling]]), due to more efficient bin-packing ([[Bin packing problem]]) of the underlying machine resources - [https://en.wikipedia.org/wiki/Serverless_Computing#Advantages wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "d8e2f1e7-764f-406f-b0dd-d3285c99414d",
      "text": "This can be described as pay-as-you-go computing or bare-code as you are charged based solely upon the time and memory allocated to run your code; without associated fees for idle time."
    },
    {
      "type": "paragraph",
      "id": "ab466410-2073-4af3-87e5-734f8e2c7312",
      "text": "Immediate cost benefits are related to the lack of operating systems costs, including: licences, installation, dependencies, maintenance, support, and patching."
    },
    {
      "type": "markdown",
      "id": "fbfbe100-b266-4a8f-8880-dd93e9a21b19",
      "text": "# Operations / Scalability"
    },
    {
      "type": "paragraph",
      "id": "2256722e-8dbc-4dbc-b0a1-cbe954136493",
      "text": "In addition, a serverless architecture means that developers and operators do not need to spend time setting up and tuning autoscaling policies or systems; the cloud provider is responsible for seamlessly scaling the capacity to the demand. As Google puts it: ‘from prototype to production to planet-scale.’ - [http://www.bcs.org/content/conWebDoc/58491 bcs.org]"
    },
    {
      "type": "paragraph",
      "id": "d55fc271-3162-4f23-aa5a-2dbe4e75ca93",
      "text": "Small teams of developers are able to run code themselves without the dependence upon teams of infrastructure and support engineers; more developers are becoming [[DevOps]] skilled and distinctions between being a software developer or hardware engineer are blurring."
    },
    {
      "type": "paragraph",
      "id": "d30817d4-7e6b-472e-b226-07bfcab958d0",
      "text": "With [[Function as a service]], the units of code exposed to the outside world are simple functions ([[subroutine]]). This means that typically, the programmer does not have to worry about multithreading ([[multithreading (software)]]) or directly handling [[HTTP]] requests in their code, simplifying the task of back-end software development."
    }
  ]
}