{
  "title": "Running Shell in Background",
  "story": [
    {
      "type": "paragraph",
      "id": "fa5b9d7468a678f4",
      "text": "Use the & symbol in your command. This will begin the process and immediately return the command line to you, allowing you to use it for other things. "
    },
    {
      "type": "code",
      "id": "5be2852c85bca097",
      "text": "grunt w &"
    },
    {
      "type": "paragraph",
      "id": "1bbcc8c102ab165a",
      "text": "You can think of it as running the command in the background. The process is still connected to the terminal window, so if you close the window, the process will end."
    },
    {
      "type": "paragraph",
      "id": "5496a51efdafce70",
      "text": "Use ( &) around your command. This will run in the background the same as just &, however the process will not be killed when you close the terminal window."
    },
    {
      "type": "code",
      "id": "6c43bc29839766df",
      "text": "(grunt w &)"
    },
    {
      "type": "markdown",
      "id": "835840d6461f18e0",
      "text": "# Using open process"
    },
    {
      "type": "paragraph",
      "id": "21a8f1a2299903cc",
      "text": "There are times when trying to run a shell in the background does not work. The process still returns and waits. in those cases try:"
    },
    {
      "type": "code",
      "id": "2299f4c073092282",
      "text": "## to open the process\nopen process wiki for update\n\n## to close the process\nclose process wiki"
    },
    {
      "type": "markdown",
      "id": "fbe828ce55e2d4c1",
      "text": "# See also"
    },
    {
      "type": "reference",
      "id": "e73576baae45cd43",
      "site": "cli.livecode.world",
      "slug": "screen",
      "title": "Screen",
      "text": "[[Screen]] is a full-screen window manager that multiplexes a physical terminal between several processes, typically interactive shells. "
    },
    {
      "text": "<blockquote><b style='color:orange'>Question: </b>\n\nhow can we run \"grunt serve\" in the background - [https://www.npmjs.com/package/grunt-serve npmjs.com]",
      "id": "20084356ff8e69ce",
      "type": "html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Running Shell in Background",
        "story": []
      },
      "date": 1459438118890
    },
    {
      "item": {
        "type": "factory",
        "id": "fa5b9d7468a678f4"
      },
      "id": "fa5b9d7468a678f4",
      "type": "add",
      "date": 1459438119992
    },
    {
      "type": "edit",
      "id": "fa5b9d7468a678f4",
      "item": {
        "type": "paragraph",
        "id": "fa5b9d7468a678f4",
        "text": "viget.com"
      },
      "date": 1459438125499
    },
    {
      "type": "edit",
      "id": "fa5b9d7468a678f4",
      "item": {
        "type": "paragraph",
        "id": "fa5b9d7468a678f4",
        "text": "Use the & symbol in your command. This will begin the process and immediately return the command line to you, allowing you to use it for other things. "
      },
      "date": 1459438153982
    },
    {
      "type": "add",
      "id": "1bbcc8c102ab165a",
      "item": {
        "type": "paragraph",
        "id": "1bbcc8c102ab165a",
        "text": "You can think of it as running the command in the background. The process is still connected to the terminal window, so if you close the window, the process will end."
      },
      "after": "fa5b9d7468a678f4",
      "date": 1459438156312
    },
    {
      "item": {
        "type": "factory",
        "id": "5be2852c85bca097"
      },
      "id": "5be2852c85bca097",
      "type": "add",
      "after": "5496a51efdafce70",
      "date": 1459438161680
    },
    {
      "type": "add",
      "id": "5496a51efdafce70",
      "item": {
        "type": "paragraph",
        "id": "5496a51efdafce70",
        "text": "Use ( &) around your command. This will run in the background the same as just &, however the process will not be killed when you close the terminal window.\n\n(grunt w &)"
      },
      "after": "1bbcc8c102ab165a",
      "date": 1459438162812
    },
    {
      "type": "edit",
      "id": "5be2852c85bca097",
      "item": {
        "type": "code",
        "id": "5be2852c85bca097",
        "text": "grunt w &"
      },
      "date": 1459438164861
    },
    {
      "item": {
        "type": "factory",
        "id": "6c43bc29839766df"
      },
      "id": "6c43bc29839766df",
      "type": "add",
      "after": "5be2852c85bca097",
      "date": 1459438170390
    },
    {
      "type": "edit",
      "id": "5496a51efdafce70",
      "item": {
        "type": "paragraph",
        "id": "5496a51efdafce70",
        "text": "Use ( &) around your command. This will run in the background the same as just &, however the process will not be killed when you close the terminal window."
      },
      "date": 1459438171699
    },
    {
      "type": "edit",
      "id": "6c43bc29839766df",
      "item": {
        "type": "code",
        "id": "6c43bc29839766df",
        "text": "(grunt w &)"
      },
      "date": 1459438173300
    },
    {
      "type": "move",
      "order": [
        "fa5b9d7468a678f4",
        "5be2852c85bca097",
        "1bbcc8c102ab165a",
        "5496a51efdafce70",
        "6c43bc29839766df"
      ],
      "id": "5be2852c85bca097",
      "date": 1459438175930
    },
    {
      "item": {
        "type": "factory",
        "id": "fbe828ce55e2d4c1"
      },
      "id": "fbe828ce55e2d4c1",
      "type": "add",
      "after": "6c43bc29839766df",
      "date": 1459438196781
    },
    {
      "type": "edit",
      "id": "fbe828ce55e2d4c1",
      "item": {
        "type": "paragraph",
        "id": "fbe828ce55e2d4c1",
        "text": "# screen"
      },
      "date": 1459438203225
    },
    {
      "type": "add",
      "id": "a104764d1521e4af",
      "item": {
        "type": "paragraph",
        "id": "a104764d1521e4af",
        "text": "Screen is a full-screen window manager that multiplexes a physical terminal between several processes, typically interactive shells. Each virtual terminal provides the functions of the DEC VT100 terminal and, in addition, several control functions from the ANSI X3.64 (ISO 6429) and ISO 2022 standards (e.g., insert/delete line and support for multiple character sets). "
      },
      "after": "fbe828ce55e2d4c1",
      "date": 1459438219226
    },
    {
      "type": "add",
      "id": "a0e4c6148f345695",
      "item": {
        "type": "paragraph",
        "id": "a0e4c6148f345695",
        "text": "There is a scrollback history buffer for each virtual terminal and a copy-and-paste mechanism that allows the user to move text regions between windows. When screen is called, it creates a single window with a shell in it (or the specified command) and then gets out of your way so that you can use the program as you normally would. "
      },
      "after": "a104764d1521e4af",
      "date": 1459438227003
    },
    {
      "type": "add",
      "id": "d46871a7749d0679",
      "item": {
        "type": "paragraph",
        "id": "d46871a7749d0679",
        "text": "Then, at any time, you can create new (full-screen) windows with other programs in them (including more shells), kill the current window, view a list of the active windows, turn output logging on and off, copy text between windows, view the scrollback history, switch between windows, etc. All windows run their programs completely independent of each other. Programs continue to run when their window is currently not visible and even when the whole screen session is detached from the users terminal."
      },
      "after": "a0e4c6148f345695",
      "date": 1459438228373
    },
    {
      "type": "edit",
      "id": "fbe828ce55e2d4c1",
      "item": {
        "type": "markdown",
        "id": "fbe828ce55e2d4c1",
        "text": "# screen"
      },
      "date": 1459438229743
    },
    {
      "type": "edit",
      "id": "a104764d1521e4af",
      "item": {
        "type": "paragraph",
        "id": "a104764d1521e4af",
        "text": "[[Screen]] is a full-screen window manager that multiplexes a physical terminal between several processes, typically interactive shells. Each virtual terminal provides the functions of the DEC VT100 terminal and, in addition, several control functions from the ANSI X3.64 (ISO 6429) and ISO 2022 standards (e.g., insert/delete line and support for multiple character sets). "
      },
      "date": 1459438239861
    },
    {
      "type": "edit",
      "id": "a104764d1521e4af",
      "item": {
        "type": "paragraph",
        "id": "a104764d1521e4af",
        "text": "[[Screen]] is a full-screen window manager that multiplexes a physical terminal between several processes, typically interactive shells. Each virtual terminal provides the functions of the DEC VT100 terminal and, in addition, several control functions from the ANSI X3.64 (ISO 6429) and ISO 2022 standards (e.g., insert/delete line and support for multiple character sets) - [https://www.gnu.org/software/screen/ gnu.org]"
      },
      "date": 1459438266142
    },
    {
      "item": {
        "type": "factory",
        "id": "a7f2e24a48d693e5"
      },
      "id": "a7f2e24a48d693e5",
      "type": "add",
      "after": "d46871a7749d0679",
      "date": 1459438478390
    },
    {
      "type": "edit",
      "id": "a7f2e24a48d693e5",
      "item": {
        "type": "paragraph",
        "id": "a7f2e24a48d693e5",
        "text": "[[Question}; how can we run \"grunt serve\" in the background - [https://www.npmjs.com/package/grunt-serve npmjs.com]"
      },
      "date": 1459438512100
    },
    {
      "type": "edit",
      "id": "d46871a7749d0679",
      "item": {
        "type": "paragraph",
        "id": "d46871a7749d0679",
        "text": "Then, at any time, you can create new (full-screen) windows with other programs in them (including more shells), kill the current window, view a list of the active windows, turn output logging on and off, copy text between windows, view the scrollback history, switch between windows, etc. "
      },
      "date": 1459438669696
    },
    {
      "type": "add",
      "id": "84b4238df7ca5f42",
      "item": {
        "type": "paragraph",
        "id": "84b4238df7ca5f42",
        "text": "All windows run their programs completely independent of each other. Programs continue to run when their window is currently not visible and even when the whole screen session is detached from the users terminal."
      },
      "after": "d46871a7749d0679",
      "date": 1459438670112
    },
    {
      "type": "fork",
      "site": "c0de.academy",
      "date": 1464366865238,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1464366882089
    },
    {
      "type": "remove",
      "id": "a104764d1521e4af",
      "date": 1464368078267
    },
    {
      "type": "add",
      "item": {
        "type": "factory",
        "id": "e73576baae45cd43"
      },
      "after": "fbe828ce55e2d4c1",
      "id": "e73576baae45cd43",
      "date": 1464368081038
    },
    {
      "type": "remove",
      "id": "a0e4c6148f345695",
      "date": 1464368083191
    },
    {
      "type": "remove",
      "id": "d46871a7749d0679",
      "date": 1464368085235
    },
    {
      "type": "remove",
      "id": "84b4238df7ca5f42",
      "date": 1464368087143
    },
    {
      "type": "add",
      "item": {
        "text": "<blockquote><b style='color:orange'>Question: </b>\n\nor you can copy this formatting here (as it looks prettier :)\n<p>",
        "id": "20084356ff8e69ce",
        "type": "html"
      },
      "after": "e73576baae45cd43",
      "id": "20084356ff8e69ce",
      "date": 1464368095258
    },
    {
      "type": "remove",
      "id": "a7f2e24a48d693e5",
      "date": 1464368102732
    },
    {
      "type": "edit",
      "id": "20084356ff8e69ce",
      "item": {
        "text": "<blockquote><b style='color:orange'>Question: </b>\n\nhow can we run \"grunt serve\" in the background - [https://www.npmjs.com/package/grunt-serve npmjs.com]",
        "id": "20084356ff8e69ce",
        "type": "html"
      },
      "date": 1464368107854
    },
    {
      "type": "edit",
      "id": "e73576baae45cd43",
      "item": {
        "type": "reference",
        "id": "e73576baae45cd43",
        "site": "cli.livecode.world",
        "slug": "screen",
        "title": "Screen",
        "text": "[[Screen]] is a full-screen window manager that multiplexes a physical terminal between several processes, typically interactive shells. "
      },
      "date": 1464368122022
    },
    {
      "type": "edit",
      "id": "fbe828ce55e2d4c1",
      "item": {
        "type": "markdown",
        "id": "fbe828ce55e2d4c1",
        "text": "# See also"
      },
      "date": 1464368128526
    },
    {
      "item": {
        "type": "factory",
        "id": "835840d6461f18e0"
      },
      "id": "835840d6461f18e0",
      "type": "add",
      "after": "20084356ff8e69ce",
      "date": 1464382497612
    },
    {
      "type": "edit",
      "id": "835840d6461f18e0",
      "item": {
        "type": "markdown",
        "id": "835840d6461f18e0",
        "text": "# Using open process"
      },
      "date": 1464382525769
    },
    {
      "type": "move",
      "order": [
        "fa5b9d7468a678f4",
        "5be2852c85bca097",
        "1bbcc8c102ab165a",
        "5496a51efdafce70",
        "6c43bc29839766df",
        "835840d6461f18e0",
        "fbe828ce55e2d4c1",
        "e73576baae45cd43",
        "20084356ff8e69ce"
      ],
      "id": "835840d6461f18e0",
      "date": 1464382530927
    },
    {
      "item": {
        "type": "factory",
        "id": "21a8f1a2299903cc"
      },
      "id": "21a8f1a2299903cc",
      "type": "add",
      "after": "20084356ff8e69ce",
      "date": 1464382532582
    },
    {
      "type": "move",
      "order": [
        "fa5b9d7468a678f4",
        "5be2852c85bca097",
        "1bbcc8c102ab165a",
        "5496a51efdafce70",
        "6c43bc29839766df",
        "835840d6461f18e0",
        "21a8f1a2299903cc",
        "fbe828ce55e2d4c1",
        "e73576baae45cd43",
        "20084356ff8e69ce"
      ],
      "id": "21a8f1a2299903cc",
      "date": 1464382534492
    },
    {
      "type": "edit",
      "id": "21a8f1a2299903cc",
      "item": {
        "type": "paragraph",
        "id": "21a8f1a2299903cc",
        "text": "There are times when trying to run a shell in the background does not work. The process still returns and waits. in those cases try:"
      },
      "date": 1464382591622
    },
    {
      "item": {
        "type": "factory",
        "id": "2299f4c073092282"
      },
      "id": "2299f4c073092282",
      "type": "add",
      "after": "20084356ff8e69ce",
      "date": 1464382592800
    },
    {
      "type": "move",
      "order": [
        "fa5b9d7468a678f4",
        "5be2852c85bca097",
        "1bbcc8c102ab165a",
        "5496a51efdafce70",
        "6c43bc29839766df",
        "835840d6461f18e0",
        "21a8f1a2299903cc",
        "2299f4c073092282",
        "fbe828ce55e2d4c1",
        "e73576baae45cd43",
        "20084356ff8e69ce"
      ],
      "id": "2299f4c073092282",
      "date": 1464382595897
    },
    {
      "type": "edit",
      "id": "2299f4c073092282",
      "item": {
        "type": "code",
        "id": "2299f4c073092282",
        "text": "## to open the process\nopen process wiki for update\n\n## to close the process\nclose process wiki"
      },
      "date": 1464382638858
    }
  ]
}