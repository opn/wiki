{
  "title": "Istio",
  "story": [
    {
      "type": "paragraph",
      "id": "1a84ea897c055cab",
      "text": "Istio addresses many of the challenges faced by developers and operators as monolithic applications transition towards a distributed microservice architecture. The term [[Service mesh]] is often used to describe the network of microservices that make up such applications and the interactions between them - [https://istio.io/docs/concepts/what-is-istio/overview.html istio.io]"
    },
    {
      "type": "paragraph",
      "id": "b3265c3f1fbf8869",
      "text": "As a service mesh grows in size and complexity, it can become harder to understand and manage. Its requirements can include discovery, load balancing, failure recovery, metrics, and monitoring, and often more complex operational requirements such as A/B testing, canary releases, rate limiting, access control, and end-to-end authentication."
    },
    {
      "type": "paragraph",
      "id": "53dd6f15a6c86066",
      "text": "Istio provides a complete solution to satisfy the diverse requirements of microservice applications by providing behavioral insights and operational control over the service mesh as a whole. It provides a number of key capabilities uniformly across a network of services:"
    },
    {
      "type": "markdown",
      "id": "0e379834b8e75419",
      "text": "# Traffic Management"
    },
    {
      "type": "markdown",
      "id": "319f37db3b9eef5b",
      "text": "Control the flow of traffic and API calls between services, make calls more reliable, and make the network more robust in the face of adverse conditions - [https://istio.io/docs/concepts/traffic-management/ istio.io]\n\n\n"
    },
    {
      "type": "markdown",
      "id": "5f221218b2892d94",
      "text": "# Observability"
    },
    {
      "type": "markdown",
      "id": "e2ae7b927f90396a",
      "text": "Gain understanding of the dependencies between services and the nature and flow of traffic between them, providing the ability to quickly identify issues.\n\n# Policy Enforcement"
    },
    {
      "type": "paragraph",
      "id": "40720bd497e05c66",
      "text": "Apply organizational policy to the interaction between services, ensure access policies are enforced and resources are fairly distributed among consumers. Policy changes are made by configuring the mesh, not by changing application code."
    },
    {
      "type": "markdown",
      "id": "834d49630fe4562c",
      "text": "# Service Identity and Security"
    },
    {
      "type": "paragraph",
      "id": "951f1900009be968",
      "text": "Provide services in the mesh with a verifiable identity and provide the ability to protect service traffic as it flows over networks of varying degrees of trustability.\n\n"
    },
    {
      "type": "paragraph",
      "id": "4a75e024bd3c4d26",
      "text": "In addition to these behaviors, Istio is designed for extensibility to meet diverse deployment needs:\n\n"
    },
    {
      "type": "markdown",
      "id": "f4d8c4374cf35f7b",
      "text": "# Platform Support"
    },
    {
      "type": "paragraph",
      "id": "fda719e419d51aea",
      "text": "Istio is designed to run in a variety of environments including ones that span Cloud, on-premise, Kubernetes, Mesos etc. We’re initially focused on Kubernetes but are working to support other environments soon."
    },
    {
      "type": "markdown",
      "id": "dc1d02923addcf32",
      "text": "# Integration and Customization"
    },
    {
      "type": "markdown",
      "id": "a2f16e311db906e3",
      "text": "The policy enforcement component can be extended and customized to integrate with existing solutions for ACLs, logging, monitoring, quotas, auditing and more.\n\n# Decreased coupling"
    },
    {
      "type": "paragraph",
      "id": "c6a64a061e9d9320",
      "text": "These capabilities greatly decrease the coupling between application code, the underlying platform, and policy. This decreased coupling not only makes services easier to implement, but also makes it simpler for operators to move application deployments between environments or to new policy schemes. Applications become inherently more portable as a result.\n\n"
    },
    {
      "type": "markdown",
      "id": "602aea632184bf31",
      "text": "# See also\n"
    },
    {
      "type": "markdown",
      "id": "fb377bbf505c6fbc",
      "text": "- https://istio.io/docs/concepts/\n- https://istio.io/docs/concepts/what-is-istio/goals.html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Istio",
        "story": []
      },
      "date": 1525327446651
    },
    {
      "item": {
        "type": "factory",
        "id": "1a84ea897c055cab"
      },
      "id": "1a84ea897c055cab",
      "type": "add",
      "date": 1525327447902
    },
    {
      "type": "edit",
      "id": "1a84ea897c055cab",
      "item": {
        "type": "paragraph",
        "id": "1a84ea897c055cab",
        "text": "Istio addresses many of the challenges faced by developers and operators as monolithic applications transition towards a distributed microservice architecture. The term service mesh is often used to describe the network of microservices that make up such applications and the interactions between them. "
      },
      "date": 1525327460794
    },
    {
      "type": "add",
      "id": "b3265c3f1fbf8869",
      "item": {
        "type": "paragraph",
        "id": "b3265c3f1fbf8869",
        "text": "As a service mesh grows in size and complexity, it can become harder to understand and manage. Its requirements can include discovery, load balancing, failure recovery, metrics, and monitoring, and often more complex operational requirements such as A/B testing, canary releases, rate limiting, access control, and end-to-end authentication.\n\nIstio provides a complete solution to satisfy the diverse requirements of microservice applications by providing behavioral insights and operational control over the service mesh as a whole. It provides a number of key capabilities uniformly across a network of services:\n\nTraffic Management. Control the flow of traffic and API calls between services, make calls more reliable, and make the network more robust in the face of adverse conditions.\n\nObservability. Gain understanding of the dependencies between services and the nature and flow of traffic between them, providing the ability to quickly identify issues.\n\nPolicy Enforcement. Apply organizational policy to the interaction between services, ensure access policies are enforced and resources are fairly distributed among consumers. Policy changes are made by configuring the mesh, not by changing application code.\n\nService Identity and Security. Provide services in the mesh with a verifiable identity and provide the ability to protect service traffic as it flows over networks of varying degrees of trustability.\n\nIn addition to these behaviors, Istio is designed for extensibility to meet diverse deployment needs:\n\nPlatform Support. Istio is designed to run in a variety of environments including ones that span Cloud, on-premise, Kubernetes, Mesos etc. We’re initially focused on Kubernetes but are working to support other environments soon.\n\nIntegration and Customization. The policy enforcement component can be extended and customized to integrate with existing solutions for ACLs, logging, monitoring, quotas, auditing and more.\n\nThese capabilities greatly decrease the coupling between application code, the underlying platform, and policy. This decreased coupling not only makes services easier to implement, but also makes it simpler for operators to move application deployments between environments or to new policy schemes. Applications become inherently more portable as a result.\n\n"
      },
      "after": "1a84ea897c055cab",
      "date": 1525327467021
    },
    {
      "type": "edit",
      "id": "1a84ea897c055cab",
      "item": {
        "type": "paragraph",
        "id": "1a84ea897c055cab",
        "text": "Istio addresses many of the challenges faced by developers and operators as monolithic applications transition towards a distributed microservice architecture. The term [[Service mesh]] is often used to describe the network of microservices that make up such applications and the interactions between them. "
      },
      "date": 1525327476184
    },
    {
      "type": "edit",
      "id": "b3265c3f1fbf8869",
      "item": {
        "type": "paragraph",
        "id": "b3265c3f1fbf8869",
        "text": "As a service mesh grows in size and complexity, it can become harder to understand and manage. Its requirements can include discovery, load balancing, failure recovery, metrics, and monitoring, and often more complex operational requirements such as A/B testing, canary releases, rate limiting, access control, and end-to-end authentication."
      },
      "date": 1525327496060
    },
    {
      "type": "add",
      "id": "53dd6f15a6c86066",
      "item": {
        "type": "paragraph",
        "id": "53dd6f15a6c86066",
        "text": "Istio provides a complete solution to satisfy the diverse requirements of microservice applications by providing behavioral insights and operational control over the service mesh as a whole. It provides a number of key capabilities uniformly across a network of services:"
      },
      "after": "b3265c3f1fbf8869",
      "date": 1525327502035
    },
    {
      "type": "add",
      "id": "0e379834b8e75419",
      "item": {
        "type": "paragraph",
        "id": "0e379834b8e75419",
        "text": "# Traffic Management"
      },
      "after": "53dd6f15a6c86066",
      "date": 1525327513189
    },
    {
      "type": "edit",
      "id": "0e379834b8e75419",
      "item": {
        "type": "markdown",
        "id": "0e379834b8e75419",
        "text": "# Traffic Management"
      },
      "date": 1525327514705
    },
    {
      "type": "add",
      "id": "319f37db3b9eef5b",
      "item": {
        "type": "paragraph",
        "id": "319f37db3b9eef5b",
        "text": "Control the flow of traffic and API calls between services, make calls more reliable, and make the network more robust in the face of adverse conditions.\n\n# Observability"
      },
      "after": "0e379834b8e75419",
      "date": 1525327520285
    },
    {
      "type": "edit",
      "id": "319f37db3b9eef5b",
      "item": {
        "type": "markdown",
        "id": "319f37db3b9eef5b",
        "text": "Control the flow of traffic and API calls between services, make calls more reliable, and make the network more robust in the face of adverse conditions.\n\n# Observability"
      },
      "date": 1525327521519
    },
    {
      "type": "add",
      "id": "e2ae7b927f90396a",
      "item": {
        "type": "paragraph",
        "id": "e2ae7b927f90396a",
        "text": "Gain understanding of the dependencies between services and the nature and flow of traffic between them, providing the ability to quickly identify issues.\n\n# Policy Enforcement"
      },
      "after": "319f37db3b9eef5b",
      "date": 1525327528317
    },
    {
      "type": "edit",
      "id": "e2ae7b927f90396a",
      "item": {
        "type": "markdown",
        "id": "e2ae7b927f90396a",
        "text": "Gain understanding of the dependencies between services and the nature and flow of traffic between them, providing the ability to quickly identify issues.\n\n# Policy Enforcement"
      },
      "date": 1525327529753
    },
    {
      "type": "add",
      "id": "40720bd497e05c66",
      "item": {
        "type": "paragraph",
        "id": "40720bd497e05c66",
        "text": "Apply organizational policy to the interaction between services, ensure access policies are enforced and resources are fairly distributed among consumers. Policy changes are made by configuring the mesh, not by changing application code."
      },
      "after": "e2ae7b927f90396a",
      "date": 1525327536481
    },
    {
      "type": "add",
      "id": "834d49630fe4562c",
      "item": {
        "type": "paragraph",
        "id": "834d49630fe4562c",
        "text": "# Service Identity and Security"
      },
      "after": "40720bd497e05c66",
      "date": 1525327543132
    },
    {
      "type": "edit",
      "id": "834d49630fe4562c",
      "item": {
        "type": "markdown",
        "id": "834d49630fe4562c",
        "text": "# Service Identity and Security"
      },
      "date": 1525327544552
    },
    {
      "type": "add",
      "id": "951f1900009be968",
      "item": {
        "type": "paragraph",
        "id": "951f1900009be968",
        "text": "Provide services in the mesh with a verifiable identity and provide the ability to protect service traffic as it flows over networks of varying degrees of trustability.\n\n"
      },
      "after": "834d49630fe4562c",
      "date": 1525327548901
    },
    {
      "type": "add",
      "id": "4a75e024bd3c4d26",
      "item": {
        "type": "paragraph",
        "id": "4a75e024bd3c4d26",
        "text": "In addition to these behaviors, Istio is designed for extensibility to meet diverse deployment needs:\n\n"
      },
      "after": "951f1900009be968",
      "date": 1525327568603
    },
    {
      "type": "add",
      "id": "f4d8c4374cf35f7b",
      "item": {
        "type": "paragraph",
        "id": "f4d8c4374cf35f7b",
        "text": "# Platform Support"
      },
      "after": "4a75e024bd3c4d26",
      "date": 1525327571590
    },
    {
      "type": "edit",
      "id": "f4d8c4374cf35f7b",
      "item": {
        "type": "markdown",
        "id": "f4d8c4374cf35f7b",
        "text": "# Platform Support"
      },
      "date": 1525327572851
    },
    {
      "type": "add",
      "id": "fda719e419d51aea",
      "item": {
        "type": "paragraph",
        "id": "fda719e419d51aea",
        "text": "Istio is designed to run in a variety of environments including ones that span Cloud, on-premise, Kubernetes, Mesos etc. We’re initially focused on Kubernetes but are working to support other environments soon."
      },
      "after": "f4d8c4374cf35f7b",
      "date": 1525327576518
    },
    {
      "type": "add",
      "id": "dc1d02923addcf32",
      "item": {
        "type": "paragraph",
        "id": "dc1d02923addcf32",
        "text": "# Integration and Customization"
      },
      "after": "fda719e419d51aea",
      "date": 1525327585807
    },
    {
      "type": "edit",
      "id": "dc1d02923addcf32",
      "item": {
        "type": "markdown",
        "id": "dc1d02923addcf32",
        "text": "# Integration and Customization"
      },
      "date": 1525327587206
    },
    {
      "type": "add",
      "id": "a2f16e311db906e3",
      "item": {
        "type": "paragraph",
        "id": "a2f16e311db906e3",
        "text": "The policy enforcement component can be extended and customized to integrate with existing solutions for ACLs, logging, monitoring, quotas, auditing and more.\n\n# Decreased coupling"
      },
      "after": "dc1d02923addcf32",
      "date": 1525327624433
    },
    {
      "type": "edit",
      "id": "a2f16e311db906e3",
      "item": {
        "type": "markdown",
        "id": "a2f16e311db906e3",
        "text": "The policy enforcement component can be extended and customized to integrate with existing solutions for ACLs, logging, monitoring, quotas, auditing and more.\n\n# Decreased coupling"
      },
      "date": 1525327625743
    },
    {
      "type": "add",
      "id": "c6a64a061e9d9320",
      "item": {
        "type": "paragraph",
        "id": "c6a64a061e9d9320",
        "text": "These capabilities greatly decrease the coupling between application code, the underlying platform, and policy. This decreased coupling not only makes services easier to implement, but also makes it simpler for operators to move application deployments between environments or to new policy schemes. Applications become inherently more portable as a result.\n\n"
      },
      "after": "a2f16e311db906e3",
      "date": 1525327626278
    },
    {
      "type": "edit",
      "id": "1a84ea897c055cab",
      "item": {
        "type": "paragraph",
        "id": "1a84ea897c055cab",
        "text": "Istio addresses many of the challenges faced by developers and operators as monolithic applications transition towards a distributed microservice architecture. The term [[Service mesh]] is often used to describe the network of microservices that make up such applications and the interactions between them - [https://istio.io/docs/concepts/what-is-istio/overview.html istio.io]"
      },
      "date": 1525327648415
    },
    {
      "item": {
        "type": "factory",
        "id": "602aea632184bf31"
      },
      "id": "602aea632184bf31",
      "type": "add",
      "after": "c6a64a061e9d9320",
      "date": 1525327702462
    },
    {
      "type": "edit",
      "id": "602aea632184bf31",
      "item": {
        "type": "markdown",
        "id": "602aea632184bf31",
        "text": "# See also\n"
      },
      "date": 1525327711336
    },
    {
      "type": "add",
      "id": "fb377bbf505c6fbc",
      "item": {
        "type": "markdown",
        "id": "fb377bbf505c6fbc",
        "text": "- https://istio.io/docs/concepts/"
      },
      "after": "602aea632184bf31",
      "date": 1525327712777
    },
    {
      "type": "edit",
      "id": "319f37db3b9eef5b",
      "item": {
        "type": "markdown",
        "id": "319f37db3b9eef5b",
        "text": "Control the flow of traffic and API calls between services, make calls more reliable, and make the network more robust in the face of adverse conditions.\n\n\n"
      },
      "date": 1525327729683
    },
    {
      "type": "add",
      "id": "5f221218b2892d94",
      "item": {
        "type": "markdown",
        "id": "5f221218b2892d94",
        "text": "# Observability"
      },
      "after": "319f37db3b9eef5b",
      "date": 1525327731074
    },
    {
      "type": "edit",
      "id": "319f37db3b9eef5b",
      "item": {
        "type": "markdown",
        "id": "319f37db3b9eef5b",
        "text": "Control the flow of traffic and API calls between services, make calls more reliable, and make the network more robust in the face of adverse conditions - [https://istio.io/docs/concepts/traffic-management/ istio.io]\n\n\n"
      },
      "date": 1525327743537
    },
    {
      "type": "edit",
      "id": "fb377bbf505c6fbc",
      "item": {
        "type": "markdown",
        "id": "fb377bbf505c6fbc",
        "text": "- https://istio.io/docs/concepts/\n- https://istio.io/docs/concepts/what-is-istio/goals.html"
      },
      "date": 1525327889536
    }
  ]
}