{
  "title": "Graphviz",
  "story": [
    {
      "type": "paragraph",
      "id": "01ada1aa87b7822f",
      "text": "I've mostly used the dot component of the suite of graph rendering programs."
    },
    {
      "type": "html",
      "id": "99a47552c2f61ce3",
      "text": "<h3> Works"
    },
    {
      "type": "paragraph",
      "id": "56824398c63132fd",
      "text": "[[Claims]] rendered as interlinked sentences with arcs emerging from key words."
    },
    {
      "type": "paragraph",
      "id": "5445d277386ded63",
      "text": "[[Contiguous USA]] exercised dot's layout engine by recreating geography from topology."
    },
    {
      "type": "paragraph",
      "id": "3f4fe6a7550cc4d0",
      "text": "[[XML Import in Ruby]] where I first started producing intermediate snapshots in dot as a large program runs."
    },
    {
      "type": "paragraph",
      "id": "ea863d5c394488e5",
      "text": "[[IRLP Script Call Map]] scraped from idiomatic script invocations I could find with perl."
    },
    {
      "type": "paragraph",
      "id": "055df0010034d7b3",
      "text": "[[Exploratory Parsing]] where parse statistics offer drill down through clickable counts on arcs."
    },
    {
      "type": "paragraph",
      "id": "e91aa7a54fd8a23f",
      "text": "[[Excel Parslets]] scraped excel workbooks exported in custom json to plot data flow across spreadsheets. "
    },
    {
      "type": "paragraph",
      "id": "f56fd405ceeaa09d",
      "text": "[[Animals Decision Tree in Dot]] created as an illustration for this portfolio."
    },
    {
      "type": "html",
      "id": "02e160b468620d5c",
      "text": "<h3> Technique"
    },
    {
      "type": "paragraph",
      "id": "024c500b837e0764",
      "text": "I'm usually writing short scripts that read data of my own or others. In a second pass, I emit that data in dot format."
    },
    {
      "type": "paragraph",
      "id": "6957a59bc7cd42ec",
      "text": "I've spent a lot of time coaxing my scripts to not output duplicate arcs. I've only noticed recently that if I declare a strict digraph graphviz will omit duplicates for me."
    },
    {
      "type": "paragraph",
      "id": "fefdd9f2e8a5994b",
      "text": "I have trouble remembering simple things, like how to make nodes other than white. I now maintain a wiki page of [[Graphviz Idioms]]."
    },
    {
      "type": "paragraph",
      "id": "198b8cd84128eb21",
      "text": "Use this transporter to create a single page drawing the graph in the lineup so far."
    },
    {
      "type": "transport",
      "id": "3fe77af6f4aa7db2",
      "text": "GRAPH POST http://home.c2.com:4010/graphviz"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Graphviz",
        "story": []
      },
      "date": 1391614793089
    },
    {
      "item": {
        "type": "factory",
        "id": "01ada1aa87b7822f"
      },
      "id": "01ada1aa87b7822f",
      "type": "add",
      "date": 1391614803883
    },
    {
      "type": "edit",
      "id": "01ada1aa87b7822f",
      "item": {
        "type": "paragraph",
        "id": "01ada1aa87b7822f",
        "text": "I've mostly used the dot component of the suite of graph rendering programs."
      },
      "date": 1391614865898
    },
    {
      "item": {
        "type": "paragraph",
        "id": "869d370f9aa13456",
        "text": ""
      },
      "id": "869d370f9aa13456",
      "type": "add",
      "after": "01ada1aa87b7822f",
      "date": 1391614866404
    },
    {
      "type": "remove",
      "id": "869d370f9aa13456",
      "date": 1391614876126
    },
    {
      "item": {
        "type": "factory",
        "id": "ea863d5c394488e5"
      },
      "id": "ea863d5c394488e5",
      "type": "add",
      "after": "01ada1aa87b7822f",
      "date": 1391614891538
    },
    {
      "type": "edit",
      "id": "ea863d5c394488e5",
      "item": {
        "type": "paragraph",
        "id": "ea863d5c394488e5",
        "text": "[[IRLP Script Call Map]] scraped from idiomatic script invocations I could find with perl."
      },
      "date": 1391614942376
    },
    {
      "item": {
        "type": "factory",
        "id": "e91aa7a54fd8a23f"
      },
      "id": "e91aa7a54fd8a23f",
      "type": "add",
      "after": "ea863d5c394488e5",
      "date": 1391614984958
    },
    {
      "type": "edit",
      "id": "e91aa7a54fd8a23f",
      "item": {
        "type": "paragraph",
        "id": "e91aa7a54fd8a23f",
        "text": "[[Excel Parslets]] scraped excel workbooks exported in custom json. "
      },
      "date": 1391615032965
    },
    {
      "type": "edit",
      "id": "e91aa7a54fd8a23f",
      "item": {
        "type": "paragraph",
        "id": "e91aa7a54fd8a23f",
        "text": "[[Excel Parslets]] scraped excel workbooks exported in custom json to plot data flow across spreadsheets. "
      },
      "date": 1391615056866
    },
    {
      "item": {
        "type": "factory",
        "id": "5445d277386ded63"
      },
      "id": "5445d277386ded63",
      "type": "add",
      "after": "e91aa7a54fd8a23f",
      "date": 1391615096460
    },
    {
      "type": "edit",
      "id": "5445d277386ded63",
      "item": {
        "type": "paragraph",
        "id": "5445d277386ded63",
        "text": "[[Contiguous USA]] exercised dot's layout engine by recreating geography from topology."
      },
      "date": 1391615160385
    },
    {
      "item": {
        "type": "factory",
        "id": "f56fd405ceeaa09d"
      },
      "id": "f56fd405ceeaa09d",
      "type": "add",
      "after": "5445d277386ded63",
      "date": 1391615213626
    },
    {
      "type": "edit",
      "id": "f56fd405ceeaa09d",
      "item": {
        "type": "paragraph",
        "id": "f56fd405ceeaa09d",
        "text": "[[Animals Decision Tree in Dot]] created as an illustration for this portfolio."
      },
      "date": 1391615254502
    },
    {
      "item": {
        "type": "factory",
        "id": "56824398c63132fd"
      },
      "id": "56824398c63132fd",
      "type": "add",
      "after": "f56fd405ceeaa09d",
      "date": 1391615314473
    },
    {
      "type": "edit",
      "id": "56824398c63132fd",
      "item": {
        "type": "paragraph",
        "id": "56824398c63132fd",
        "text": "claims"
      },
      "date": 1391615321484
    },
    {
      "item": {
        "type": "paragraph",
        "id": "055df0010034d7b3",
        "text": ""
      },
      "id": "055df0010034d7b3",
      "type": "add",
      "after": "56824398c63132fd",
      "date": 1391615321991
    },
    {
      "type": "edit",
      "id": "055df0010034d7b3",
      "item": {
        "type": "paragraph",
        "id": "055df0010034d7b3",
        "text": "exploratory parsing"
      },
      "date": 1391615355483
    },
    {
      "type": "edit",
      "id": "055df0010034d7b3",
      "item": {
        "type": "paragraph",
        "id": "055df0010034d7b3",
        "text": "[[Exploratory Parsing]] where parse statistics offer drill down through clickable counts on arcs."
      },
      "date": 1391615556071
    },
    {
      "type": "move",
      "order": [
        "01ada1aa87b7822f",
        "ea863d5c394488e5",
        "e91aa7a54fd8a23f",
        "5445d277386ded63",
        "f56fd405ceeaa09d",
        "055df0010034d7b3",
        "56824398c63132fd"
      ],
      "id": "055df0010034d7b3",
      "date": 1391615560628
    },
    {
      "type": "edit",
      "id": "56824398c63132fd",
      "item": {
        "type": "paragraph",
        "id": "56824398c63132fd",
        "text": "[[Claims]] rendered as interlinked sentences with arcs emerging from key words."
      },
      "date": 1391615820323
    },
    {
      "item": {
        "type": "factory",
        "id": "02e160b468620d5c"
      },
      "id": "02e160b468620d5c",
      "type": "add",
      "after": "56824398c63132fd",
      "date": 1391616021066
    },
    {
      "type": "edit",
      "id": "02e160b468620d5c",
      "item": {
        "type": "paragraph",
        "id": "02e160b468620d5c",
        "text": "<h3> Technique"
      },
      "date": 1391616031100
    },
    {
      "item": {
        "type": "paragraph",
        "id": "99a47552c2f61ce3",
        "text": ""
      },
      "id": "99a47552c2f61ce3",
      "type": "add",
      "after": "01ada1aa87b7822f",
      "date": 1391616037103
    },
    {
      "type": "edit",
      "id": "99a47552c2f61ce3",
      "item": {
        "type": "paragraph",
        "id": "99a47552c2f61ce3",
        "text": "<h3> Works"
      },
      "date": 1391616043716
    },
    {
      "item": {
        "type": "paragraph",
        "id": "024c500b837e0764",
        "text": ""
      },
      "id": "024c500b837e0764",
      "type": "add",
      "after": "02e160b468620d5c",
      "date": 1391616049575
    },
    {
      "type": "edit",
      "id": "024c500b837e0764",
      "item": {
        "type": "paragraph",
        "id": "024c500b837e0764",
        "text": "I'm usually writing short scripts that read data of my own or others. In a second pass, I emit that data in dot format."
      },
      "date": 1391616117493
    },
    {
      "item": {
        "type": "paragraph",
        "id": "6957a59bc7cd42ec",
        "text": ""
      },
      "id": "6957a59bc7cd42ec",
      "type": "add",
      "after": "024c500b837e0764",
      "date": 1391616118002
    },
    {
      "type": "edit",
      "id": "6957a59bc7cd42ec",
      "item": {
        "type": "paragraph",
        "id": "6957a59bc7cd42ec",
        "text": "I've spent a lot of time coaxing my scripts to not output duplicate arcs. I've only noticed recently that if I declare a <i>strict digraph</i> graphviz will omit duplicates for me."
      },
      "date": 1391616196687
    },
    {
      "item": {
        "type": "paragraph",
        "id": "fefdd9f2e8a5994b",
        "text": ""
      },
      "id": "fefdd9f2e8a5994b",
      "type": "add",
      "after": "6957a59bc7cd42ec",
      "date": 1391616197194
    },
    {
      "type": "edit",
      "id": "fefdd9f2e8a5994b",
      "item": {
        "type": "paragraph",
        "id": "fefdd9f2e8a5994b",
        "text": "I have trouble remembering simple things, like how to make nodes other than white. I now maintain a wiki page of [[Graphviz Idioms]]."
      },
      "date": 1391616255972
    },
    {
      "type": "move",
      "order": [
        "01ada1aa87b7822f",
        "99a47552c2f61ce3",
        "56824398c63132fd",
        "ea863d5c394488e5",
        "e91aa7a54fd8a23f",
        "5445d277386ded63",
        "f56fd405ceeaa09d",
        "055df0010034d7b3",
        "02e160b468620d5c",
        "024c500b837e0764",
        "6957a59bc7cd42ec",
        "fefdd9f2e8a5994b"
      ],
      "id": "56824398c63132fd",
      "date": 1391616290521
    },
    {
      "type": "move",
      "order": [
        "01ada1aa87b7822f",
        "99a47552c2f61ce3",
        "56824398c63132fd",
        "5445d277386ded63",
        "ea863d5c394488e5",
        "e91aa7a54fd8a23f",
        "f56fd405ceeaa09d",
        "055df0010034d7b3",
        "02e160b468620d5c",
        "024c500b837e0764",
        "6957a59bc7cd42ec",
        "fefdd9f2e8a5994b"
      ],
      "id": "5445d277386ded63",
      "date": 1391616299273
    },
    {
      "type": "move",
      "order": [
        "01ada1aa87b7822f",
        "99a47552c2f61ce3",
        "56824398c63132fd",
        "5445d277386ded63",
        "ea863d5c394488e5",
        "055df0010034d7b3",
        "e91aa7a54fd8a23f",
        "f56fd405ceeaa09d",
        "02e160b468620d5c",
        "024c500b837e0764",
        "6957a59bc7cd42ec",
        "fefdd9f2e8a5994b"
      ],
      "id": "055df0010034d7b3",
      "date": 1391616306754
    },
    {
      "item": {
        "type": "paragraph",
        "id": "3f4fe6a7550cc4d0",
        "text": ""
      },
      "id": "3f4fe6a7550cc4d0",
      "type": "add",
      "after": "5445d277386ded63",
      "date": 1391617599220
    },
    {
      "type": "edit",
      "id": "3f4fe6a7550cc4d0",
      "item": {
        "type": "paragraph",
        "id": "3f4fe6a7550cc4d0",
        "text": "[[XML Import in Ruby]] where I first started producing intermediate snapshots in dot as a large program runs."
      },
      "date": 1391617629920
    },
    {
      "type": "edit",
      "id": "99a47552c2f61ce3",
      "item": {
        "type": "html",
        "id": "99a47552c2f61ce3",
        "text": "<h3> Works"
      },
      "date": 1420389903890
    },
    {
      "type": "edit",
      "id": "02e160b468620d5c",
      "item": {
        "type": "html",
        "id": "02e160b468620d5c",
        "text": "<h3> Technique"
      },
      "date": 1420389907263
    },
    {
      "type": "edit",
      "id": "6957a59bc7cd42ec",
      "item": {
        "type": "paragraph",
        "id": "6957a59bc7cd42ec",
        "text": "I've spent a lot of time coaxing my scripts to not output duplicate arcs. I've only noticed recently that if I declare a strict digraph graphviz will omit duplicates for me."
      },
      "date": 1420389926381
    },
    {
      "type": "fork",
      "site": "code.fed.wiki.org",
      "date": 1511882939999
    },
    {
      "type": "add",
      "item": {
        "type": "transport",
        "id": "3fe77af6f4aa7db2",
        "text": "GRAPH POST http://home.c2.com:4010/graphviz"
      },
      "after": "fefdd9f2e8a5994b",
      "id": "3fe77af6f4aa7db2",
      "date": 1511883305234
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "198b8cd84128eb21",
        "text": "Use this transporter to create a single page drawing the graph in the lineup so far."
      },
      "after": "fefdd9f2e8a5994b",
      "id": "198b8cd84128eb21",
      "date": 1511883307906
    }
  ]
}