{
  "title": "Viewing Graphviz with Javascript",
  "story": [
    {
      "type": "paragraph",
      "id": "811a900c92839a5d",
      "text": "I'd like to view a [[graphviz]] file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter. "
    },
    {
      "type": "paragraph",
      "id": "922cb3cf0d44c664",
      "text": "What's with svg anyway? It's not an SVG issue. SVG's work fine. They embed and display fine. We have built in interactivity. We can author and enhance them with powerful manual and scripting tools. They are great."
    },
    {
      "type": "paragraph",
      "id": "ff6e66588f828316",
      "text": "The isseu is with how the wiki-client is trapping events and not allowing the browser to handle the url linkes."
    },
    {
      "type": "reference",
      "id": "46f9222300f0bee0",
      "site": "future.fedwiki.org",
      "slug": "svg",
      "title": "SVG",
      "text": "Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation - [https://en.wikipedia.org/wiki/Scalable_Vector_Graphics#Functionality wikipedia]"
    },
    {
      "type": "html",
      "id": "837e7246b6eb20dd",
      "text": "<H3>Client Side Solution"
    },
    {
      "type": "paragraph",
      "id": "badc89d5f4c3d71e",
      "text": "A client side solution has some advantages. you can tweak the code in the browser. You can quickly role simple diagrams. "
    },
    {
      "type": "paragraph",
      "id": "3b394fb4353482f0",
      "text": "Client side solutions suffers from the lack of ability to bring the image into a nice drawing package and edit it to make it clean and simple before returning it to the wiki. That is what [[SVG]]'s are good for."
    },
    {
      "type": "paragraph",
      "id": "a6cd84e835999196",
      "text": "However the best current javascript client side implementation is:"
    },
    {
      "type": "reference",
      "id": "b1ae5094ed9967c7",
      "site": "future.fedwiki.org",
      "slug": "dagre",
      "title": "Dagre",
      "text": "Dagre is a JavaScript library that makes it easy to lay out directed graphs on the client-side."
    },
    {
      "type": "html",
      "id": "f5bbd2a54d88ab35",
      "text": "<H3>Experimental Solutions"
    },
    {
      "type": "paragraph",
      "id": "5f42a7333dc007ee",
      "text": "Viz.js ports graphviz to js with emscripten. This sounds like the wrong way to go but they do have nice examples. [https://github.com/mdaines/viz.js/ github]"
    },
    {
      "type": "html",
      "id": "1a6be0b38bce9217",
      "text": "<H3>Older Solutions"
    },
    {
      "type": "paragraph",
      "id": "e5d76116df831ea0",
      "text": "Canviz is a JavaScript library for drawing Graphviz graphs to a web browser canvas. More technically, Canviz is a JavaScript xdot renderer. It works in most modern browsers. [https://code.google.com/p/canviz/ google code]"
    },
    {
      "type": "paragraph",
      "id": "b398b0c08d8d96ae",
      "text": "Canvg is a SVG parser and renderer. It takes a URL to a SVG file or the text of an SVG file, parses it in JavaScript, and renders the result on a Canvas element. The rendering speed of the examples is about as fast as native SVG. [https://github.com/gabelerner/canvg github]"
    },
    {
      "type": "reference",
      "id": "7a8802a13b70c67b",
      "site": "david.viral.academy",
      "slug": "javascript-graph-libraries",
      "title": "Javascript Graph Libraries",
      "text": "Dagre (Directed graph renderer for Javascript) - [https://github.com/cpettitt/dagre github.com]"
    },
    {
      "type": "reference",
      "id": "8a82f7f05ced1cd7",
      "site": "c0de.academy",
      "slug": "graphoid-service",
      "title": "Graphoid Service",
      "text": "Graphoid (git repo) is a node.js service that converts a graph definition into a static PNG image using the same Vega library code that runs in advanced browsers. The service is available on the Wikimedia cluster at graphoid.wikimedia.org - [https://www.mediawiki.org/wiki/Extension:Graph#Graphoid_service mediawiki.org]"
    },
    {
      "type": "reference",
      "id": "6fdf378a73662fe7",
      "site": "c0de.academy",
      "slug": "vega",
      "title": "Vega",
      "text": "Vega is a visualization grammar, a declarative format for creating, saving and sharing interactive visualization designs. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Viewing Graphviz with Javascript",
        "story": []
      },
      "date": 1422304013788
    },
    {
      "item": {
        "type": "factory",
        "id": "811a900c92839a5d"
      },
      "id": "811a900c92839a5d",
      "type": "add",
      "date": 1422304015235
    },
    {
      "type": "edit",
      "id": "811a900c92839a5d",
      "item": {
        "type": "paragraph",
        "id": "811a900c92839a5d",
        "text": "I'd like to view a graphviz file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter."
      },
      "date": 1422304094483
    },
    {
      "item": {
        "type": "factory",
        "id": "1a6be0b38bce9217"
      },
      "id": "1a6be0b38bce9217",
      "type": "add",
      "after": "811a900c92839a5d",
      "date": 1422304096798
    },
    {
      "type": "edit",
      "id": "1a6be0b38bce9217",
      "item": {
        "type": "paragraph",
        "id": "1a6be0b38bce9217",
        "text": "Canviz is a JavaScript library for drawing Graphviz graphs to a web browser canvas. More technically, Canviz is a JavaScript xdot renderer. It works in most modern browsers."
      },
      "date": 1422304123844
    },
    {
      "type": "edit",
      "id": "1a6be0b38bce9217",
      "item": {
        "type": "paragraph",
        "id": "1a6be0b38bce9217",
        "text": "Canviz is a JavaScript library for drawing Graphviz graphs to a web browser canvas. More technically, Canviz is a JavaScript xdot renderer. It works in most modern browsers. [https://code.google.com/p/canviz/ google code]"
      },
      "date": 1422304152890
    },
    {
      "type": "add",
      "id": "f5bbd2a54d88ab35",
      "item": {
        "type": "paragraph",
        "id": "f5bbd2a54d88ab35",
        "text": "Viz.js ports graphviz to js with emscripten. This sounds like the wrong way to go but they do have nice examples. [https://github.com/mdaines/viz.js/ github]"
      },
      "after": "1a6be0b38bce9217",
      "date": 1422304741597
    },
    {
      "type": "edit",
      "id": "811a900c92839a5d",
      "item": {
        "type": "paragraph",
        "id": "811a900c92839a5d",
        "text": "I'd like to view a graphviz file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter. What's with svg anyway?"
      },
      "date": 1422508768775
    },
    {
      "item": {
        "type": "factory",
        "id": "b398b0c08d8d96ae"
      },
      "id": "b398b0c08d8d96ae",
      "type": "add",
      "after": "f5bbd2a54d88ab35",
      "date": 1422508806577
    },
    {
      "type": "edit",
      "id": "b398b0c08d8d96ae",
      "item": {
        "type": "paragraph",
        "id": "b398b0c08d8d96ae",
        "text": "Canvg [https://github.com/gabelerner/canvg github]"
      },
      "date": 1422508825354
    },
    {
      "type": "edit",
      "id": "b398b0c08d8d96ae",
      "item": {
        "type": "paragraph",
        "id": "b398b0c08d8d96ae",
        "text": "Canvg is a SVG parser and renderer. It takes a URL to a SVG file or the text of an SVG file, parses it in JavaScript, and renders the result on a Canvas element. The rendering speed of the examples is about as fast as native SVG. [https://github.com/gabelerner/canvg github]"
      },
      "date": 1422508862393
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1437948637705
    },
    {
      "item": {
        "type": "factory",
        "id": "46f9222300f0bee0"
      },
      "id": "46f9222300f0bee0",
      "type": "add",
      "after": "b398b0c08d8d96ae",
      "date": 1437948773080
    },
    {
      "type": "edit",
      "id": "46f9222300f0bee0",
      "item": {
        "type": "reference",
        "id": "46f9222300f0bee0",
        "site": "future.fedwiki.org",
        "slug": "svg",
        "title": "SVG",
        "text": "Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation - [https://en.wikipedia.org/wiki/Scalable_Vector_Graphics#Functionality wikipedia]"
      },
      "date": 1437948775517
    },
    {
      "type": "move",
      "order": [
        "811a900c92839a5d",
        "46f9222300f0bee0",
        "1a6be0b38bce9217",
        "f5bbd2a54d88ab35",
        "b398b0c08d8d96ae"
      ],
      "id": "46f9222300f0bee0",
      "date": 1437948778510
    },
    {
      "type": "edit",
      "id": "811a900c92839a5d",
      "item": {
        "type": "paragraph",
        "id": "811a900c92839a5d",
        "text": "I'd like to view a graphviz file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter. "
      },
      "date": 1437948800622
    },
    {
      "type": "add",
      "id": "922cb3cf0d44c664",
      "item": {
        "type": "paragraph",
        "id": "922cb3cf0d44c664",
        "text": "What's with svg anyway? It's not an SVG issue. SVG's work fine. They embed and display fine. We have built in interactivity. We can author and enhance them with powerful manual and scripting tools. They are great."
      },
      "after": "811a900c92839a5d",
      "date": 1437948863757
    },
    {
      "type": "add",
      "id": "ff6e66588f828316",
      "item": {
        "type": "paragraph",
        "id": "ff6e66588f828316",
        "text": "The isseu is with how the wiki-client is trapping events and not allowing the browser to handle the url linkes."
      },
      "after": "922cb3cf0d44c664",
      "date": 1437948887114
    },
    {
      "type": "edit",
      "id": "1a6be0b38bce9217",
      "item": {
        "type": "paragraph",
        "id": "1a6be0b38bce9217",
        "text": "Older Solutions"
      },
      "date": 1437948904070
    },
    {
      "type": "add",
      "id": "e5d76116df831ea0",
      "item": {
        "type": "paragraph",
        "id": "e5d76116df831ea0",
        "text": "Canviz is a JavaScript library for drawing Graphviz graphs to a web browser canvas. More technically, Canviz is a JavaScript xdot renderer. It works in most modern browsers. [https://code.google.com/p/canviz/ google code]"
      },
      "after": "1a6be0b38bce9217",
      "date": 1437948905388
    },
    {
      "type": "edit",
      "id": "1a6be0b38bce9217",
      "item": {
        "type": "paragraph",
        "id": "1a6be0b38bce9217",
        "text": "<H3>Older Solutions"
      },
      "date": 1437948910178
    },
    {
      "type": "edit",
      "id": "1a6be0b38bce9217",
      "item": {
        "type": "html",
        "id": "1a6be0b38bce9217",
        "text": "<H3>Older Solutions"
      },
      "date": 1437948911497
    },
    {
      "type": "move",
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "e5d76116df831ea0",
        "f5bbd2a54d88ab35",
        "1a6be0b38bce9217",
        "b398b0c08d8d96ae"
      ],
      "id": "1a6be0b38bce9217",
      "date": 1437948913514
    },
    {
      "type": "move",
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "f5bbd2a54d88ab35",
        "e5d76116df831ea0",
        "1a6be0b38bce9217",
        "b398b0c08d8d96ae"
      ],
      "id": "e5d76116df831ea0",
      "date": 1437948915452
    },
    {
      "type": "move",
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "f5bbd2a54d88ab35",
        "1a6be0b38bce9217",
        "e5d76116df831ea0",
        "b398b0c08d8d96ae"
      ],
      "id": "e5d76116df831ea0",
      "date": 1437948926417
    },
    {
      "type": "edit",
      "id": "f5bbd2a54d88ab35",
      "item": {
        "type": "paragraph",
        "id": "f5bbd2a54d88ab35",
        "text": "<H3>Older Solutions"
      },
      "date": 1437948936024
    },
    {
      "type": "add",
      "id": "5f42a7333dc007ee",
      "item": {
        "type": "paragraph",
        "id": "5f42a7333dc007ee",
        "text": "Viz.js ports graphviz to js with emscripten. This sounds like the wrong way to go but they do have nice examples. [https://github.com/mdaines/viz.js/ github]"
      },
      "after": "f5bbd2a54d88ab35",
      "date": 1437948936996
    },
    {
      "type": "edit",
      "id": "f5bbd2a54d88ab35",
      "item": {
        "type": "html",
        "id": "f5bbd2a54d88ab35",
        "text": "<H3>Older Solutions"
      },
      "date": 1437948938734
    },
    {
      "type": "edit",
      "id": "f5bbd2a54d88ab35",
      "item": {
        "type": "html",
        "id": "f5bbd2a54d88ab35",
        "text": "<H3>Experimental Solutions"
      },
      "date": 1437948945514
    },
    {
      "type": "add",
      "id": "837e7246b6eb20dd",
      "item": {
        "type": "paragraph",
        "id": "837e7246b6eb20dd",
        "text": "<H3>Client Side Solution"
      },
      "after": "ff6e66588f828316",
      "date": 1437948973930
    },
    {
      "type": "move",
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "837e7246b6eb20dd",
        "f5bbd2a54d88ab35",
        "5f42a7333dc007ee",
        "1a6be0b38bce9217",
        "e5d76116df831ea0",
        "b398b0c08d8d96ae"
      ],
      "id": "837e7246b6eb20dd",
      "date": 1437948976734
    },
    {
      "type": "add",
      "id": "badc89d5f4c3d71e",
      "item": {
        "type": "paragraph",
        "id": "badc89d5f4c3d71e",
        "text": "A client side solution has some advantages. you can tweak the code in the browser. You can quickly role simple diagrams. It suffers from the lack of ability to bring the image into a nice drawing package and edit it to make it clean and simple before returning it to the wiki. That is what [[SVG]]'s are good for."
      },
      "after": "837e7246b6eb20dd",
      "date": 1437949077612
    },
    {
      "type": "edit",
      "id": "837e7246b6eb20dd",
      "item": {
        "type": "html",
        "id": "837e7246b6eb20dd",
        "text": "<H3>Client Side Solution"
      },
      "date": 1437949079107
    },
    {
      "type": "edit",
      "id": "badc89d5f4c3d71e",
      "item": {
        "type": "paragraph",
        "id": "badc89d5f4c3d71e",
        "text": "A client side solution has some advantages. you can tweak the code in the browser. You can quickly role simple diagrams. "
      },
      "date": 1437949085139
    },
    {
      "type": "add",
      "id": "3b394fb4353482f0",
      "item": {
        "type": "paragraph",
        "id": "3b394fb4353482f0",
        "text": "Client side solutions suffers from the lack of ability to bring the image into a nice drawing package and edit it to make it clean and simple before returning it to the wiki. That is what [[SVG]]'s are good for."
      },
      "after": "badc89d5f4c3d71e",
      "date": 1437949096754
    },
    {
      "type": "add",
      "id": "a6cd84e835999196",
      "item": {
        "type": "paragraph",
        "id": "a6cd84e835999196",
        "text": "However the best current javascript client side implementation is:"
      },
      "after": "3b394fb4353482f0",
      "date": 1437949112694
    },
    {
      "item": {
        "type": "factory",
        "id": "7a8802a13b70c67b"
      },
      "id": "7a8802a13b70c67b",
      "type": "add",
      "after": "b398b0c08d8d96ae",
      "date": 1437950197460
    },
    {
      "type": "edit",
      "id": "7a8802a13b70c67b",
      "item": {
        "type": "reference",
        "id": "7a8802a13b70c67b",
        "site": "david.viral.academy",
        "slug": "javascript-graph-libraries",
        "title": "Javascript Graph Libraries",
        "text": "Dagre (Directed graph renderer for Javascript) - [https://github.com/cpettitt/dagre github.com]"
      },
      "date": 1437950200711
    },
    {
      "type": "edit",
      "id": "a6cd84e835999196",
      "item": {
        "type": "paragraph",
        "id": "a6cd84e835999196",
        "text": "However the best current javascript client side implementation is: [[Dagre]]"
      },
      "date": 1437950438821
    },
    {
      "item": {
        "type": "factory",
        "id": "b1ae5094ed9967c7"
      },
      "id": "b1ae5094ed9967c7",
      "type": "add",
      "after": "7a8802a13b70c67b",
      "date": 1437950858949
    },
    {
      "type": "move",
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "837e7246b6eb20dd",
        "badc89d5f4c3d71e",
        "3b394fb4353482f0",
        "a6cd84e835999196",
        "b1ae5094ed9967c7",
        "f5bbd2a54d88ab35",
        "5f42a7333dc007ee",
        "1a6be0b38bce9217",
        "e5d76116df831ea0",
        "b398b0c08d8d96ae",
        "7a8802a13b70c67b"
      ],
      "id": "b1ae5094ed9967c7",
      "date": 1437950862136
    },
    {
      "type": "edit",
      "id": "b1ae5094ed9967c7",
      "item": {
        "type": "reference",
        "id": "b1ae5094ed9967c7",
        "site": "future.fedwiki.org",
        "slug": "dagre",
        "title": "Dagre",
        "text": "Dagre is a JavaScript library that makes it easy to lay out directed graphs on the client-side."
      },
      "date": 1437950864310
    },
    {
      "type": "edit",
      "id": "a6cd84e835999196",
      "item": {
        "type": "paragraph",
        "id": "a6cd84e835999196",
        "text": "However the best current javascript client side implementation is:"
      },
      "date": 1437950869549
    },
    {
      "item": {
        "type": "factory",
        "id": "8a82f7f05ced1cd7"
      },
      "id": "8a82f7f05ced1cd7",
      "type": "add",
      "after": "7a8802a13b70c67b",
      "date": 1455626217995
    },
    {
      "type": "edit",
      "id": "8a82f7f05ced1cd7",
      "item": {
        "type": "reference",
        "id": "8a82f7f05ced1cd7",
        "site": "c0de.academy",
        "slug": "graphoid-service",
        "title": "Graphoid Service",
        "text": "Graphoid (git repo) is a node.js service that converts a graph definition into a static PNG image using the same Vega library code that runs in advanced browsers. The service is available on the Wikimedia cluster at graphoid.wikimedia.org - [https://www.mediawiki.org/wiki/Extension:Graph#Graphoid_service mediawiki.org]"
      },
      "date": 1455626245151
    },
    {
      "item": {
        "type": "factory",
        "id": "6fdf378a73662fe7"
      },
      "id": "6fdf378a73662fe7",
      "type": "add",
      "after": "8a82f7f05ced1cd7",
      "date": 1455626246787
    },
    {
      "type": "edit",
      "id": "6fdf378a73662fe7",
      "item": {
        "type": "reference",
        "id": "6fdf378a73662fe7",
        "site": "c0de.academy",
        "slug": "vega",
        "title": "Vega",
        "text": "Vega is a visualization grammar, a declarative format for creating, saving and sharing interactive visualization designs. "
      },
      "date": 1455626252576
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1511883275035
    },
    {
      "type": "edit",
      "id": "811a900c92839a5d",
      "item": {
        "type": "paragraph",
        "id": "811a900c92839a5d",
        "text": "I'd like to view a [[graphviz]] file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter. "
      },
      "date": 1511883372658
    }
  ]
}