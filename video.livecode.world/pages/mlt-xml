{
  "title": "MLT XML",
  "story": [
    {
      "type": "paragraph",
      "id": "3ac51555a7a441cf",
      "text": "This is the MLT project’s XML serialization/deserialization format - as such, it closely mirrors the internal structure of the MLT API."
    },
    {
      "type": "markdown",
      "id": "c782e802b3dbb407",
      "text": "# Introduction"
    },
    {
      "type": "paragraph",
      "id": "f82c014ecb992dac",
      "text": "A MLT XML document is essentially a list of ‘producers’ - a producer is an MLT object which generates mlt_frames (images and associated audio samples)."
    },
    {
      "type": "markdown",
      "id": "e854fc4e95e187c5",
      "text": "There are 3 types of producer:\n\n- Basic Producers - these are typically file or device oriented feeds;\n- Playlists - these are arrangements of multiple producers;\n- Multitracks - these are the fx encapsulators.\n"
    },
    {
      "type": "paragraph",
      "id": "baeed5bbaa792368",
      "text": "In the MLT model, producers are created and attached to ‘consumers’ - consumers are software playback components (such as SDL), or wrappers for hardware drivers (such as bluefish) or even the XML serializing consumer itself (the latter doesn’t receive frames - it merely interrogates the connected producer for its configuration)."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "MLT XML",
        "story": []
      },
      "date": 1510103017840
    },
    {
      "item": {
        "type": "factory",
        "id": "3ac51555a7a441cf"
      },
      "id": "3ac51555a7a441cf",
      "type": "add",
      "date": 1510103066526
    },
    {
      "type": "edit",
      "id": "3ac51555a7a441cf",
      "item": {
        "type": "paragraph",
        "id": "3ac51555a7a441cf",
        "text": "This is the MLT project’s XML serialization/deserialization format - as such, it closely mirrors the internal structure of the MLT API."
      },
      "date": 1510103076209
    },
    {
      "type": "add",
      "id": "c782e802b3dbb407",
      "item": {
        "type": "paragraph",
        "id": "c782e802b3dbb407",
        "text": "# Introduction"
      },
      "after": "3ac51555a7a441cf",
      "date": 1510103092020
    },
    {
      "type": "add",
      "id": "f82c014ecb992dac",
      "item": {
        "type": "paragraph",
        "id": "f82c014ecb992dac",
        "text": "A MLT XML document is essentially a list of ‘producers’ - a producer is an MLT object which generates mlt_frames (images and associated audio samples)."
      },
      "after": "c782e802b3dbb407",
      "date": 1510103094866
    },
    {
      "type": "add",
      "id": "e854fc4e95e187c5",
      "item": {
        "type": "paragraph",
        "id": "e854fc4e95e187c5",
        "text": "There are 3 types of producer:\n\n_ Basic Producers - these are typically file or device oriented feeds;\n_ Playlists - these are arrangements of multiple producers;\n_ Multitracks - these are the fx encapsulators.\nIn the MLT model, producers are created and attached to ‘consumers’ - consumers are software playback components (such as SDL), or wrappers for hardware drivers (such as bluefish) or even the XML serializing consumer itself (the latter doesn’t receive frames - it merely interrogates the connected producer for its configuration)."
      },
      "after": "f82c014ecb992dac",
      "date": 1510103111652
    },
    {
      "type": "edit",
      "id": "c782e802b3dbb407",
      "item": {
        "type": "markdown",
        "id": "c782e802b3dbb407",
        "text": "# Introduction"
      },
      "date": 1510103124023
    },
    {
      "type": "edit",
      "id": "e854fc4e95e187c5",
      "item": {
        "type": "markdown",
        "id": "e854fc4e95e187c5",
        "text": "There are 3 types of producer:\n\n_ Basic Producers - these are typically file or device oriented feeds;\n_ Playlists - these are arrangements of multiple producers;\n_ Multitracks - these are the fx encapsulators.\nIn the MLT model, producers are created and attached to ‘consumers’ - consumers are software playback components (such as SDL), or wrappers for hardware drivers (such as bluefish) or even the XML serializing consumer itself (the latter doesn’t receive frames - it merely interrogates the connected producer for its configuration)."
      },
      "date": 1510103124751
    },
    {
      "type": "edit",
      "id": "e854fc4e95e187c5",
      "item": {
        "type": "markdown",
        "id": "e854fc4e95e187c5",
        "text": "There are 3 types of producer:\n \n_ Basic Producers - these are typically file or device oriented feeds;\n_ Playlists - these are arrangements of multiple producers;\n_ Multitracks - these are the fx encapsulators.\nIn the MLT model, producers are created and attached to ‘consumers’ - consumers are software playback components (such as SDL), or wrappers for hardware drivers (such as bluefish) or even the XML serializing consumer itself (the latter doesn’t receive frames - it merely interrogates the connected producer for its configuration)."
      },
      "date": 1510103134445
    },
    {
      "item": {
        "type": "factory",
        "id": "baeed5bbaa792368"
      },
      "id": "baeed5bbaa792368",
      "type": "add",
      "after": "e854fc4e95e187c5",
      "date": 1510103157090
    },
    {
      "type": "edit",
      "id": "e854fc4e95e187c5",
      "item": {
        "type": "markdown",
        "id": "e854fc4e95e187c5",
        "text": "There are 3 types of producer:\n \n- Basic Producers - these are typically file or device oriented feeds;\n- Playlists - these are arrangements of multiple producers;\n- Multitracks - these are the fx encapsulators.\n"
      },
      "date": 1510103160011
    },
    {
      "type": "edit",
      "id": "baeed5bbaa792368",
      "item": {
        "type": "paragraph",
        "id": "baeed5bbaa792368",
        "text": "In the MLT model, producers are created and attached to ‘consumers’ - consumers are software playback components (such as SDL), or wrappers for hardware drivers (such as bluefish) or even the XML serializing consumer itself (the latter doesn’t receive frames - it merely interrogates the connected producer for its configuration)."
      },
      "date": 1510103161791
    },
    {
      "type": "edit",
      "id": "e854fc4e95e187c5",
      "item": {
        "type": "markdown",
        "id": "e854fc4e95e187c5",
        "text": "There are 3 types of producer:\n\n- Basic Producers - these are typically file or device oriented feeds;\n- Playlists - these are arrangements of multiple producers;\n- Multitracks - these are the fx encapsulators.\n"
      },
      "date": 1510103167006
    }
  ]
}