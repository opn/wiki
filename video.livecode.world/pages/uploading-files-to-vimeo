{
  "title": "Uploading files to Vimeo",
  "journal": [
    {
      "date": 1509275187276,
      "type": "create",
      "item": {
        "story": "",
        "title": "Uploading files to Vimeo"
      }
    },
    {
      "type": "fork",
      "date": 1509275192243
    },
    {
      "type": "edit",
      "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
      "item": {
        "type": "paragraph",
        "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
        "text": "There are a number of ways to upload files to [[Viemo]]. Here we explore ways to do that programtically:"
      },
      "date": 1509275226093
    },
    {
      "type": "edit",
      "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
      "item": {
        "type": "paragraph",
        "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
        "text": "There are a number of ways to upload files to [[Vimeo]]. Here we explore ways to do that programtically:"
      },
      "date": 1509275232533
    },
    {
      "type": "edit",
      "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
      "item": {
        "type": "paragraph",
        "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
        "text": "There are a number of ways to upload files to [[Vimeo]]. Here we explore ways to do that programtically."
      },
      "date": 1509275492527
    },
    {
      "type": "add",
      "id": "2552f35985e04cb7",
      "item": {
        "type": "paragraph",
        "id": "2552f35985e04cb7",
        "text": "# Preparing your video"
      },
      "after": "25d80726-869f-4706-a2d1-084e0da95e5d",
      "date": 1509275505087
    },
    {
      "type": "add",
      "id": "78ff9d2a53825fb6",
      "item": {
        "type": "paragraph",
        "id": "78ff9d2a53825fb6",
        "text": "- [https://vimeo.com/help/compression vimeo.com]"
      },
      "after": "2552f35985e04cb7",
      "date": 1509275517240
    },
    {
      "type": "edit",
      "id": "2552f35985e04cb7",
      "item": {
        "type": "markdown",
        "id": "2552f35985e04cb7",
        "text": "# Preparing your video"
      },
      "date": 1509275572215
    },
    {
      "type": "edit",
      "id": "78ff9d2a53825fb6",
      "item": {
        "type": "paragraph",
        "id": "78ff9d2a53825fb6",
        "text": "aFor best results Vimeo recommends [[H.264]] or [[Apple ProRes 422]] - [https://vimeo.com/help/compression vimeo.com]"
      },
      "date": 1509275602850
    },
    {
      "type": "edit",
      "id": "78ff9d2a53825fb6",
      "item": {
        "type": "paragraph",
        "id": "78ff9d2a53825fb6",
        "text": "For best results Vimeo recommends [[H.264]] or [[Apple ProRes 422]] - [https://vimeo.com/help/compression vimeo.com]"
      },
      "date": 1509275606481
    },
    {
      "type": "edit",
      "id": "78ff9d2a53825fb6",
      "item": {
        "type": "paragraph",
        "id": "78ff9d2a53825fb6",
        "text": "For best results Vimeo recommends [[H.264]] or [[Apple ProRes 422]]. Always choose “constant” frame rate instead of “variable” frame rate - [https://vimeo.com/help/compression vimeo.com]"
      },
      "date": 1509275657638
    },
    {
      "item": {
        "type": "factory",
        "id": "6a6a3b532f005bf5"
      },
      "id": "6a6a3b532f005bf5",
      "type": "add",
      "after": "29d9f6dc-c384-4e54-92c5-a195010c6866",
      "date": 1509275700746
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "6a6a3b532f005bf5",
      "date": 1509275702430
    },
    {
      "type": "edit",
      "id": "6a6a3b532f005bf5",
      "item": {
        "type": "code",
        "id": "6a6a3b532f005bf5",
        "text": "720p HD 16:9 aspect ratio\t1280 × 720\n1080p HD 16:9 aspect ratio\t1920 × 1080"
      },
      "date": 1509275712951
    },
    {
      "type": "edit",
      "id": "6a6a3b532f005bf5",
      "item": {
        "type": "code",
        "id": "6a6a3b532f005bf5",
        "text": "720p   HD 16:9 aspect ratio\t1280 × 720\n1080p HD 16:9 aspect ratio\t1920 × 1080"
      },
      "date": 1509275726591
    },
    {
      "type": "edit",
      "id": "6a6a3b532f005bf5",
      "item": {
        "type": "code",
        "id": "6a6a3b532f005bf5",
        "text": "720p   HD 16:9 aspect ratio\t1280 × 720\n1080p  HD 16:9 aspect ratio\t1920 × 1080"
      },
      "date": 1509275731575
    },
    {
      "type": "edit",
      "id": "78ff9d2a53825fb6",
      "item": {
        "type": "paragraph",
        "id": "78ff9d2a53825fb6",
        "text": "For best results Vimeo recommends [[H.264]] or [[Apple ProRes 422]]. "
      },
      "date": 1509275743207
    },
    {
      "type": "add",
      "id": "af65710038cec5f4",
      "item": {
        "type": "paragraph",
        "id": "af65710038cec5f4",
        "text": "Always choose “constant” frame rate instead of “variable” frame rate - [https://vimeo.com/help/compression vimeo.com]"
      },
      "after": "78ff9d2a53825fb6",
      "date": 1509275743590
    },
    {
      "item": {
        "type": "factory",
        "id": "814ec898fa44b667"
      },
      "id": "814ec898fa44b667",
      "type": "add",
      "after": "29d9f6dc-c384-4e54-92c5-a195010c6866",
      "date": 1509275761127
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "814ec898fa44b667",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "814ec898fa44b667",
      "date": 1509275763442
    },
    {
      "type": "edit",
      "id": "814ec898fa44b667",
      "item": {
        "type": "code",
        "id": "814ec898fa44b667",
        "text": "Quality\tBit rate (Mbps)*\n720p\t5 – 10\n1080p\t10 – 20"
      },
      "date": 1509275771496
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "814ec898fa44b667",
      "date": 1509275780038
    },
    {
      "item": {
        "type": "factory",
        "id": "151119a3e884fdd8"
      },
      "id": "151119a3e884fdd8",
      "type": "add",
      "after": "29d9f6dc-c384-4e54-92c5-a195010c6866",
      "date": 1509644719362
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "151119a3e884fdd8",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "151119a3e884fdd8",
      "date": 1509644721164
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "151119a3e884fdd8",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "63ae051f-f845-40fd-a2ff-840322378286",
      "date": 1509644725131
    },
    {
      "type": "edit",
      "id": "151119a3e884fdd8",
      "item": {
        "type": "paragraph",
        "id": "151119a3e884fdd8",
        "text": "There are three ways to transfer the video data to us:\n- __Post:__ This is the simplest integration; it allows your users to upload directly to Vimeo using a standard HTML form and bypass your server entirely. But if there are any network connectivity errors, the user will have to retry the entire upload. And you can't display a progress bar.\n- __Streaming:__ This is better if you have a more integrated app (like mobile) and want more robust handling of connectivity issues, providing your users with pause, progress bars, and resume. You also have the option to use client-side JavaScript (with the HTML5 File object) to perform and verify the upload, which shifts this work from your server to the user's browser. But streaming is also the most complex approach.\n- __Automatic (\"Pull\"):__ This is the best (and easiest) approach if the video is already posted on the Internet, at a URL accessible by Vimeo's upload server. All you need to do is provide us with the URL, and we'll automatically grab (\"pull\") it (and transparently handle any connectivity issues that might arise).\n"
      },
      "date": 1509644781839
    },
    {
      "type": "edit",
      "id": "151119a3e884fdd8",
      "item": {
        "type": "markdown",
        "id": "151119a3e884fdd8",
        "text": "There are three ways to transfer the video data to us:\n- __Post:__ This is the simplest integration; it allows your users to upload directly to Vimeo using a standard HTML form and bypass your server entirely. But if there are any network connectivity errors, the user will have to retry the entire upload. And you can't display a progress bar.\n- __Streaming:__ This is better if you have a more integrated app (like mobile) and want more robust handling of connectivity issues, providing your users with pause, progress bars, and resume. You also have the option to use client-side JavaScript (with the HTML5 File object) to perform and verify the upload, which shifts this work from your server to the user's browser. But streaming is also the most complex approach.\n- __Automatic (\"Pull\"):__ This is the best (and easiest) approach if the video is already posted on the Internet, at a URL accessible by Vimeo's upload server. All you need to do is provide us with the URL, and we'll automatically grab (\"pull\") it (and transparently handle any connectivity issues that might arise).\n"
      },
      "date": 1509644783101
    },
    {
      "type": "edit",
      "id": "151119a3e884fdd8",
      "item": {
        "type": "markdown",
        "id": "151119a3e884fdd8",
        "text": "There are three ways to transfer the video data to us:\n\n- Post"
      },
      "date": 1509644816454
    },
    {
      "item": {
        "type": "factory",
        "id": "6c8f08ce9aecbe5c"
      },
      "id": "6c8f08ce9aecbe5c",
      "type": "add",
      "after": "29d9f6dc-c384-4e54-92c5-a195010c6866",
      "date": 1509644819356
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "151119a3e884fdd8",
        "6c8f08ce9aecbe5c",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "6c8f08ce9aecbe5c",
      "date": 1509644821154
    },
    {
      "type": "edit",
      "id": "6c8f08ce9aecbe5c",
      "item": {
        "type": "paragraph",
        "id": "6c8f08ce9aecbe5c",
        "text": ":__ This is the simplest integration; it allows your users to upload directly to Vimeo using a standard HTML form and bypass your server entirely. But if there are any network connectivity errors, the user will have to retry the entire upload. And you can't display a progress bar.\n- __Streaming:__ This is better if you have a more integrated app (like mobile) and want more robust handling of connectivity issues, providing your users with pause, progress bars, and resume. You also have the option to use client-side JavaScript (with the HTML5 File object) to perform and verify the upload, which shifts this work from your server to the user's browser. But streaming is also the most complex approach.\n- __Automatic (\"Pull\"):__ "
      },
      "date": 1509644827041
    },
    {
      "type": "add",
      "id": "e310da8975aa8bb7",
      "item": {
        "type": "paragraph",
        "id": "e310da8975aa8bb7",
        "text": "This is the best (and easiest) approach if the video is already posted on the Internet, at a URL accessible by Vimeo's upload server. All you need to do is provide us with the URL, and we'll automatically grab (\"pull\") it (and transparently handle any connectivity issues that might arise).\n"
      },
      "after": "6c8f08ce9aecbe5c",
      "date": 1509644829226
    },
    {
      "type": "edit",
      "id": "6c8f08ce9aecbe5c",
      "item": {
        "type": "paragraph",
        "id": "6c8f08ce9aecbe5c",
        "text": ":__ This is the simplest integration; it allows your users to upload directly to Vimeo using a standard HTML form and bypass your server entirely. But if there are any network connectivity errors, the user will have to retry the entire upload. And you can't display a progress bar.\n- __Streaming:__ This is better if you have a more integrated app (like mobile) and want more robust handling of connectivity issues, providing your users with pause, progress bars, and resume. You also have the option to use client-side JavaScript (with the HTML5 File object) to perform and verify the upload, which shifts this work from your server to the user's browser. But streaming is also the most complex approach.\n"
      },
      "date": 1509644844369
    },
    {
      "type": "add",
      "id": "9b6baceb0e2b9361",
      "item": {
        "type": "paragraph",
        "id": "9b6baceb0e2b9361",
        "text": "# Automatic (\"Pull\")"
      },
      "after": "6c8f08ce9aecbe5c",
      "date": 1509644857396
    },
    {
      "type": "edit",
      "id": "6c8f08ce9aecbe5c",
      "item": {
        "type": "paragraph",
        "id": "6c8f08ce9aecbe5c",
        "text": ":__ This is the simplest integration; it allows your users to upload directly to Vimeo using a standard HTML form and bypass your server entirely. But if there are any network connectivity errors, the user will have to retry the entire upload. And you can't display a progress bar.\n"
      },
      "date": 1509644859208
    },
    {
      "type": "remove",
      "id": "6c8f08ce9aecbe5c",
      "date": 1509644862440
    },
    {
      "type": "edit",
      "id": "9b6baceb0e2b9361",
      "item": {
        "type": "markdown",
        "id": "9b6baceb0e2b9361",
        "text": "# Automatic (\"Pull\")"
      },
      "date": 1509644863370
    },
    {
      "item": {
        "type": "factory",
        "id": "6bd85d6067002410"
      },
      "id": "6bd85d6067002410",
      "type": "add",
      "after": "29d9f6dc-c384-4e54-92c5-a195010c6866",
      "date": 1509644882819
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "151119a3e884fdd8",
        "6bd85d6067002410",
        "9b6baceb0e2b9361",
        "e310da8975aa8bb7",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "6bd85d6067002410",
      "date": 1509644884883
    },
    {
      "type": "edit",
      "id": "151119a3e884fdd8",
      "item": {
        "type": "markdown",
        "id": "151119a3e884fdd8",
        "text": "There are three ways to transfer the video data to us:\n\n- Post\n- Streaming\n- Automatic (\"Pull\")"
      },
      "date": 1509644885913
    },
    {
      "type": "edit",
      "id": "6bd85d6067002410",
      "item": {
        "type": "paragraph",
        "id": "6bd85d6067002410",
        "text": "Post is the simplest, streaming is an advanced option particularly suited for mobile clients, and \"pull\" is the one that interests us here allowing Vimeo to fetch the video itself from any publicly accessible URL."
      },
      "date": 1509644976949
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "151119a3e884fdd8",
        "6bd85d6067002410",
        "9b6baceb0e2b9361",
        "e310da8975aa8bb7",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
      "date": 1509644999951
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "151119a3e884fdd8",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "6bd85d6067002410",
        "9b6baceb0e2b9361",
        "e310da8975aa8bb7",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
      "date": 1509645003710
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "151119a3e884fdd8",
        "6bd85d6067002410",
        "9b6baceb0e2b9361",
        "e310da8975aa8bb7",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
      "date": 1509645016213
    },
    {
      "type": "edit",
      "id": "e310da8975aa8bb7",
      "item": {
        "type": "paragraph",
        "id": "e310da8975aa8bb7",
        "text": "This is the best (and easiest) approach if the video is already posted on the Internet, at a URL accessible by Vimeo's upload server. All you need to do is provide us with the URL, and we'll automatically grab (\"pull\") it (and transparently handle any connectivity issues that might arise)."
      },
      "date": 1509645021679
    },
    {
      "type": "add",
      "id": "0dabdfabb2550625",
      "item": {
        "type": "paragraph",
        "id": "0dabdfabb2550625",
        "text": "# Links"
      },
      "after": "e310da8975aa8bb7",
      "date": 1509645030536
    },
    {
      "type": "edit",
      "id": "0dabdfabb2550625",
      "item": {
        "type": "markdown",
        "id": "0dabdfabb2550625",
        "text": "# Links"
      },
      "date": 1509645032756
    },
    {
      "type": "edit",
      "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
      "item": {
        "type": "paragraph",
        "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
        "text": "There are a number of ways to upload files to [[Vimeo]]. Here we explore ways to do that programatically."
      },
      "date": 1509645063159
    },
    {
      "type": "add",
      "id": "ce4dc26d74e88077",
      "item": {
        "type": "paragraph",
        "id": "ce4dc26d74e88077",
        "text": "# To do"
      },
      "after": "25d80726-869f-4706-a2d1-084e0da95e5d",
      "date": 1509645073497
    },
    {
      "type": "add",
      "id": "d5436fb68d3a002b",
      "item": {
        "type": "paragraph",
        "id": "d5436fb68d3a002b",
        "text": "What looks promising from our perspective here is to look at the ability to get Vimeo to automatically \"pull\" videos from [[Telegram]] and [[Zoom]], and possibly other places like [[DropBox]]. This relies on the videos being publicly accessible (See below). "
      },
      "after": "ce4dc26d74e88077",
      "date": 1509645158669
    },
    {
      "type": "edit",
      "id": "ce4dc26d74e88077",
      "item": {
        "type": "markdown",
        "id": "ce4dc26d74e88077",
        "text": "# To do"
      },
      "date": 1509645163128
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "ce4dc26d74e88077",
        "d5436fb68d3a002b",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "151119a3e884fdd8",
        "6bd85d6067002410",
        "9b6baceb0e2b9361",
        "e310da8975aa8bb7",
        "0dabdfabb2550625",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "224e13c8-65a3-4451-b98a-4c079130d996",
      "date": 1509645173228
    },
    {
      "type": "edit",
      "id": "e310da8975aa8bb7",
      "item": {
        "type": "paragraph",
        "id": "e310da8975aa8bb7",
        "text": "This is the best (and easiest) approach if the video is already posted on the Internet, at a URL accessible by Vimeo's upload server. "
      },
      "date": 1509645290123
    },
    {
      "type": "add",
      "id": "28913cabfe73a3c9",
      "item": {
        "type": "paragraph",
        "id": "28913cabfe73a3c9",
        "text": "All you need to do is provide us with the URL, and we'll automatically grab (\"pull\") it (and transparently handle any connectivity issues that might arise)."
      },
      "after": "e310da8975aa8bb7",
      "date": 1509645292507
    },
    {
      "type": "add",
      "id": "1d7dfd2fc9ee7743",
      "item": {
        "type": "paragraph",
        "id": "1d7dfd2fc9ee7743",
        "text": "Pull has just one step: Make the initial request to get the upload ticket, setting type=pull and providing a link to a video on the Internet that is accessible to Vimeo’s upload server. When our servers receive this request, we make a quick check to make sure you’ve sent us a video file. If it is a valid video file, you’ll immediately receive a full response, including the title and URI."
      },
      "after": "28913cabfe73a3c9",
      "date": 1509645296019
    },
    {
      "type": "add",
      "id": "4030e9add00edd8b",
      "item": {
        "type": "paragraph",
        "id": "4030e9add00edd8b",
        "text": "POSThttps://api.vimeo.com/me/videos\nField\tRequired\tDescription\ntype\tYes\tMust be set to pull.\nlink\tYes\tA url to a video file accessible by Vimeo's servers.\n"
      },
      "after": "1d7dfd2fc9ee7743",
      "date": 1509645297379
    },
    {
      "type": "edit",
      "id": "1d7dfd2fc9ee7743",
      "item": {
        "type": "paragraph",
        "id": "1d7dfd2fc9ee7743",
        "text": "Pull has just one step: Make the initial request to get the upload ticket, setting type=pull and providing a link to a video on the Internet that is accessible to Vimeo’s upload server. "
      },
      "date": 1509645313220
    },
    {
      "type": "add",
      "id": "fb9f0d9a3f4936c7",
      "item": {
        "type": "paragraph",
        "id": "fb9f0d9a3f4936c7",
        "text": "When Vimeo's servers receive this request, they make a quick check to make sure you’ve sent us a video file. If it is a valid video file, you’ll immediately receive a full response, including the title and URI."
      },
      "after": "1d7dfd2fc9ee7743",
      "date": 1509645344464
    },
    {
      "type": "remove",
      "id": "28913cabfe73a3c9",
      "date": 1509645349084
    },
    {
      "type": "edit",
      "id": "fb9f0d9a3f4936c7",
      "item": {
        "type": "paragraph",
        "id": "fb9f0d9a3f4936c7",
        "text": "When Vimeo's servers receive this request, they make a quick check to make sure you’ve sent us a video file. If it is a valid video file, you’ll immediately receive a full response, including the title and URI. Vimeo's servers will transparently handle any connectivity issues that might arise"
      },
      "date": 1509645382494
    },
    {
      "type": "remove",
      "id": "4030e9add00edd8b",
      "date": 1509645387261
    },
    {
      "item": {
        "type": "factory",
        "id": "dcb208010f307dd1"
      },
      "id": "dcb208010f307dd1",
      "type": "add",
      "after": "29d9f6dc-c384-4e54-92c5-a195010c6866",
      "date": 1509645390330
    },
    {
      "type": "move",
      "order": [
        "25d80726-869f-4706-a2d1-084e0da95e5d",
        "ce4dc26d74e88077",
        "d5436fb68d3a002b",
        "2552f35985e04cb7",
        "78ff9d2a53825fb6",
        "814ec898fa44b667",
        "af65710038cec5f4",
        "6a6a3b532f005bf5",
        "63ae051f-f845-40fd-a2ff-840322378286",
        "151119a3e884fdd8",
        "6bd85d6067002410",
        "9b6baceb0e2b9361",
        "e310da8975aa8bb7",
        "1d7dfd2fc9ee7743",
        "fb9f0d9a3f4936c7",
        "dcb208010f307dd1",
        "0dabdfabb2550625",
        "224e13c8-65a3-4451-b98a-4c079130d996",
        "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
        "69725534-143d-4356-b6cf-bedd103d5640",
        "29d9f6dc-c384-4e54-92c5-a195010c6866"
      ],
      "id": "dcb208010f307dd1",
      "date": 1509645392459
    },
    {
      "type": "edit",
      "id": "dcb208010f307dd1",
      "item": {
        "type": "code",
        "id": "dcb208010f307dd1",
        "text": "POST:  https://api.vimeo.com/me/videos\nField:\tRequired\tDescription\ntype:\tYes\tMust be set to pull.\nlink:\tYes\tA url to a video accessible\n"
      },
      "date": 1509645431440
    },
    {
      "type": "edit",
      "id": "dcb208010f307dd1",
      "item": {
        "type": "code",
        "id": "dcb208010f307dd1",
        "text": "POST:   https://api.vimeo.com/me/videos\nField:\tRequired\tDescription\ntype:\tYes\tMust be set to pull.\nlink:\tYes\tA url to a publicly accessible video\n"
      },
      "date": 1509645449163
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "25d80726-869f-4706-a2d1-084e0da95e5d",
      "text": "There are a number of ways to upload files to [[Vimeo]]. Here we explore ways to do that programatically."
    },
    {
      "type": "markdown",
      "id": "ce4dc26d74e88077",
      "text": "# To do"
    },
    {
      "type": "paragraph",
      "id": "d5436fb68d3a002b",
      "text": "What looks promising from our perspective here is to look at the ability to get Vimeo to automatically \"pull\" videos from [[Telegram]] and [[Zoom]], and possibly other places like [[DropBox]]. This relies on the videos being publicly accessible (See below). "
    },
    {
      "type": "markdown",
      "id": "2552f35985e04cb7",
      "text": "# Preparing your video"
    },
    {
      "type": "paragraph",
      "id": "78ff9d2a53825fb6",
      "text": "For best results Vimeo recommends [[H.264]] or [[Apple ProRes 422]]. "
    },
    {
      "type": "code",
      "id": "814ec898fa44b667",
      "text": "Quality\tBit rate (Mbps)*\n720p\t5 – 10\n1080p\t10 – 20"
    },
    {
      "type": "paragraph",
      "id": "af65710038cec5f4",
      "text": "Always choose “constant” frame rate instead of “variable” frame rate - [https://vimeo.com/help/compression vimeo.com]"
    },
    {
      "type": "code",
      "id": "6a6a3b532f005bf5",
      "text": "720p   HD 16:9 aspect ratio\t1280 × 720\n1080p  HD 16:9 aspect ratio\t1920 × 1080"
    },
    {
      "type": "markdown",
      "id": "63ae051f-f845-40fd-a2ff-840322378286",
      "text": "# Uploading files to Vimeo"
    },
    {
      "type": "markdown",
      "id": "151119a3e884fdd8",
      "text": "There are three ways to transfer the video data to us:\n\n- Post\n- Streaming\n- Automatic (\"Pull\")"
    },
    {
      "type": "paragraph",
      "id": "6bd85d6067002410",
      "text": "Post is the simplest, streaming is an advanced option particularly suited for mobile clients, and \"pull\" is the one that interests us here allowing Vimeo to fetch the video itself from any publicly accessible URL."
    },
    {
      "type": "markdown",
      "id": "9b6baceb0e2b9361",
      "text": "# Automatic (\"Pull\")"
    },
    {
      "type": "paragraph",
      "id": "e310da8975aa8bb7",
      "text": "This is the best (and easiest) approach if the video is already posted on the Internet, at a URL accessible by Vimeo's upload server. "
    },
    {
      "type": "paragraph",
      "id": "1d7dfd2fc9ee7743",
      "text": "Pull has just one step: Make the initial request to get the upload ticket, setting type=pull and providing a link to a video on the Internet that is accessible to Vimeo’s upload server. "
    },
    {
      "type": "paragraph",
      "id": "fb9f0d9a3f4936c7",
      "text": "When Vimeo's servers receive this request, they make a quick check to make sure you’ve sent us a video file. If it is a valid video file, you’ll immediately receive a full response, including the title and URI. Vimeo's servers will transparently handle any connectivity issues that might arise"
    },
    {
      "type": "code",
      "id": "dcb208010f307dd1",
      "text": "POST:   https://api.vimeo.com/me/videos\nField:\tRequired\tDescription\ntype:\tYes\tMust be set to pull.\nlink:\tYes\tA url to a publicly accessible video\n"
    },
    {
      "type": "markdown",
      "id": "0dabdfabb2550625",
      "text": "# Links"
    },
    {
      "type": "html",
      "id": "224e13c8-65a3-4451-b98a-4c079130d996",
      "text": "<img src='https://www.google.com/s2/favicons?domain=developer.vimeo.com' style='vertical-align: middle; width:16px; height:16px' /><a target=_blank style='vertical-align: middle; padding-left: 10px; padding-right: 12px; text-decoration: none;' href='https://developer.vimeo.com/api/upload/videos'>Video Uploads on Vimeo Developer API</a>"
    },
    {
      "type": "html",
      "id": "0dc4c209-c63d-4441-acf4-1cac8e9ea9fa",
      "text": "<img src='https://www.google.com/s2/favicons?domain=github.com' style='vertical-align: middle; width:16px; height:16px' /><a target=_blank style='vertical-align: middle; padding-left: 10px; padding-right: 12px; text-decoration: none;' href='https://github.com/vimeo/vimeo.js'>GitHub - vimeo/vimeo.js: Official Node.js library for the Vimeo API.</a>"
    },
    {
      "type": "html",
      "id": "69725534-143d-4356-b6cf-bedd103d5640",
      "text": "<img src='https://www.google.com/s2/favicons?domain=www.npmjs.com' style='vertical-align: middle; width:16px; height:16px' /><a target=_blank style='vertical-align: middle; padding-left: 10px; padding-right: 12px; text-decoration: none;' href='https://www.npmjs.com/package/vimeo-cli'>vimeo-cli</a>"
    },
    {
      "type": "html",
      "id": "29d9f6dc-c384-4e54-92c5-a195010c6866",
      "text": "<img src='https://www.google.com/s2/favicons?domain=github.com' style='vertical-align: middle; width:16px; height:16px' /><a target=_blank style='vertical-align: middle; padding-left: 10px; padding-right: 12px; text-decoration: none;' href='https://github.com/vimeo/player.js#setcurrenttimeseconds-number-promisenumber-rangeerrorerror'>GitHub - vimeo/player.js: Interact with and control an embedded Vimeo Player.</a>"
    }
  ]
}