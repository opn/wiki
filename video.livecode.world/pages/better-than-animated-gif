{
  "title": "Better than animated gif",
  "story": [
    {
      "type": "paragraph",
      "id": "fa1a8be5e35d0ad3",
      "text": "Converting animated GIFs to MP4 with FFmpeg\nMP4 videos have near-universal support. And they are smaller and better than animated GIFs from a performance perspective. But how easy is it to create and share MP4 videos online? Luckily the answer is pretty easy!"
    },
    {
      "type": "paragraph",
      "id": "5e2cbc260aa469db",
      "text": "We can use ffmpeg, a free, open source command line tool to convert an animated GIF into an MP4 video. Make sure you download a pre-built package unless you are nerdy enough to build from source. In the example below we use FFmpeg to convert the file animated.gif into an MP4 video named video.mp4 - [https://rigor.com/blog/2015/12/optimizing-animated-gifs-with-html5-video rigor.com]"
    },
    {
      "type": "code",
      "id": "717a71fbbddeae8e",
      "text": "ffmpeg -i animated.gif -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" video.mp4"
    },
    {
      "type": "paragraph",
      "id": "c878155048f04586",
      "text": "I know that looks intimidating, but don’t worry; those extra options ensure we have a nice, fast, compatible video file that will play anywhere. Here is what they do:"
    },
    {
      "type": "paragraph",
      "id": "118fa528b2bb5bf2",
      "text": "- movflags – This option optimizes the structure of the MP4 file so the browser can load it as quickly as possible. I’ll talk about this optimization more in a future blog post.\n- pix_fmt – MP4 videos store pixels in different formats. We include this option to specify a specific format which has maximum compatibility across all browsers. (This is actually the chroma subsampling we mentioned earlier).\n- vf – MP4 videos using H.264 need to have a dimensions that are divisible by 2. This option ensures that’s the case. Don’t worry, we can still display this video at any dimensions you want."
    },
    {
      "type": "paragraph",
      "id": "62eaec8af7cda75d",
      "text": "Now that we have a video file instead of an image, our HTML markup needs to change. Our original markup to include an animated GIF looked like this:"
    },
    {
      "type": "code",
      "id": "f30d45fa7b0ca831",
      "text": "<img src=\"vid.gif\" alt=\"\" width=\"400\" height=\"300\"/>"
    },
    {
      "type": "paragraph",
      "id": "792545a9388c02b1",
      "text": "To use our new video, we need to replace that with this:\n"
    },
    {
      "type": "code",
      "id": "66d86d4d48e79b53",
      "text": "<video autoplay=\"autoplay\" loop=\"loop\" width=\"400\" height=\"300\">\n <source src=\"video.mp4\" type=\"video/mp4\" />\n <img src=\"video.gif\" width=\"400\" height=\"300\" /></video>"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Better than animated gif",
        "story": []
      },
      "date": 1509476675308
    },
    {
      "item": {
        "type": "factory",
        "id": "fa1a8be5e35d0ad3"
      },
      "id": "fa1a8be5e35d0ad3",
      "type": "add",
      "date": 1509476676321
    },
    {
      "type": "edit",
      "id": "fa1a8be5e35d0ad3",
      "item": {
        "type": "paragraph",
        "id": "fa1a8be5e35d0ad3",
        "text": "Converting animated GIFs to MP4 with FFmpeg\nMP4 videos have near-universal support. And they are smaller and better than animated GIFs from a performance perspective. But how easy is it to create and share MP4 videos online? Luckily the answer is pretty easy!"
      },
      "date": 1509476686044
    },
    {
      "type": "add",
      "id": "5e2cbc260aa469db",
      "item": {
        "type": "paragraph",
        "id": "5e2cbc260aa469db",
        "text": "We can use ffmpeg, a free, open source command line tool to convert an animated GIF into an MP4 video. Make sure you download a pre-built package unless you are nerdy enough to build from source. In the example below we use FFmpeg to convert the file animated.gif into an MP4 video named video.mp4."
      },
      "after": "fa1a8be5e35d0ad3",
      "date": 1509476690597
    },
    {
      "type": "add",
      "id": "321ba75897d88232",
      "item": {
        "type": "paragraph",
        "id": "321ba75897d88232",
        "text": "ffmpeg -i animated.gif -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" video.mp4\n1\nffmpeg -i animated.gif -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" video.mp4"
      },
      "after": "5e2cbc260aa469db",
      "date": 1509476704574
    },
    {
      "type": "add",
      "id": "c878155048f04586",
      "item": {
        "type": "paragraph",
        "id": "c878155048f04586",
        "text": "I know that looks intimidating, but don’t worry; those extra options ensure we have a nice, fast, compatible video file that will play anywhere. Here is what they do:"
      },
      "after": "321ba75897d88232",
      "date": 1509476709014
    },
    {
      "type": "add",
      "id": "118fa528b2bb5bf2",
      "item": {
        "type": "paragraph",
        "id": "118fa528b2bb5bf2",
        "text": "- movflags – This option optimizes the structure of the MP4 file so the browser can load it as quickly as possible. I’ll talk about this optimization more in a future blog post.\n- pix_fmt – MP4 videos store pixels in different formats. We include this option to specify a specific format which has maximum compatibility across all browsers. (This is actually the chroma subsampling we mentioned earlier).\n- vf – MP4 videos using H.264 need to have a dimensions that are divisible by 2. This option ensures that’s the case. Don’t worry, we can still display this video at any dimensions you want."
      },
      "after": "c878155048f04586",
      "date": 1509476721944
    },
    {
      "type": "add",
      "id": "62eaec8af7cda75d",
      "item": {
        "type": "paragraph",
        "id": "62eaec8af7cda75d",
        "text": "Now that we have a video file instead of an image, our HTML markup needs to change. Our original markup to include an animated GIF looked like this:"
      },
      "after": "118fa528b2bb5bf2",
      "date": 1509476725759
    },
    {
      "type": "add",
      "id": "bae6c82d2255af3f",
      "item": {
        "type": "paragraph",
        "id": "bae6c82d2255af3f",
        "text": "\n<img src=\"video.gif\" alt=\"\" width=\"400\" height=\"300\" />\n1\n<img src=\"video.gif\" alt=\"\" width=\"400\" height=\"300\" />"
      },
      "after": "62eaec8af7cda75d",
      "date": 1509476728735
    },
    {
      "type": "add",
      "id": "792545a9388c02b1",
      "item": {
        "type": "paragraph",
        "id": "792545a9388c02b1",
        "text": "To use our new video, we need to replace that with this:\n"
      },
      "after": "bae6c82d2255af3f",
      "date": 1509476731055
    },
    {
      "type": "add",
      "id": "588705f087035e4d",
      "item": {
        "type": "paragraph",
        "id": "588705f087035e4d",
        "text": "<video autoplay=\"autoplay\" loop=\"loop\" width=\"400\" height=\"300\">\n<source src=\"video.mp4\" type=\"video/mp4\" />\n<img src=\"video.gif\" width=\"400\" height=\"300\" /></video>"
      },
      "after": "792545a9388c02b1",
      "date": 1509476732631
    },
    {
      "type": "add",
      "id": "9b82d405143c64e2",
      "item": {
        "type": "paragraph",
        "id": "9b82d405143c64e2",
        "text": "\n<video autoplay=\"autoplay\" loop=\"loop\" width=\"400\" height=\"300\">\n  <source src=\"video.mp4\" type=\"video/mp4\" />\n  <img src=\"video.gif\" width=\"400\" height=\"300\" /></video>"
      },
      "after": "588705f087035e4d",
      "date": 1509476736335
    },
    {
      "item": {
        "type": "factory",
        "id": "f30d45fa7b0ca831"
      },
      "id": "f30d45fa7b0ca831",
      "type": "add",
      "after": "9b82d405143c64e2",
      "date": 1509476745237
    },
    {
      "type": "move",
      "order": [
        "fa1a8be5e35d0ad3",
        "5e2cbc260aa469db",
        "321ba75897d88232",
        "c878155048f04586",
        "118fa528b2bb5bf2",
        "62eaec8af7cda75d",
        "bae6c82d2255af3f",
        "f30d45fa7b0ca831",
        "792545a9388c02b1",
        "588705f087035e4d",
        "9b82d405143c64e2"
      ],
      "id": "f30d45fa7b0ca831",
      "date": 1509476747426
    },
    {
      "type": "remove",
      "id": "bae6c82d2255af3f",
      "date": 1509476760591
    },
    {
      "type": "edit",
      "id": "f30d45fa7b0ca831",
      "item": {
        "type": "code",
        "id": "f30d45fa7b0ca831",
        "text": "<img src=\"video.gif\" alt=\"\" width=\"400\" height=\"300\" />"
      },
      "date": 1509476771115
    },
    {
      "type": "edit",
      "id": "f30d45fa7b0ca831",
      "item": {
        "type": "code",
        "id": "f30d45fa7b0ca831",
        "text": "<img src=\"vid.gif\" alt=\"\" width=\"400\" height=\"300\" />"
      },
      "date": 1509476779417
    },
    {
      "type": "edit",
      "id": "f30d45fa7b0ca831",
      "item": {
        "type": "code",
        "id": "f30d45fa7b0ca831",
        "text": "<img src=\"vid.gif\" alt=\"\" width=\"400\" height=\"300\"/>"
      },
      "date": 1509476785049
    },
    {
      "type": "remove",
      "id": "9b82d405143c64e2",
      "date": 1509476791800
    },
    {
      "item": {
        "type": "factory",
        "id": "66d86d4d48e79b53"
      },
      "id": "66d86d4d48e79b53",
      "type": "add",
      "after": "588705f087035e4d",
      "date": 1509476799710
    },
    {
      "type": "edit",
      "id": "66d86d4d48e79b53",
      "item": {
        "type": "code",
        "id": "66d86d4d48e79b53",
        "text": "<video autoplay=\"autoplay\" loop=\"loop\" width=\"400\" height=\"300\">\n<source src=\"video.mp4\" type=\"video/mp4\" />\n<img src=\"video.gif\" width=\"400\" height=\"300\" /></video>"
      },
      "date": 1509476801763
    },
    {
      "type": "remove",
      "id": "588705f087035e4d",
      "date": 1509476804690
    },
    {
      "type": "edit",
      "id": "66d86d4d48e79b53",
      "item": {
        "type": "code",
        "id": "66d86d4d48e79b53",
        "text": "<video autoplay=\"autoplay\" loop=\"loop\" width=\"400\" height=\"300\">\n <source src=\"video.mp4\" type=\"video/mp4\" />\n <img src=\"video.gif\" width=\"400\" height=\"300\" /></video>"
      },
      "date": 1509476823620
    },
    {
      "item": {
        "type": "factory",
        "id": "717a71fbbddeae8e"
      },
      "id": "717a71fbbddeae8e",
      "type": "add",
      "after": "66d86d4d48e79b53",
      "date": 1509476827148
    },
    {
      "type": "move",
      "order": [
        "fa1a8be5e35d0ad3",
        "5e2cbc260aa469db",
        "321ba75897d88232",
        "717a71fbbddeae8e",
        "c878155048f04586",
        "118fa528b2bb5bf2",
        "62eaec8af7cda75d",
        "f30d45fa7b0ca831",
        "792545a9388c02b1",
        "66d86d4d48e79b53"
      ],
      "id": "717a71fbbddeae8e",
      "date": 1509476829054
    },
    {
      "type": "remove",
      "id": "321ba75897d88232",
      "date": 1509476837483
    },
    {
      "type": "edit",
      "id": "717a71fbbddeae8e",
      "item": {
        "type": "code",
        "id": "717a71fbbddeae8e",
        "text": "ffmpeg -i animated.gif -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" video.mp4"
      },
      "date": 1509476839525
    },
    {
      "type": "edit",
      "id": "5e2cbc260aa469db",
      "item": {
        "type": "paragraph",
        "id": "5e2cbc260aa469db",
        "text": "We can use ffmpeg, a free, open source command line tool to convert an animated GIF into an MP4 video. Make sure you download a pre-built package unless you are nerdy enough to build from source. In the example below we use FFmpeg to convert the file animated.gif into an MP4 video named video.mp4 - [https://rigor.com/blog/2015/12/optimizing-animated-gifs-with-html5-video rigor.com]"
      },
      "date": 1509476863174
    }
  ]
}