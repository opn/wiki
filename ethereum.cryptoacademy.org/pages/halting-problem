{
  "title": "Halting problem",
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "Halting problem"
      },
      "date": 1515504193053,
      "source": {
        "pageTitle": "Halting problem",
        "pageSlug": "Halting Problem",
        "url": "https://en.wikipedia.org/wiki/Halting_problem",
        "date": 1515504193052,
        "link_dictionary": {
          "wiki_links": {
            "Formalization": {
              "section_number": 6,
              "section_level": 2,
              "dot_number": 3
            },
            "Generalization": {
              "section_number": 11,
              "section_level": 2,
              "dot_number": 5
            },
            "Computability theory": {
              "section_number": 9,
              "section_level": 2,
              "dot_number": 4
            },
            "Notes": {
              "section_number": 16,
              "section_level": 2,
              "dot_number": 7
            },
            "References": {
              "section_number": 17,
              "section_level": 2,
              "dot_number": 8
            },
            "External links": {
              "section_number": 18,
              "section_level": 2,
              "dot_number": 9
            },
            "Background": {
              "section_number": 1,
              "section_level": 2,
              "dot_number": 1
            },
            "History": {
              "section_number": 4,
              "section_level": 2,
              "dot_number": 2
            },
            "See also": {
              "section_number": 15,
              "section_level": 2,
              "dot_number": 6
            }
          },
          "default": {
            "transport": "https://rest.livecode.world/mediawiki/importSection"
          }
        },
        "transport": "https://rest.livecode.world/mediawiki/transportAgain",
        "rev": 819064626,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "add",
      "id": "d7fd0d55-7de5-4e70-893d-44dd4474cc4d",
      "item": {
        "type": "factory",
        "id": "d7fd0d55-7de5-4e70-893d-44dd4474cc4d"
      },
      "date": 1515504193053
    },
    {
      "type": "edit",
      "id": "d7fd0d55-7de5-4e70-893d-44dd4474cc4d",
      "item": {
        "id": "d7fd0d55-7de5-4e70-893d-44dd4474cc4d",
        "type": "paragraph",
        "text": "In computability theory, the halting problem is the problem of determining, from a description of an arbitrary computer program and an input, whether the program will finish running or continue to run forever - [https://en.wikipedia.org/wiki/Halting_problem wikipedia]"
      },
      "date": 1515504193053
    },
    {
      "order": [
        "d7fd0d55-7de5-4e70-893d-44dd4474cc4d"
      ],
      "id": "pID",
      "type": "move",
      "date": 1515504193053
    },
    {
      "type": "add",
      "id": "e4cad6e6-d00c-42b9-8d3d-8d9f16aefcfc",
      "after": "d7fd0d55-7de5-4e70-893d-44dd4474cc4d",
      "item": {
        "type": "factory",
        "id": "e4cad6e6-d00c-42b9-8d3d-8d9f16aefcfc"
      },
      "date": 1515504193193
    },
    {
      "type": "edit",
      "id": "e4cad6e6-d00c-42b9-8d3d-8d9f16aefcfc",
      "item": {
        "id": "e4cad6e6-d00c-42b9-8d3d-8d9f16aefcfc",
        "type": "paragraph",
        "text": "Alan Turing proved in 1936 that a general algorithm to solve the halting problem for all possible program-input pairs cannot exist. A key part of the proof was a mathematical definition of a computer and program, which became known as a Turing machine; the halting problem is undecidable over Turing machines. It is one of the first examples of a decision problem."
      },
      "date": 1515504193193
    },
    {
      "type": "add",
      "id": "c9e65d96-2957-4403-a70d-b739726d0513",
      "after": "e4cad6e6-d00c-42b9-8d3d-8d9f16aefcfc",
      "item": {
        "type": "factory",
        "id": "c9e65d96-2957-4403-a70d-b739726d0513"
      },
      "date": 1515504193193
    },
    {
      "type": "edit",
      "id": "c9e65d96-2957-4403-a70d-b739726d0513",
      "item": {
        "id": "c9e65d96-2957-4403-a70d-b739726d0513",
        "type": "paragraph",
        "text": "Informally, for any program f that might determine if programs halt, a \"pathological\" program g called with an input can pass its own source and its input to f and then specifically do the opposite of what f predicts g will do. No f can exist that handles this case."
      },
      "date": 1515504193193
    },
    {
      "type": "add",
      "id": "70d74a87-c50f-48c6-966e-2f549673ad01",
      "after": "c9e65d96-2957-4403-a70d-b739726d0513",
      "item": {
        "type": "factory",
        "id": "70d74a87-c50f-48c6-966e-2f549673ad01"
      },
      "date": 1515504193194
    },
    {
      "type": "edit",
      "id": "70d74a87-c50f-48c6-966e-2f549673ad01",
      "item": {
        "id": "70d74a87-c50f-48c6-966e-2f549673ad01",
        "type": "paragraph",
        "text": "Jack Copeland (2004) attributes the term halting problem to Martin Davis."
      },
      "date": 1515504193194
    },
    {
      "order": [
        "d7fd0d55-7de5-4e70-893d-44dd4474cc4d",
        "e4cad6e6-d00c-42b9-8d3d-8d9f16aefcfc",
        "c9e65d96-2957-4403-a70d-b739726d0513",
        "70d74a87-c50f-48c6-966e-2f549673ad01"
      ],
      "id": "pID",
      "type": "move",
      "date": 1515504193194
    },
    {
      "type": "add",
      "id": "ea47569d-acfd-4ed8-835f-21ce08682190",
      "after": "70d74a87-c50f-48c6-966e-2f549673ad01",
      "item": {
        "type": "factory",
        "id": "ea47569d-acfd-4ed8-835f-21ce08682190"
      },
      "date": 1515504193195
    },
    {
      "type": "edit",
      "id": "ea47569d-acfd-4ed8-835f-21ce08682190",
      "item": {
        "id": "ea47569d-acfd-4ed8-835f-21ce08682190",
        "type": "markdown",
        "text": "# See also\n* [[Background]]\n* [[History]]\n* [[Formalization]]\n* [[Computability theory]]\n* [[Generalization]]\n* [[See also]]\n* [[Notes]]\n* [[References]]\n* [[External links]]"
      },
      "date": 1515504193195
    },
    {
      "type": "fork",
      "date": 1515504196927
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "d7fd0d55-7de5-4e70-893d-44dd4474cc4d",
      "text": "In computability theory, the halting problem is the problem of determining, from a description of an arbitrary computer program and an input, whether the program will finish running or continue to run forever - [https://en.wikipedia.org/wiki/Halting_problem wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "e4cad6e6-d00c-42b9-8d3d-8d9f16aefcfc",
      "text": "Alan Turing proved in 1936 that a general algorithm to solve the halting problem for all possible program-input pairs cannot exist. A key part of the proof was a mathematical definition of a computer and program, which became known as a Turing machine; the halting problem is undecidable over Turing machines. It is one of the first examples of a decision problem."
    },
    {
      "type": "paragraph",
      "id": "c9e65d96-2957-4403-a70d-b739726d0513",
      "text": "Informally, for any program f that might determine if programs halt, a \"pathological\" program g called with an input can pass its own source and its input to f and then specifically do the opposite of what f predicts g will do. No f can exist that handles this case."
    },
    {
      "type": "paragraph",
      "id": "70d74a87-c50f-48c6-966e-2f549673ad01",
      "text": "Jack Copeland (2004) attributes the term halting problem to Martin Davis."
    },
    {
      "type": "markdown",
      "id": "ea47569d-acfd-4ed8-835f-21ce08682190",
      "text": "# See also\n* [[Background]]\n* [[History]]\n* [[Formalization]]\n* [[Computability theory]]\n* [[Generalization]]\n* [[See also]]\n* [[Notes]]\n* [[References]]\n* [[External links]]"
    }
  ]
}