{
  "title": "Membrane computing",
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "Membrane computing"
      },
      "date": 1514989921170,
      "source": {
        "pageTitle": "Membrane computing",
        "pageSlug": "Membrane_computing",
        "url": "https://en.wikipedia.org/wiki/Membrane_computing",
        "date": 1514989921169,
        "link_dictionary": {
          "wiki_links": {
            "See also": {
              "section_number": 1,
              "section_level": 2,
              "dot_number": 1
            },
            "References": {
              "section_number": 2,
              "section_level": 2,
              "dot_number": 2
            }
          },
          "default": {
            "transport": "https://rest.livecode.world/mediawiki/importSection"
          }
        },
        "transport": "https://rest.livecode.world/mediawiki/transportAgain",
        "rev": 650016098,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "add",
      "id": "0fe6529d-3bca-494d-9bd9-e3c48337e0ec",
      "item": {
        "type": "factory",
        "id": "0fe6529d-3bca-494d-9bd9-e3c48337e0ec"
      },
      "date": 1514989921170
    },
    {
      "type": "edit",
      "id": "0fe6529d-3bca-494d-9bd9-e3c48337e0ec",
      "item": {
        "id": "0fe6529d-3bca-494d-9bd9-e3c48337e0ec",
        "type": "paragraph",
        "text": "Membrane computing (or MC) is an area within computer science that seeks to discover new computational models from the study of biological cells, particularly of the cellular membranes. It is a sub-task of creating a cellular model - [https://en.wikipedia.org/wiki/Membrane_computing wikipedia]"
      },
      "date": 1514989921170
    },
    {
      "order": [
        "0fe6529d-3bca-494d-9bd9-e3c48337e0ec"
      ],
      "id": "pID",
      "type": "move",
      "date": 1514989921171
    },
    {
      "type": "add",
      "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
      "after": "0fe6529d-3bca-494d-9bd9-e3c48337e0ec",
      "item": {
        "type": "factory",
        "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0"
      },
      "date": 1514989921320
    },
    {
      "type": "edit",
      "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
      "item": {
        "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
        "type": "paragraph",
        "text": "Membrane computing deals with distributed and parallel computing models, processing multisets of symbol objects in a localized manner. Thus, evolution rules allow for evolving objects to be encapsulated into compartments defined by membranes. The communications between compartments and with the environment play an essential role in the processes. The various types of membrane systems are known as P systems after Gheorghe Păun who first conceived the model in 1998."
      },
      "date": 1514989921320
    },
    {
      "type": "add",
      "id": "b8f8c390-f5bd-47d6-9e77-ecac719c1bbd",
      "after": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
      "item": {
        "type": "factory",
        "id": "b8f8c390-f5bd-47d6-9e77-ecac719c1bbd"
      },
      "date": 1514989921321
    },
    {
      "type": "edit",
      "id": "b8f8c390-f5bd-47d6-9e77-ecac719c1bbd",
      "item": {
        "id": "b8f8c390-f5bd-47d6-9e77-ecac719c1bbd",
        "type": "paragraph",
        "text": "An essential ingredient of a P system is its membrane structure, which can be a hierarchical arrangement of membranes, as in a cell, or a net of membranes (placed in the nodes of a graph), as in a tissue or a neural net. P systems are often depicted graphically with drawings."
      },
      "date": 1514989921321
    },
    {
      "type": "add",
      "id": "1e344b7c-b231-48ca-8a4d-9035f40f82bd",
      "after": "b8f8c390-f5bd-47d6-9e77-ecac719c1bbd",
      "item": {
        "type": "factory",
        "id": "1e344b7c-b231-48ca-8a4d-9035f40f82bd"
      },
      "date": 1514989921321
    },
    {
      "type": "edit",
      "id": "1e344b7c-b231-48ca-8a4d-9035f40f82bd",
      "item": {
        "id": "1e344b7c-b231-48ca-8a4d-9035f40f82bd",
        "type": "paragraph",
        "text": "The intuition behind the notion of a membrane is a three-dimensional vesicle from biology. However the concept itself is more general, and a membrane is seen as a separator of two regions. The membrane provides for selective communication between the two regions. As per Gheorghe Păun, the separation is of the Euclidean space into a finite “inside” and an infinite “outside”. The selective communication is where the computing comes in."
      },
      "date": 1514989921321
    },
    {
      "type": "add",
      "id": "9ba2ff32-c4d5-4047-8680-19b07ad07ecc",
      "after": "1e344b7c-b231-48ca-8a4d-9035f40f82bd",
      "item": {
        "type": "factory",
        "id": "9ba2ff32-c4d5-4047-8680-19b07ad07ecc"
      },
      "date": 1514989921322
    },
    {
      "type": "edit",
      "id": "9ba2ff32-c4d5-4047-8680-19b07ad07ecc",
      "item": {
        "id": "9ba2ff32-c4d5-4047-8680-19b07ad07ecc",
        "type": "paragraph",
        "text": "Graphical representations may have numerous elements, according to the variation of the model that is being studied. For example, a rule may produce the special symbol δ, in which case the membrane that contains it is dissolved and all its contents move up in the region hierarchy."
      },
      "date": 1514989921322
    },
    {
      "type": "add",
      "id": "1f52717a-facf-4c91-977c-cdb0f43f8043",
      "after": "9ba2ff32-c4d5-4047-8680-19b07ad07ecc",
      "item": {
        "type": "factory",
        "id": "1f52717a-facf-4c91-977c-cdb0f43f8043"
      },
      "date": 1514989921323
    },
    {
      "type": "edit",
      "id": "1f52717a-facf-4c91-977c-cdb0f43f8043",
      "item": {
        "id": "1f52717a-facf-4c91-977c-cdb0f43f8043",
        "type": "paragraph",
        "text": "The variety of suggestions from biology and the range of possibilities to define the architecture and the functioning of a membrane-based multiset processing device are practically endless. Indeed the membrane computing literature contains a very large number of models. Thus, MC is not merely a theory related to a specific model, it is a framework for devising compartmentalized models."
      },
      "date": 1514989921323
    },
    {
      "type": "add",
      "id": "6b096750-b92d-4ac0-b6a5-11ff9ef3a6fc",
      "after": "1f52717a-facf-4c91-977c-cdb0f43f8043",
      "item": {
        "type": "factory",
        "id": "6b096750-b92d-4ac0-b6a5-11ff9ef3a6fc"
      },
      "date": 1514989921324
    },
    {
      "type": "edit",
      "id": "6b096750-b92d-4ac0-b6a5-11ff9ef3a6fc",
      "item": {
        "id": "6b096750-b92d-4ac0-b6a5-11ff9ef3a6fc",
        "type": "paragraph",
        "text": "Chemicals are modeled by symbols, or alternatively by strings of symbols. The region, which is defined by a membrane, can contain other symbols or strings (collectively referred to as objects) or other membranes, so that a P system has exactly one outer membrane, called the skin membrane, and a hierarchical relationship governing all its membranes under the skin membrane."
      },
      "date": 1514989921324
    },
    {
      "type": "add",
      "id": "4d72d42d-6d75-4cb1-b052-75ad64fe21ac",
      "after": "6b096750-b92d-4ac0-b6a5-11ff9ef3a6fc",
      "item": {
        "type": "factory",
        "id": "4d72d42d-6d75-4cb1-b052-75ad64fe21ac"
      },
      "date": 1514989921325
    },
    {
      "type": "edit",
      "id": "4d72d42d-6d75-4cb1-b052-75ad64fe21ac",
      "item": {
        "id": "4d72d42d-6d75-4cb1-b052-75ad64fe21ac",
        "type": "paragraph",
        "text": "If objects are symbols, then their multiplicity within a region matters; however multi-sets are also used in some string models. Regions have associated rules that define how objects are produced, consumed, passed to other regions and otherwise interact with one another. The nondeterministic maximally parallel application of rules throughout the system is a transition between system states, and a sequence of transitions is called a computation. Particular goals can be defined to signify a halting state, at which point the result of the computation would be the objects contained in a particular region. Alternatively the result may be made up of objects sent out of the skin membrane to the environment."
      },
      "date": 1514989921325
    },
    {
      "type": "add",
      "id": "16b0bf70-622b-4c44-af80-b663fcc809b9",
      "after": "4d72d42d-6d75-4cb1-b052-75ad64fe21ac",
      "item": {
        "type": "factory",
        "id": "16b0bf70-622b-4c44-af80-b663fcc809b9"
      },
      "date": 1514989921325
    },
    {
      "type": "edit",
      "id": "16b0bf70-622b-4c44-af80-b663fcc809b9",
      "item": {
        "id": "16b0bf70-622b-4c44-af80-b663fcc809b9",
        "type": "paragraph",
        "text": "Many variant models have been studied, and interest has focused on proving computational universality for systems with a small number of membranes, for the purpose of solving NP-complete problems such as Boolean satisfiability (SAT) problems and the traveling salesman problem (TSP). The P systems may trade space and time complexities and less often use models to explain natural processes in living cells. The studies devise models that may at least theoretically be implemented on hardware. To date, the P systems are nearly all theoretical models that have never been reduced to practice, although a practical system is given in."
      },
      "date": 1514989921326
    },
    {
      "order": [
        "0fe6529d-3bca-494d-9bd9-e3c48337e0ec",
        "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
        "b8f8c390-f5bd-47d6-9e77-ecac719c1bbd",
        "1e344b7c-b231-48ca-8a4d-9035f40f82bd",
        "9ba2ff32-c4d5-4047-8680-19b07ad07ecc",
        "1f52717a-facf-4c91-977c-cdb0f43f8043",
        "6b096750-b92d-4ac0-b6a5-11ff9ef3a6fc",
        "4d72d42d-6d75-4cb1-b052-75ad64fe21ac",
        "16b0bf70-622b-4c44-af80-b663fcc809b9"
      ],
      "id": "pID",
      "type": "move",
      "date": 1514989921326
    },
    {
      "type": "add",
      "id": "27115205-82b4-4b05-a10b-568986eb48c6",
      "after": "16b0bf70-622b-4c44-af80-b663fcc809b9",
      "item": {
        "type": "factory",
        "id": "27115205-82b4-4b05-a10b-568986eb48c6"
      },
      "date": 1514989921327
    },
    {
      "type": "edit",
      "id": "27115205-82b4-4b05-a10b-568986eb48c6",
      "item": {
        "id": "27115205-82b4-4b05-a10b-568986eb48c6",
        "type": "markdown",
        "text": "# See also\n* [[See also]]\n* [[References]]"
      },
      "date": 1514989921327
    },
    {
      "type": "fork",
      "date": 1514989924921
    },
    {
      "item": {
        "type": "factory",
        "id": "72dd7ceb8cf57691"
      },
      "id": "72dd7ceb8cf57691",
      "type": "add",
      "after": "27115205-82b4-4b05-a10b-568986eb48c6",
      "date": 1514989925763
    },
    {
      "type": "move",
      "order": [
        "0fe6529d-3bca-494d-9bd9-e3c48337e0ec",
        "72dd7ceb8cf57691",
        "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
        "b8f8c390-f5bd-47d6-9e77-ecac719c1bbd",
        "1e344b7c-b231-48ca-8a4d-9035f40f82bd",
        "9ba2ff32-c4d5-4047-8680-19b07ad07ecc",
        "1f52717a-facf-4c91-977c-cdb0f43f8043",
        "6b096750-b92d-4ac0-b6a5-11ff9ef3a6fc",
        "4d72d42d-6d75-4cb1-b052-75ad64fe21ac",
        "16b0bf70-622b-4c44-af80-b663fcc809b9",
        "27115205-82b4-4b05-a10b-568986eb48c6"
      ],
      "id": "72dd7ceb8cf57691",
      "date": 1514989931469
    },
    {
      "type": "edit",
      "id": "72dd7ceb8cf57691",
      "item": {
        "type": "video",
        "id": "72dd7ceb8cf57691",
        "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7x5fCSNAQlNCJm0BpZblURj\n(double-click to edit caption)\n"
      },
      "date": 1514989940634
    },
    {
      "type": "edit",
      "id": "72dd7ceb8cf57691",
      "item": {
        "type": "video",
        "id": "72dd7ceb8cf57691",
        "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7x5fCSNAQlNCJm0BpZblURj\nMethods for deterministic parallelizing message processing - Martin "
      },
      "date": 1514990140708
    },
    {
      "type": "edit",
      "id": "72dd7ceb8cf57691",
      "item": {
        "type": "video",
        "id": "72dd7ceb8cf57691",
        "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7x5fCSNAQlNCJm0BpZblURj\nMethods for deterministic parallelizing message processing - Martin Becze ([[ewasm]] and [[EthereumJS]]) "
      },
      "date": 1514990192069
    },
    {
      "type": "edit",
      "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
      "item": {
        "type": "paragraph",
        "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
        "text": "# background"
      },
      "date": 1514990210676
    },
    {
      "type": "add",
      "id": "d369965792ee6273",
      "item": {
        "type": "paragraph",
        "id": "d369965792ee6273",
        "text": "Membrane computing deals with distributed and parallel computing models, processing multisets of symbol objects in a localized manner. Thus, evolution rules allow for evolving objects to be encapsulated into compartments defined by membranes. The communications between compartments and with the environment play an essential role in the processes. The various types of membrane systems are known as P systems after Gheorghe Păun who first conceived the model in 1998."
      },
      "after": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
      "date": 1514990212235
    },
    {
      "type": "edit",
      "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
      "item": {
        "type": "paragraph",
        "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
        "text": "# Background"
      },
      "date": 1514990215058
    },
    {
      "type": "add",
      "id": "2293d57bd3327c35",
      "item": {
        "type": "paragraph",
        "id": "2293d57bd3327c35",
        "text": "# Ethereum and Holochain"
      },
      "after": "0fe6529d-3bca-494d-9bd9-e3c48337e0ec",
      "date": 1514990228082
    },
    {
      "type": "add",
      "id": "1ccdfa78a7690412",
      "item": {
        "type": "paragraph",
        "id": "1ccdfa78a7690412",
        "text": "Here we look at how organic paradigms can be implemented in "
      },
      "after": "2293d57bd3327c35",
      "date": 1514990265883
    },
    {
      "type": "edit",
      "id": "1ccdfa78a7690412",
      "item": {
        "type": "paragraph",
        "id": "1ccdfa78a7690412",
        "text": "Here we look at how organic paradigms can be implemented in [[Ethereum]] and [[Holochain]]."
      },
      "date": 1514990282252
    },
    {
      "type": "edit",
      "id": "2293d57bd3327c35",
      "item": {
        "type": "markdown",
        "id": "2293d57bd3327c35",
        "text": "# Ethereum and Holochain"
      },
      "date": 1514990284054
    },
    {
      "type": "edit",
      "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
      "item": {
        "type": "markdown",
        "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
        "text": "# Background"
      },
      "date": 1514990285656
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "0fe6529d-3bca-494d-9bd9-e3c48337e0ec",
      "text": "Membrane computing (or MC) is an area within computer science that seeks to discover new computational models from the study of biological cells, particularly of the cellular membranes. It is a sub-task of creating a cellular model - [https://en.wikipedia.org/wiki/Membrane_computing wikipedia]"
    },
    {
      "type": "markdown",
      "id": "2293d57bd3327c35",
      "text": "# Ethereum and Holochain"
    },
    {
      "type": "paragraph",
      "id": "1ccdfa78a7690412",
      "text": "Here we look at how organic paradigms can be implemented in [[Ethereum]] and [[Holochain]]."
    },
    {
      "type": "video",
      "id": "72dd7ceb8cf57691",
      "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7x5fCSNAQlNCJm0BpZblURj\nMethods for deterministic parallelizing message processing - Martin Becze ([[ewasm]] and [[EthereumJS]]) "
    },
    {
      "type": "markdown",
      "id": "b44e9142-fd09-46bd-aaba-b60fcfe0f7d0",
      "text": "# Background"
    },
    {
      "type": "paragraph",
      "id": "d369965792ee6273",
      "text": "Membrane computing deals with distributed and parallel computing models, processing multisets of symbol objects in a localized manner. Thus, evolution rules allow for evolving objects to be encapsulated into compartments defined by membranes. The communications between compartments and with the environment play an essential role in the processes. The various types of membrane systems are known as P systems after Gheorghe Păun who first conceived the model in 1998."
    },
    {
      "type": "paragraph",
      "id": "b8f8c390-f5bd-47d6-9e77-ecac719c1bbd",
      "text": "An essential ingredient of a P system is its membrane structure, which can be a hierarchical arrangement of membranes, as in a cell, or a net of membranes (placed in the nodes of a graph), as in a tissue or a neural net. P systems are often depicted graphically with drawings."
    },
    {
      "type": "paragraph",
      "id": "1e344b7c-b231-48ca-8a4d-9035f40f82bd",
      "text": "The intuition behind the notion of a membrane is a three-dimensional vesicle from biology. However the concept itself is more general, and a membrane is seen as a separator of two regions. The membrane provides for selective communication between the two regions. As per Gheorghe Păun, the separation is of the Euclidean space into a finite “inside” and an infinite “outside”. The selective communication is where the computing comes in."
    },
    {
      "type": "paragraph",
      "id": "9ba2ff32-c4d5-4047-8680-19b07ad07ecc",
      "text": "Graphical representations may have numerous elements, according to the variation of the model that is being studied. For example, a rule may produce the special symbol δ, in which case the membrane that contains it is dissolved and all its contents move up in the region hierarchy."
    },
    {
      "type": "paragraph",
      "id": "1f52717a-facf-4c91-977c-cdb0f43f8043",
      "text": "The variety of suggestions from biology and the range of possibilities to define the architecture and the functioning of a membrane-based multiset processing device are practically endless. Indeed the membrane computing literature contains a very large number of models. Thus, MC is not merely a theory related to a specific model, it is a framework for devising compartmentalized models."
    },
    {
      "type": "paragraph",
      "id": "6b096750-b92d-4ac0-b6a5-11ff9ef3a6fc",
      "text": "Chemicals are modeled by symbols, or alternatively by strings of symbols. The region, which is defined by a membrane, can contain other symbols or strings (collectively referred to as objects) or other membranes, so that a P system has exactly one outer membrane, called the skin membrane, and a hierarchical relationship governing all its membranes under the skin membrane."
    },
    {
      "type": "paragraph",
      "id": "4d72d42d-6d75-4cb1-b052-75ad64fe21ac",
      "text": "If objects are symbols, then their multiplicity within a region matters; however multi-sets are also used in some string models. Regions have associated rules that define how objects are produced, consumed, passed to other regions and otherwise interact with one another. The nondeterministic maximally parallel application of rules throughout the system is a transition between system states, and a sequence of transitions is called a computation. Particular goals can be defined to signify a halting state, at which point the result of the computation would be the objects contained in a particular region. Alternatively the result may be made up of objects sent out of the skin membrane to the environment."
    },
    {
      "type": "paragraph",
      "id": "16b0bf70-622b-4c44-af80-b663fcc809b9",
      "text": "Many variant models have been studied, and interest has focused on proving computational universality for systems with a small number of membranes, for the purpose of solving NP-complete problems such as Boolean satisfiability (SAT) problems and the traveling salesman problem (TSP). The P systems may trade space and time complexities and less often use models to explain natural processes in living cells. The studies devise models that may at least theoretically be implemented on hardware. To date, the P systems are nearly all theoretical models that have never been reduced to practice, although a practical system is given in."
    },
    {
      "type": "markdown",
      "id": "27115205-82b4-4b05-a10b-568986eb48c6",
      "text": "# See also\n* [[See also]]\n* [[References]]"
    }
  ]
}