{
  "title": "EVM-C",
  "story": [
    {
      "type": "paragraph",
      "id": "f051d78d48dc1a7c",
      "text": "EVM-C – C interface to Ethereum Virtual Machine. this looks like the library we need to create a [[Livecode]] library easily in [[Livecode Builder]]. This would enable cross platform creation of DAPPs in LiveCode - let's call it [[Ethereum for Kids]].\n"
    },
    {
      "type": "video",
      "id": "1d1effb5a4b8b514",
      "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7xnKb_SeaKZ27opvaIjlBv5\nPawel Bylica (Ethereum – C++ developer) presents [[EVM-C]]: Portable API for Ethereum Virtual Machines - [https://github.com/chfast?tab=repositories github]"
    },
    {
      "type": "markdown",
      "id": "48b50f6a9abb3979",
      "text": "# High level design rules\n"
    },
    {
      "type": "paragraph",
      "id": "9ae564e8e20e26ea",
      "text": "Pass function arguments and results by value. This rule comes from modern C++ and tries to avoid costly alias analysis needed for optimization. As the result we have a lots of complex structs and unions. And variable sized arrays of bytes cannot be passed by copy."
    },
    {
      "type": "paragraph",
      "id": "1c9c027c45f4a35e",
      "text": "The EVM operates on integers so it prefers values to be host-endian. On the other hand, LLVM can generate good code for byte swaping. The interface also tries to match host application \"natural\" endianess. I would like to know what endianess you use and where."
    },
    {
      "type": "markdown",
      "id": "33522822c77e95c3",
      "text": "# Portability"
    },
    {
      "type": "paragraph",
      "id": "8012d7a0e3d4ad10",
      "text": "The Ethereum C++ client code is exceedingly portable, and is being successfully used on a huge range of different operating systems and devices - [http://www.ethdocs.org/en/latest/ethereum-clients/cpp-ethereum/portability.html ethdocs.org]"
    },
    {
      "type": "markdown",
      "id": "547e1d8c78fa6532",
      "text": "# See also\n- [http://ethereum.github.io/evmjit/docs/group__EVMC.html#details ethereum.github.io]\n- Paweł Bylica (pawel@ethereum.org) - [https://twitter.com/chfast?lang=en twitter]\n- Slides - [https://docs.google.com/presentation/d/1pj-6FboS-wR7PXL1BP0GzvDVShykmbGzhaP0srV9iWI/edit#slide=id.g35f391192_00 docs.google.com]\n- C Header - [https://github.com/ethereum/evmjit/blob/develop/include/evm.h github]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "EVM-C",
        "story": []
      },
      "date": 1515111547476
    },
    {
      "item": {
        "type": "factory",
        "id": "f051d78d48dc1a7c"
      },
      "id": "f051d78d48dc1a7c",
      "type": "add",
      "date": 1515111548416
    },
    {
      "item": {
        "type": "factory",
        "id": "1d1effb5a4b8b514"
      },
      "id": "1d1effb5a4b8b514",
      "type": "add",
      "after": "f051d78d48dc1a7c",
      "date": 1515111549454
    },
    {
      "type": "edit",
      "id": "1d1effb5a4b8b514",
      "item": {
        "type": "video",
        "id": "1d1effb5a4b8b514",
        "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7xnKb_SeaKZ27opvaIjlBv5\n(double-click to edit caption)\n"
      },
      "date": 1515111556705
    },
    {
      "type": "edit",
      "id": "1d1effb5a4b8b514",
      "item": {
        "type": "video",
        "id": "1d1effb5a4b8b514",
        "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7xnKb_SeaKZ27opvaIjlBv5\nEVM-C: Portable API for Ethereum Virtual Machines"
      },
      "date": 1515111570825
    },
    {
      "type": "edit",
      "id": "1d1effb5a4b8b514",
      "item": {
        "type": "video",
        "id": "1d1effb5a4b8b514",
        "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7xnKb_SeaKZ27opvaIjlBv5\nPawel Bylica (Ethereum – C++ developer) presnts [[EVM-C]]: Portable API for Ethereum Virtual Machines"
      },
      "date": 1515111605353
    },
    {
      "type": "edit",
      "id": "f051d78d48dc1a7c",
      "item": {
        "type": "paragraph",
        "id": "f051d78d48dc1a7c",
        "text": "EVM-C – C interface to Ethereum Virtual Machine.\n\n# High level design rules\nPass function arguments and results by value. This rule comes from modern C++ and tries to avoid costly alias analysis needed for optimization. As the result we have a lots of complex structs and unions. And variable sized arrays of bytes cannot be passed by copy."
      },
      "date": 1515111653092
    },
    {
      "type": "add",
      "id": "1c9c027c45f4a35e",
      "item": {
        "type": "paragraph",
        "id": "1c9c027c45f4a35e",
        "text": "The EVM operates on integers so it prefers values to be host-endian. On the other hand, LLVM can generate good code for byte swaping. The interface also tries to match host application \"natural\" endianess. I would like to know what endianess you use and where.\n"
      },
      "after": "f051d78d48dc1a7c",
      "date": 1515111655848
    },
    {
      "type": "edit",
      "id": "f051d78d48dc1a7c",
      "item": {
        "type": "paragraph",
        "id": "f051d78d48dc1a7c",
        "text": "EVM-C – C interface to Ethereum Virtual Machine.\n"
      },
      "date": 1515111661067
    },
    {
      "type": "add",
      "id": "48b50f6a9abb3979",
      "item": {
        "type": "paragraph",
        "id": "48b50f6a9abb3979",
        "text": "# High level design rules\n"
      },
      "after": "f051d78d48dc1a7c",
      "date": 1515111663075
    },
    {
      "type": "edit",
      "id": "48b50f6a9abb3979",
      "item": {
        "type": "markdown",
        "id": "48b50f6a9abb3979",
        "text": "# High level design rules\n"
      },
      "date": 1515111664546
    },
    {
      "type": "add",
      "id": "9ae564e8e20e26ea",
      "item": {
        "type": "paragraph",
        "id": "9ae564e8e20e26ea",
        "text": "Pass function arguments and results by value. This rule comes from modern C++ and tries to avoid costly alias analysis needed for optimization. As the result we have a lots of complex structs and unions. And variable sized arrays of bytes cannot be passed by copy."
      },
      "after": "48b50f6a9abb3979",
      "date": 1515111665634
    },
    {
      "type": "move",
      "order": [
        "f051d78d48dc1a7c",
        "48b50f6a9abb3979",
        "9ae564e8e20e26ea",
        "1d1effb5a4b8b514",
        "1c9c027c45f4a35e"
      ],
      "id": "1c9c027c45f4a35e",
      "date": 1515111668081
    },
    {
      "type": "move",
      "order": [
        "f051d78d48dc1a7c",
        "1d1effb5a4b8b514",
        "48b50f6a9abb3979",
        "9ae564e8e20e26ea",
        "1c9c027c45f4a35e"
      ],
      "id": "1d1effb5a4b8b514",
      "date": 1515111671362
    },
    {
      "type": "edit",
      "id": "f051d78d48dc1a7c",
      "item": {
        "type": "paragraph",
        "id": "f051d78d48dc1a7c",
        "text": "EVM-C – C interface to Ethereum Virtual Machine. this looks like the library we need to create a [[LiveCode]] library easily in [[Livecode Builder]]. This would enable cross platform creation of DAPPs in LiveCode - let's call it [[Ethereum for Kids]].\n"
      },
      "date": 1515111813038
    },
    {
      "type": "edit",
      "id": "f051d78d48dc1a7c",
      "item": {
        "type": "paragraph",
        "id": "f051d78d48dc1a7c",
        "text": "EVM-C – C interface to Ethereum Virtual Machine. this looks like the library we need to create a [[Livecode]] library easily in [[Livecode Builder]]. This would enable cross platform creation of DAPPs in LiveCode - let's call it [[Ethereum for Kids]].\n"
      },
      "date": 1515112190560
    },
    {
      "type": "edit",
      "id": "1d1effb5a4b8b514",
      "item": {
        "type": "video",
        "id": "1d1effb5a4b8b514",
        "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7xnKb_SeaKZ27opvaIjlBv5\nPawel Bylica (Ethereum – C++ developer) presents [[EVM-C]]: Portable API for Ethereum Virtual Machines"
      },
      "date": 1519429682976
    },
    {
      "type": "edit",
      "id": "1d1effb5a4b8b514",
      "item": {
        "type": "video",
        "id": "1d1effb5a4b8b514",
        "text": "YOUTUBE PLAYLIST PLaM7G4Llrb7xnKb_SeaKZ27opvaIjlBv5\nPawel Bylica (Ethereum – C++ developer) presents [[EVM-C]]: Portable API for Ethereum Virtual Machines - [https://github.com/chfast?tab=repositories github]"
      },
      "date": 1519430401475
    },
    {
      "item": {
        "type": "factory",
        "id": "547e1d8c78fa6532"
      },
      "id": "547e1d8c78fa6532",
      "type": "add",
      "after": "1c9c027c45f4a35e",
      "date": 1519430956702
    },
    {
      "type": "edit",
      "id": "547e1d8c78fa6532",
      "item": {
        "type": "markdown",
        "id": "547e1d8c78fa6532",
        "text": "# See also\n"
      },
      "date": 1519430962874
    },
    {
      "type": "edit",
      "id": "547e1d8c78fa6532",
      "item": {
        "type": "markdown",
        "id": "547e1d8c78fa6532",
        "text": "# See also\n- [http://ethereum.github.io/evmjit/docs/group__EVMC.html#details ethereum.github.io]"
      },
      "date": 1519430978291
    },
    {
      "type": "edit",
      "id": "547e1d8c78fa6532",
      "item": {
        "type": "markdown",
        "id": "547e1d8c78fa6532",
        "text": "# See also\n- [http://ethereum.github.io/evmjit/docs/group__EVMC.html#details ethereum.github.io]\n- Paweł Bylica [fsad twitter]"
      },
      "date": 1519431030804
    },
    {
      "type": "edit",
      "id": "547e1d8c78fa6532",
      "item": {
        "type": "markdown",
        "id": "547e1d8c78fa6532",
        "text": "# See also\n- [http://ethereum.github.io/evmjit/docs/group__EVMC.html#details ethereum.github.io]\n- Paweł Bylica [https://twitter.com/chfast?lang=en twitter]"
      },
      "date": 1519431056015
    },
    {
      "type": "edit",
      "id": "547e1d8c78fa6532",
      "item": {
        "type": "markdown",
        "id": "547e1d8c78fa6532",
        "text": "# See also\n- [http://ethereum.github.io/evmjit/docs/group__EVMC.html#details ethereum.github.io]\n- Paweł Bylica - [https://twitter.com/chfast?lang=en twitter]"
      },
      "date": 1519431062839
    },
    {
      "type": "edit",
      "id": "547e1d8c78fa6532",
      "item": {
        "type": "markdown",
        "id": "547e1d8c78fa6532",
        "text": "# See also\n- [http://ethereum.github.io/evmjit/docs/group__EVMC.html#details ethereum.github.io]\n- Paweł Bylica - [https://twitter.com/chfast?lang=en twitter]\n- Slides - [https://docs.google.com/presentation/d/1pj-6FboS-wR7PXL1BP0GzvDVShykmbGzhaP0srV9iWI/edit#slide=id.g35f391192_00 docs.google.com]"
      },
      "date": 1519431100125
    },
    {
      "type": "edit",
      "id": "547e1d8c78fa6532",
      "item": {
        "type": "markdown",
        "id": "547e1d8c78fa6532",
        "text": "# See also\n- [http://ethereum.github.io/evmjit/docs/group__EVMC.html#details ethereum.github.io]\n- Paweł Bylica - [https://twitter.com/chfast?lang=en twitter]\n- Slides - [https://docs.google.com/presentation/d/1pj-6FboS-wR7PXL1BP0GzvDVShykmbGzhaP0srV9iWI/edit#slide=id.g35f391192_00 docs.google.com]\n- C Header - [https://github.com/ethereum/evmjit/blob/develop/include/evm.h github]"
      },
      "date": 1519431221948
    },
    {
      "type": "edit",
      "id": "547e1d8c78fa6532",
      "item": {
        "type": "markdown",
        "id": "547e1d8c78fa6532",
        "text": "# See also\n- [http://ethereum.github.io/evmjit/docs/group__EVMC.html#details ethereum.github.io]\n- Paweł Bylica (pawel@ethereum.org) - [https://twitter.com/chfast?lang=en twitter]\n- Slides - [https://docs.google.com/presentation/d/1pj-6FboS-wR7PXL1BP0GzvDVShykmbGzhaP0srV9iWI/edit#slide=id.g35f391192_00 docs.google.com]\n- C Header - [https://github.com/ethereum/evmjit/blob/develop/include/evm.h github]"
      },
      "date": 1519431343304
    },
    {
      "type": "edit",
      "id": "1c9c027c45f4a35e",
      "item": {
        "type": "paragraph",
        "id": "1c9c027c45f4a35e",
        "text": "The EVM operates on integers so it prefers values to be host-endian. On the other hand, LLVM can generate good code for byte swaping. The interface also tries to match host application \"natural\" endianess. I would like to know what endianess you use and where."
      },
      "date": 1519466555462
    },
    {
      "type": "add",
      "id": "33522822c77e95c3",
      "item": {
        "type": "paragraph",
        "id": "33522822c77e95c3",
        "text": "# Portability"
      },
      "after": "1c9c027c45f4a35e",
      "date": 1519466559570
    },
    {
      "type": "add",
      "id": "8012d7a0e3d4ad10",
      "item": {
        "type": "paragraph",
        "id": "8012d7a0e3d4ad10",
        "text": "- [http://www.ethdocs.org/en/latest/ethereum-clients/cpp-ethereum/portability.html ethdocs.org]"
      },
      "after": "33522822c77e95c3",
      "date": 1519466569723
    },
    {
      "type": "edit",
      "id": "33522822c77e95c3",
      "item": {
        "type": "markdown",
        "id": "33522822c77e95c3",
        "text": "# Portability"
      },
      "date": 1519466579579
    },
    {
      "type": "edit",
      "id": "8012d7a0e3d4ad10",
      "item": {
        "type": "paragraph",
        "id": "8012d7a0e3d4ad10",
        "text": "The Ethereum C++ client code is exceedingly portable, and is being successfully used on a huge range of different operating systems and devices - [http://www.ethdocs.org/en/latest/ethereum-clients/cpp-ethereum/portability.html ethdocs.org]"
      },
      "date": 1519466587445
    }
  ]
}