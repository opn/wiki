{
  "title": "gLiveCodeWorld",
  "story": [
    {
      "type": "paragraph",
      "id": "463f2fc6865e89d1",
      "text": "All global variables used by the [[Livecode World environment]] should be moved into a single namespace (a single global variable)."
    },
    {
      "type": "paragraph",
      "id": "b9275289668a6eac",
      "text": "The handlers have a rough equivalent with regard to \"library\" handlers.\n\nThe aim is to move over from one huge library, to individual projects.\nEach project would have it's own \"home\" stack, where we store stackfiles to all the stacks it needs to know about.\nAssociated with this home stack we can use the standardised technique of logging metadata,\nwhere we can store arbitrary information.\n\nIn this way the metadata of the projects home stack contains all the information we need about the project.\n\nFor now let's keep using the old \"library\" rather than \"project\" based model for stackFiles.\nBy this I mean we continue to store set array in the global library rather than in a folder associated with the project.\nThe first stage of teh transition is to see if multiple home stacks with stackfiles works well.\nSee also \"meta_StackArrayFile\" for project level stackfile storage"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "gLiveCodeWorld",
        "story": []
      },
      "date": 1471078121077
    },
    {
      "item": {
        "type": "factory",
        "id": "463f2fc6865e89d1"
      },
      "id": "463f2fc6865e89d1",
      "type": "add",
      "date": 1471078123231
    },
    {
      "type": "edit",
      "id": "463f2fc6865e89d1",
      "item": {
        "type": "paragraph",
        "id": "463f2fc6865e89d1",
        "text": "All global variables used by the [[Livecode World environment]] should be moved into a single namespace (a single global variable)."
      },
      "date": 1471078203284
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b9275289668a6eac",
        "text": "The handlers have a rough equivalent with regard to \"library\" handlers.\n\nThe aim is to move over from one huge library, to individual projects.\nEach project would have it's own \"home\" stack, where we store stackfiles to all the stacks it needs to know about.\nAssociated with this home stack we can use the standardised technique of logging metadata,\nwhere we can store arbitrary information.\n\nIn this way the metadata of the projects home stack contains all the information we need about the project.\n\nFor now let's keep using the old \"library\" rather than \"project\" based model for stackFiles.\nBy this I mean we continue to store set array in the global library rather than in a folder associated with the project.\nThe first stage of teh transition is to see if multiple home stacks with stackfiles works well.\nSee also \"meta_StackArrayFile\" for project level stackfile storage"
      },
      "after": "463f2fc6865e89d1",
      "id": "b9275289668a6eac",
      "date": 1471081991247
    }
  ]
}