{
  "title": "querySelector",
  "story": [
    {
      "type": "paragraph",
      "id": "30b4e048e499372e",
      "text": "Returns the first element that is a descendant of the element on which it is invoked that matches the specified group of selectors - [https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector mozilla.org]"
    },
    {
      "type": "markdown",
      "id": "270a0572aa8b5b0e",
      "text": "# Syntax"
    },
    {
      "type": "code",
      "id": "eab764e0db9bd0dd",
      "text": "element = baseElement.querySelector(selectors);"
    },
    {
      "type": "paragraph",
      "id": "98214952ac4b42c8",
      "text": "element and baseElement are element objects.\nselectors is a group of selectors to match on."
    },
    {
      "type": "paragraph",
      "id": "1f6e4e3d6cda2490",
      "text": "The querySelector function takes an argument, and this argument is a CSS selector for the element you are wanting to find. What gets returned by querySelector is the first element it finds - even if other elements exist that could get targeted by the selector. This function is pretty stubborn like that.\n"
    },
    {
      "type": "markdown",
      "id": "1be287cf5471f24f",
      "text": "# Examples\n"
    },
    {
      "type": "paragraph",
      "id": "0339b3cb728e2628",
      "text": "There are plenty of great examples over at [http://www.w3schools.com/jsref/met_document_queryselector.asp w3schools]"
    },
    {
      "type": "paragraph",
      "id": "dcb5e027007e26ee",
      "text": "If we wanted to access the div whose id is \"main\", you would write the following:\n\n"
    },
    {
      "type": "code",
      "id": "e3781a3acba7f449",
      "text": "var element = document.querySelector(\"#main\");"
    },
    {
      "type": "paragraph",
      "id": "069a34fa76803bd3",
      "text": "Because main is the id, the selector syntax for targeting it would be #main. Similarly, let me specify the selector for the pictureContainer class:\n\n"
    },
    {
      "type": "code",
      "id": "6962ef3d0bb479a7",
      "text": "var element = document.querySelector(\".pictureContainer\");"
    },
    {
      "type": "paragraph",
      "id": "14e6b9c78ea9de40",
      "text": "What gets returned is the first div whose class value is pictureContainer. The other div elements with the class value of pictureContainer will simply be ignored.\n\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "querySelector",
        "story": []
      },
      "date": 1448837000500
    },
    {
      "item": {
        "type": "factory",
        "id": "30b4e048e499372e"
      },
      "id": "30b4e048e499372e",
      "type": "add",
      "date": 1448837001713
    },
    {
      "type": "edit",
      "id": "30b4e048e499372e",
      "item": {
        "type": "paragraph",
        "id": "30b4e048e499372e",
        "text": "The querySelector function basically works as follows:\n\n"
      },
      "date": 1448837009403
    },
    {
      "type": "add",
      "id": "006f68bfddf2b85e",
      "item": {
        "type": "paragraph",
        "id": "006f68bfddf2b85e",
        "text": "var element = document.querySelector(\"< CSS selector >\");\n"
      },
      "after": "30b4e048e499372e",
      "date": 1448837011802
    },
    {
      "type": "add",
      "id": "1f6e4e3d6cda2490",
      "item": {
        "type": "paragraph",
        "id": "1f6e4e3d6cda2490",
        "text": "The querySelector function takes an argument, and this argument is a CSS selector for the element you are wanting to find. What gets returned by querySelector is the first element it finds - even if other elements exist that could get targeted by the selector. This function is pretty stubborn like that.\n\nTaking the HTML from our earlier example, if we wanted to access the div whose id is main, you would write the following:\n\n"
      },
      "after": "006f68bfddf2b85e",
      "date": 1448837018594
    },
    {
      "type": "add",
      "id": "4016d60ae79f2772",
      "item": {
        "type": "paragraph",
        "id": "4016d60ae79f2772",
        "text": "var element = document.querySelector(\"#main\");\n"
      },
      "after": "1f6e4e3d6cda2490",
      "date": 1448837022932
    },
    {
      "type": "add",
      "id": "069a34fa76803bd3",
      "item": {
        "type": "paragraph",
        "id": "069a34fa76803bd3",
        "text": "Because main is the id, the selector syntax for targeting it would be #main. Similarly, let me specify the selector for the pictureContainer class:\n\n"
      },
      "after": "4016d60ae79f2772",
      "date": 1448837026499
    },
    {
      "type": "add",
      "id": "516b9d2c739a8ca4",
      "item": {
        "type": "paragraph",
        "id": "516b9d2c739a8ca4",
        "text": "var element = document.querySelector(\".pictureContainer\");\n"
      },
      "after": "069a34fa76803bd3",
      "date": 1448837029619
    },
    {
      "type": "add",
      "id": "14e6b9c78ea9de40",
      "item": {
        "type": "paragraph",
        "id": "14e6b9c78ea9de40",
        "text": "What gets returned is the first div whose class value is pictureContainer. The other div elements with the class value of pictureContainer will simply be ignored.\n\n"
      },
      "after": "516b9d2c739a8ca4",
      "date": 1448837032740
    },
    {
      "type": "add",
      "id": "0339b3cb728e2628",
      "item": {
        "type": "paragraph",
        "id": "0339b3cb728e2628",
        "text": "The selector syntax is not modified or made special because you are in JavaScript. The exact syntax you would use for selectors in your stylesheet or style region can be used!"
      },
      "after": "14e6b9c78ea9de40",
      "date": 1448837036220
    },
    {
      "item": {
        "type": "factory",
        "id": "81fd76cfc2d0ebe5"
      },
      "id": "81fd76cfc2d0ebe5",
      "type": "add",
      "after": "0339b3cb728e2628",
      "date": 1448837038676
    },
    {
      "type": "move",
      "order": [
        "30b4e048e499372e",
        "81fd76cfc2d0ebe5",
        "006f68bfddf2b85e",
        "1f6e4e3d6cda2490",
        "4016d60ae79f2772",
        "069a34fa76803bd3",
        "516b9d2c739a8ca4",
        "14e6b9c78ea9de40",
        "0339b3cb728e2628"
      ],
      "id": "81fd76cfc2d0ebe5",
      "date": 1448837040894
    },
    {
      "type": "remove",
      "id": "006f68bfddf2b85e",
      "date": 1448837047922
    },
    {
      "type": "edit",
      "id": "81fd76cfc2d0ebe5",
      "item": {
        "type": "code",
        "id": "81fd76cfc2d0ebe5",
        "text": "var element = document.querySelector(\"< CSS selector >\");"
      },
      "date": 1448837049597
    },
    {
      "item": {
        "type": "factory",
        "id": "e3781a3acba7f449"
      },
      "id": "e3781a3acba7f449",
      "type": "add",
      "after": "0339b3cb728e2628",
      "date": 1448837052468
    },
    {
      "type": "move",
      "order": [
        "30b4e048e499372e",
        "81fd76cfc2d0ebe5",
        "1f6e4e3d6cda2490",
        "4016d60ae79f2772",
        "e3781a3acba7f449",
        "069a34fa76803bd3",
        "516b9d2c739a8ca4",
        "14e6b9c78ea9de40",
        "0339b3cb728e2628"
      ],
      "id": "e3781a3acba7f449",
      "date": 1448837062861
    },
    {
      "type": "remove",
      "id": "4016d60ae79f2772",
      "date": 1448837066428
    },
    {
      "type": "edit",
      "id": "e3781a3acba7f449",
      "item": {
        "type": "code",
        "id": "e3781a3acba7f449",
        "text": "var element = document.querySelector(\"#main\");"
      },
      "date": 1448837069302
    },
    {
      "item": {
        "type": "factory",
        "id": "6962ef3d0bb479a7"
      },
      "id": "6962ef3d0bb479a7",
      "type": "add",
      "after": "0339b3cb728e2628",
      "date": 1448837105904
    },
    {
      "type": "move",
      "order": [
        "30b4e048e499372e",
        "81fd76cfc2d0ebe5",
        "1f6e4e3d6cda2490",
        "e3781a3acba7f449",
        "069a34fa76803bd3",
        "6962ef3d0bb479a7",
        "516b9d2c739a8ca4",
        "14e6b9c78ea9de40",
        "0339b3cb728e2628"
      ],
      "id": "6962ef3d0bb479a7",
      "date": 1448837108016
    },
    {
      "type": "remove",
      "id": "516b9d2c739a8ca4",
      "date": 1448837112397
    },
    {
      "type": "edit",
      "id": "6962ef3d0bb479a7",
      "item": {
        "type": "code",
        "id": "6962ef3d0bb479a7",
        "text": "var element = document.querySelector(\".pictureContainer\");"
      },
      "date": 1448837115958
    },
    {
      "type": "edit",
      "id": "30b4e048e499372e",
      "item": {
        "type": "paragraph",
        "id": "30b4e048e499372e",
        "text": "Returns the first element that is a descendant of the element on which it is invoked that matches the specified group of selectors."
      },
      "date": 1448837220640
    },
    {
      "type": "add",
      "id": "270a0572aa8b5b0e",
      "item": {
        "type": "paragraph",
        "id": "270a0572aa8b5b0e",
        "text": "# Syntax\nelement = baseElement.querySelector(selectors);\n"
      },
      "after": "30b4e048e499372e",
      "date": 1448837230801
    },
    {
      "type": "add",
      "id": "98214952ac4b42c8",
      "item": {
        "type": "paragraph",
        "id": "98214952ac4b42c8",
        "text": "element and baseElement are element objects.\nselectors is a group of selectors to match on."
      },
      "after": "270a0572aa8b5b0e",
      "date": 1448837235200
    },
    {
      "item": {
        "type": "factory",
        "id": "eab764e0db9bd0dd"
      },
      "id": "eab764e0db9bd0dd",
      "type": "add",
      "after": "0339b3cb728e2628",
      "date": 1448837237747
    },
    {
      "type": "move",
      "order": [
        "30b4e048e499372e",
        "270a0572aa8b5b0e",
        "eab764e0db9bd0dd",
        "98214952ac4b42c8",
        "81fd76cfc2d0ebe5",
        "1f6e4e3d6cda2490",
        "e3781a3acba7f449",
        "069a34fa76803bd3",
        "6962ef3d0bb479a7",
        "14e6b9c78ea9de40",
        "0339b3cb728e2628"
      ],
      "id": "eab764e0db9bd0dd",
      "date": 1448837241895
    },
    {
      "type": "edit",
      "id": "270a0572aa8b5b0e",
      "item": {
        "type": "paragraph",
        "id": "270a0572aa8b5b0e",
        "text": "# Syntax"
      },
      "date": 1448837247969
    },
    {
      "type": "edit",
      "id": "270a0572aa8b5b0e",
      "item": {
        "type": "markdown",
        "id": "270a0572aa8b5b0e",
        "text": "# Syntax"
      },
      "date": 1448837249075
    },
    {
      "type": "edit",
      "id": "eab764e0db9bd0dd",
      "item": {
        "type": "code",
        "id": "eab764e0db9bd0dd",
        "text": "element = baseElement.querySelector(selectors);"
      },
      "date": 1448837252219
    },
    {
      "type": "remove",
      "id": "81fd76cfc2d0ebe5",
      "date": 1448837263369
    },
    {
      "type": "edit",
      "id": "30b4e048e499372e",
      "item": {
        "type": "paragraph",
        "id": "30b4e048e499372e",
        "text": "Returns the first element that is a descendant of the element on which it is invoked that matches the specified group of selectors - [https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector developer.mozilla.org]"
      },
      "date": 1448837306187
    },
    {
      "type": "edit",
      "id": "30b4e048e499372e",
      "item": {
        "type": "paragraph",
        "id": "30b4e048e499372e",
        "text": "Returns the first element that is a descendant of the element on which it is invoked that matches the specified group of selectors - [https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector mozilla.org]"
      },
      "date": 1448837326076
    },
    {
      "type": "edit",
      "id": "1f6e4e3d6cda2490",
      "item": {
        "type": "paragraph",
        "id": "1f6e4e3d6cda2490",
        "text": "The querySelector function takes an argument, and this argument is a CSS selector for the element you are wanting to find. What gets returned by querySelector is the first element it finds - even if other elements exist that could get targeted by the selector. This function is pretty stubborn like that.\n"
      },
      "date": 1448837481575
    },
    {
      "type": "add",
      "id": "1be287cf5471f24f",
      "item": {
        "type": "paragraph",
        "id": "1be287cf5471f24f",
        "text": "# Examples\n"
      },
      "after": "1f6e4e3d6cda2490",
      "date": 1448837484117
    },
    {
      "type": "edit",
      "id": "1be287cf5471f24f",
      "item": {
        "type": "markdown",
        "id": "1be287cf5471f24f",
        "text": "# Examples\n"
      },
      "date": 1448837485521
    },
    {
      "type": "add",
      "id": "dcb5e027007e26ee",
      "item": {
        "type": "paragraph",
        "id": "dcb5e027007e26ee",
        "text": "If we wanted to access the div whose id is \"main\", you would write the following:\n\n"
      },
      "after": "1be287cf5471f24f",
      "date": 1448837486943
    },
    {
      "type": "edit",
      "id": "0339b3cb728e2628",
      "item": {
        "type": "paragraph",
        "id": "0339b3cb728e2628",
        "text": "There are plenty of great examples over at [http://www.w3schools.com/jsref/met_document_queryselector.asp w3schools]"
      },
      "date": 1448837534306
    },
    {
      "type": "move",
      "order": [
        "30b4e048e499372e",
        "270a0572aa8b5b0e",
        "eab764e0db9bd0dd",
        "98214952ac4b42c8",
        "1f6e4e3d6cda2490",
        "1be287cf5471f24f",
        "0339b3cb728e2628",
        "dcb5e027007e26ee",
        "e3781a3acba7f449",
        "069a34fa76803bd3",
        "6962ef3d0bb479a7",
        "14e6b9c78ea9de40"
      ],
      "id": "0339b3cb728e2628",
      "date": 1448837539481
    }
  ]
}