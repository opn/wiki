{
  "title": "Learn node on the command-line",
  "story": [
    {
      "type": "paragraph",
      "id": "4ace737abe3c8cfe",
      "text": "He introduces concepts like asynchronous io and control flow, streams, database programming with node, and functional javascript programming - [http://nodeschool.io/ nodeschool.io]"
    },
    {
      "type": "paragraph",
      "id": "f09db65b4cee191e",
      "text": "The stream-handbook is a detailed overview of how to use streams, and how it can be beneficial when programming async code. It is written by a brilliant programmer, James Halliday. He does an awesome job drawing connections to unix streams too."
    },
    {
      "type": "paragraph",
      "id": "399624f4f1381680",
      "text": "Understanding node's asynchronous nature is fundamental. I recommend reading Designing APIs for Asynchrony from node core's leader Isaac Schlueter."
    },
    {
      "type": "code",
      "id": "a415d1485128123c",
      "text": "npm install -g learnyounode\nlearnyounode"
    },
    {
      "type": "paragraph",
      "id": "fcf3bcb83963d4c3",
      "text": "Node, just like other languages is great for certain things and not so great for certain things. "
    },
    {
      "type": "paragraph",
      "id": "f14a518efb669b89",
      "text": "Understanding node.js is a blog post by Felix Geisendoerfer, a former node core team member. He talks about what node is and some of its better use cases (e.g. parallel programming) at a high level."
    },
    {
      "type": "paragraph",
      "id": "321c9cff4cfc8a58",
      "text": "The JavaScript Event Loop: Explained is a solid read to better understanding node's underbelly."
    },
    {
      "type": "paragraph",
      "id": "c7c9c504bf0ad8ba",
      "text": "Once you have a grasp of asynchronous programming, check out how you can use promises to push around data asynchronously and avoid 'Callback Hell.' I recommend using the module q to implement promises (there are others). The documentation is amazing."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Learn node on the command-line",
        "story": []
      },
      "date": 1523432770380
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4ace737abe3c8cfe",
        "text": "He introduces concepts like asynchronous io and control flow, streams, database programming with node, and functional javascript programming - [http://nodeschool.io/ nodeschool.io]"
      },
      "id": "4ace737abe3c8cfe",
      "date": 1523432773023
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f09db65b4cee191e",
        "text": "The stream-handbook is a detailed overview of how to use streams, and how it can be beneficial when programming async code. It is written by a brilliant programmer, James Halliday. He does an awesome job drawing connections to unix streams too."
      },
      "after": "4ace737abe3c8cfe",
      "id": "f09db65b4cee191e",
      "date": 1523432775228
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "399624f4f1381680",
        "text": "Understanding node's asynchronous nature is fundamental. I recommend reading Designing APIs for Asynchrony from node core's leader Isaac Schlueter."
      },
      "after": "f09db65b4cee191e",
      "id": "399624f4f1381680",
      "date": 1523432777581
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "fcf3bcb83963d4c3",
        "text": "Node, just like other languages is great for certain things and not so great for certain things. "
      },
      "after": "399624f4f1381680",
      "id": "fcf3bcb83963d4c3",
      "date": 1523432780041
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "a415d1485128123c",
        "text": "npm install -g learnyounode\nlearnyounode"
      },
      "after": "399624f4f1381680",
      "id": "a415d1485128123c",
      "date": 1523432782458
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f14a518efb669b89",
        "text": "Understanding node.js is a blog post by Felix Geisendoerfer, a former node core team member. He talks about what node is and some of its better use cases (e.g. parallel programming) at a high level."
      },
      "after": "fcf3bcb83963d4c3",
      "id": "f14a518efb669b89",
      "date": 1523432785104
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "321c9cff4cfc8a58",
        "text": "The JavaScript Event Loop: Explained is a solid read to better understanding node's underbelly."
      },
      "after": "f14a518efb669b89",
      "id": "321c9cff4cfc8a58",
      "date": 1523432787501
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c7c9c504bf0ad8ba",
        "text": "Once you have a grasp of asynchronous programming, check out how you can use promises to push around data asynchronously and avoid 'Callback Hell.' I recommend using the module q to implement promises (there are others). The documentation is amazing."
      },
      "after": "321c9cff4cfc8a58",
      "id": "c7c9c504bf0ad8ba",
      "date": 1523432790221
    }
  ]
}