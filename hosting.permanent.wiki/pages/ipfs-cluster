{
  "title": "IPFS Cluster",
  "story": [
    {
      "type": "paragraph",
      "id": "d310211a51b13bb3",
      "text": "ipfs-cluster allows to replicate content (by pinning) in multiple IPFS nodes. This is alpha software, but may well be something we want to consider in terms of [[IPFS Hosting]] for the [[Anthropological Archive]]."
    },
    {
      "type": "markdown",
      "id": "c77c95c3addf0365",
      "text": "# To Do"
    },
    {
      "type": "markdown",
      "id": "d0729bc9247233ba",
      "text": "As a first test we should look at:\n\n- [ ] Get ipfs-cluster running on [[Digital Ocean]]\n- [ ] Test with various number of cluster nodes\n- [ ] Wrap HTTP API in [[DreamFactory]]"
    },
    {
      "type": "markdown",
      "id": "d7b0b723f832ea1b",
      "text": "# Features\n\nBelow we list the main features of ipfs-cluster - [https://github.com/ipfs/ipfs-cluster github]"
    },
    {
      "type": "markdown",
      "id": "cfcc76c4b54624b7",
      "text": "- Works on top of the IPFS daemon by running one cluster peer per IPFS node (ipfs-cluster-service)\n- A replication_factor controls how many times a CID is pinned in the cluster\n- Re-pins stuff in a different place when a peer goes down\n- Provides an HTTP API and a command-line wrapper (ipfs-cluster-ctl)\n- Provides an IPFS daemon API Proxy which intercepts any \"pin\"/\"unpin\" requests and does cluster pinning instead\n"
    },
    {
      "type": "paragraph",
      "id": "1f4eaea95b06e13d",
      "text": "The IPFS Proxy allows to build cluster composition, with a cluster peer acting as an IPFS daemon for another higher-level cluster.\n"
    },
    {
      "type": "paragraph",
      "id": "6adb9c8f16c367e0",
      "text": "Peers share the state using Raft-based consensus. Uses the LibP2P stack (go-libp2p-raft, go-libp2p-rpc...)"
    },
    {
      "type": "html",
      "id": "d5f17fa94a3329c0",
      "text": "<img src=\"https://camo.githubusercontent.com/3b402fcc3d2cb05a7dadab433b0c355ffdacd3da/68747470733a2f2f697066732e696f2f697066732f516d564d4b44333966594a473951477979466b474e3351755a5267334566757578716b47317363436f395a5548702f636c75737465722d6d676d742e676966\" width=100%>"
    },
    {
      "type": "markdown",
      "id": "9ceed4c374813bed",
      "text": "There are several ways to install ipfs-cluster. They are described in the main README and summarized here:\n\n- Download the repository and run make install\n- Run the docker ipfs/ipfs-cluster container\n- Download pre-built binaries - [https://dist.ipfs.io/ dist.ipfs.io]"
    },
    {
      "type": "paragraph",
      "id": "46ce1e1618aa2f52",
      "text": "You can deploy cluster in the way which fits you best, as both ipfs and ipfs-cluster have no dependencies. There are some Ansible roles available to help you."
    },
    {
      "type": "markdown",
      "id": "1e26f5fb83c445a3",
      "text": "# See also\n\n- Code on [https://github.com/ipfs/ipfs-cluster github]\n- [https://discuss.ipfs.io/t/ipfs-cluster-peer-like-admin/918 discuss.ipfs.io]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "IPFS Cluster",
        "story": []
      },
      "date": 1502992521558
    },
    {
      "item": {
        "type": "factory",
        "id": "d310211a51b13bb3"
      },
      "id": "d310211a51b13bb3",
      "type": "add",
      "date": 1502992540255
    },
    {
      "type": "edit",
      "id": "d310211a51b13bb3",
      "item": {
        "type": "paragraph",
        "id": "d310211a51b13bb3",
        "text": "ipfs-cluster allows to replicate content (by pinning) in multiple IPFS nodes:"
      },
      "date": 1502992592611
    },
    {
      "type": "add",
      "id": "cfcc76c4b54624b7",
      "item": {
        "type": "paragraph",
        "id": "cfcc76c4b54624b7",
        "text": "- Works on top of the IPFS daemon by running one cluster peer per IPFS node (ipfs-cluster-service)\n- A replication_factor controls how many times a CID is pinned in the cluster\n- Re-pins stuff in a different place when a peer goes down\n- Provides an HTTP API and a command-line wrapper (ipfs-cluster-ctl)\n- Provides an IPFS daemon API Proxy which intercepts any \"pin\"/\"unpin\" requests and does cluster pinning instead\n- The IPFS Proxy allows to build cluster composition, with a cluster peer acting as an IPFS daemon for another higher-level cluster.\n"
      },
      "after": "d310211a51b13bb3",
      "date": 1502992622243
    },
    {
      "type": "add",
      "id": "6adb9c8f16c367e0",
      "item": {
        "type": "paragraph",
        "id": "6adb9c8f16c367e0",
        "text": "Peers share the state using Raft-based consensus. Uses the LibP2P stack (go-libp2p-raft, go-libp2p-rpc...)"
      },
      "after": "cfcc76c4b54624b7",
      "date": 1502992625883
    },
    {
      "type": "edit",
      "id": "cfcc76c4b54624b7",
      "item": {
        "type": "paragraph",
        "id": "cfcc76c4b54624b7",
        "text": "- Works on top of the IPFS daemon by running one cluster peer per IPFS node (ipfs-cluster-service)\n- A replication_factor controls how many times a CID is pinned in the cluster\n- Re-pins stuff in a different place when a peer goes down\n- Provides an HTTP API and a command-line wrapper (ipfs-cluster-ctl)\n- Provides an IPFS daemon API Proxy which intercepts any \"pin\"/\"unpin\" requests and does cluster pinning instead\n"
      },
      "date": 1502992628395
    },
    {
      "type": "edit",
      "id": "cfcc76c4b54624b7",
      "item": {
        "type": "markdown",
        "id": "cfcc76c4b54624b7",
        "text": "- Works on top of the IPFS daemon by running one cluster peer per IPFS node (ipfs-cluster-service)\n- A replication_factor controls how many times a CID is pinned in the cluster\n- Re-pins stuff in a different place when a peer goes down\n- Provides an HTTP API and a command-line wrapper (ipfs-cluster-ctl)\n- Provides an IPFS daemon API Proxy which intercepts any \"pin\"/\"unpin\" requests and does cluster pinning instead\n"
      },
      "date": 1502992630569
    },
    {
      "type": "add",
      "id": "1f4eaea95b06e13d",
      "item": {
        "type": "paragraph",
        "id": "1f4eaea95b06e13d",
        "text": "The IPFS Proxy allows to build cluster composition, with a cluster peer acting as an IPFS daemon for another higher-level cluster.\n"
      },
      "after": "cfcc76c4b54624b7",
      "date": 1502992634059
    },
    {
      "item": {
        "type": "factory",
        "id": "1e26f5fb83c445a3"
      },
      "id": "1e26f5fb83c445a3",
      "type": "add",
      "after": "6adb9c8f16c367e0",
      "date": 1502992647561
    },
    {
      "type": "edit",
      "id": "1e26f5fb83c445a3",
      "item": {
        "type": "markdown",
        "id": "1e26f5fb83c445a3",
        "text": "# See also\n\n- Code on [https://github.com/ipfs/ipfs-cluster github]"
      },
      "date": 1502992666739
    },
    {
      "item": {
        "type": "factory",
        "id": "d5f17fa94a3329c0"
      },
      "id": "d5f17fa94a3329c0",
      "type": "add",
      "after": "1e26f5fb83c445a3",
      "date": 1502992682851
    },
    {
      "type": "move",
      "order": [
        "d310211a51b13bb3",
        "cfcc76c4b54624b7",
        "1f4eaea95b06e13d",
        "6adb9c8f16c367e0",
        "d5f17fa94a3329c0",
        "1e26f5fb83c445a3"
      ],
      "id": "d5f17fa94a3329c0",
      "date": 1502992685320
    },
    {
      "type": "edit",
      "id": "d5f17fa94a3329c0",
      "item": {
        "type": "html",
        "id": "d5f17fa94a3329c0",
        "text": "<img src=\"https://camo.githubusercontent.com/3b402fcc3d2cb05a7dadab433b0c355ffdacd3da/68747470733a2f2f697066732e696f2f697066732f516d564d4b44333966594a473951477979466b474e3351755a5267334566757578716b47317363436f395a5548702f636c75737465722d6d676d742e676966\" width=100%>"
      },
      "date": 1502992700788
    },
    {
      "item": {
        "type": "factory",
        "id": "9ceed4c374813bed"
      },
      "id": "9ceed4c374813bed",
      "type": "add",
      "after": "1e26f5fb83c445a3",
      "date": 1502992745371
    },
    {
      "type": "move",
      "order": [
        "d310211a51b13bb3",
        "cfcc76c4b54624b7",
        "1f4eaea95b06e13d",
        "6adb9c8f16c367e0",
        "d5f17fa94a3329c0",
        "9ceed4c374813bed",
        "1e26f5fb83c445a3"
      ],
      "id": "9ceed4c374813bed",
      "date": 1502992747197
    },
    {
      "type": "edit",
      "id": "9ceed4c374813bed",
      "item": {
        "type": "paragraph",
        "id": "9ceed4c374813bed",
        "text": "There are several ways to install ipfs-cluster. They are described in the main README and summarized here:\n\n- Download the repository and run make install.\n- Run the docker ipfs/ipfs-cluster container. The container includes and runs ipfs.\n- Download pre-built binaries for your platform at dist.ipfs.io. Note that we test on Linux and ARM. We're happy to hear if other platforms are working or not. These builds may be slightly outdated compared to Docker."
      },
      "date": 1502992783014
    },
    {
      "type": "edit",
      "id": "9ceed4c374813bed",
      "item": {
        "type": "markdown",
        "id": "9ceed4c374813bed",
        "text": "There are several ways to install ipfs-cluster. They are described in the main README and summarized here:\n\n- Download the repository and run make install.\n- Run the docker ipfs/ipfs-cluster container. The container includes and runs ipfs.\n- Download pre-built binaries for your platform at dist.ipfs.io. Note that we test on Linux and ARM. We're happy to hear if other platforms are working or not. These builds may be slightly outdated compared to Docker."
      },
      "date": 1502992784378
    },
    {
      "type": "add",
      "id": "46ce1e1618aa2f52",
      "item": {
        "type": "paragraph",
        "id": "46ce1e1618aa2f52",
        "text": "You can deploy cluster in the way which fits you best, as both ipfs and ipfs-cluster have no dependencies. There are some Ansible roles available to help you."
      },
      "after": "9ceed4c374813bed",
      "date": 1502992792911
    },
    {
      "type": "edit",
      "id": "9ceed4c374813bed",
      "item": {
        "type": "markdown",
        "id": "9ceed4c374813bed",
        "text": "There are several ways to install ipfs-cluster. They are described in the main README and summarized here:\n\n- Download the repository and run make install.\n- Run the docker ipfs/ipfs-cluster container. The container includes and runs ipfs.\n- Download pre-built binaries for your platform at [http://dist.ipfs.io dist.ipfs.io]"
      },
      "date": 1502992821462
    },
    {
      "type": "edit",
      "id": "9ceed4c374813bed",
      "item": {
        "type": "markdown",
        "id": "9ceed4c374813bed",
        "text": "There are several ways to install ipfs-cluster. They are described in the main README and summarized here:\n\n- Download the repository and run make install.\n- Run the docker ipfs/ipfs-cluster container. The container includes and runs ipfs.\n- Download pre-built binaries for your platform at [https://dist.ipfs.io/ dist.ipfs.io]"
      },
      "date": 1502995042416
    },
    {
      "type": "edit",
      "id": "9ceed4c374813bed",
      "item": {
        "type": "markdown",
        "id": "9ceed4c374813bed",
        "text": "There are several ways to install ipfs-cluster. They are described in the main README and summarized here:\n\n- Download the repository and run make install.\n- Run the docker ipfs/ipfs-cluster container. The container includes and runs ipfs.\n- Download pre-built binaries - [https://dist.ipfs.io/ dist.ipfs.io]"
      },
      "date": 1502995054463
    },
    {
      "type": "edit",
      "id": "9ceed4c374813bed",
      "item": {
        "type": "markdown",
        "id": "9ceed4c374813bed",
        "text": "There are several ways to install ipfs-cluster. They are described in the main README and summarized here:\n\n- Download the repository and run make install\n- Run the docker ipfs/ipfs-cluster container\n- Download pre-built binaries - [https://dist.ipfs.io/ dist.ipfs.io]"
      },
      "date": 1502995070950
    },
    {
      "type": "edit",
      "id": "1e26f5fb83c445a3",
      "item": {
        "type": "markdown",
        "id": "1e26f5fb83c445a3",
        "text": "# See also\n\n- Code on [https://github.com/ipfs/ipfs-cluster github]\n- [https://discuss.ipfs.io/t/ipfs-cluster-peer-like-admin/918 discuss.ipfs.io]"
      },
      "date": 1502995099831
    },
    {
      "type": "edit",
      "id": "d310211a51b13bb3",
      "item": {
        "type": "paragraph",
        "id": "d310211a51b13bb3",
        "text": "ipfs-cluster allows to replicate content (by pinning) in multiple IPFS nodes. This is alpha software, but may well be something we want to consider in terms of [[IPFS Hosting]] for the [[Anthropological Archive]]."
      },
      "date": 1504626756280
    },
    {
      "type": "add",
      "id": "c77c95c3addf0365",
      "item": {
        "type": "paragraph",
        "id": "c77c95c3addf0365",
        "text": "dsf"
      },
      "after": "d310211a51b13bb3",
      "date": 1504626775658
    },
    {
      "type": "add",
      "id": "d7b0b723f832ea1b",
      "item": {
        "type": "paragraph",
        "id": "d7b0b723f832ea1b",
        "text": "# Features"
      },
      "after": "c77c95c3addf0365",
      "date": 1504626783559
    },
    {
      "type": "edit",
      "id": "d7b0b723f832ea1b",
      "item": {
        "type": "markdown",
        "id": "d7b0b723f832ea1b",
        "text": "# Features"
      },
      "date": 1504626784755
    },
    {
      "type": "edit",
      "id": "c77c95c3addf0365",
      "item": {
        "type": "paragraph",
        "id": "c77c95c3addf0365",
        "text": "# To Do"
      },
      "date": 1504626800379
    },
    {
      "type": "edit",
      "id": "d7b0b723f832ea1b",
      "item": {
        "type": "markdown",
        "id": "d7b0b723f832ea1b",
        "text": "# Features\n\nBelow we list the main features of ipfs-cluster - [https://github.com/ipfs/ipfs-cluster github]"
      },
      "date": 1504626851315
    },
    {
      "type": "add",
      "id": "d0729bc9247233ba",
      "item": {
        "type": "paragraph",
        "id": "d0729bc9247233ba",
        "text": "As a first test we should look at- [ ] ipfs-cluster up of a cluster of Digital Ocean Droplets."
      },
      "after": "c77c95c3addf0365",
      "date": 1504626935413
    },
    {
      "type": "edit",
      "id": "c77c95c3addf0365",
      "item": {
        "type": "markdown",
        "id": "c77c95c3addf0365",
        "text": "# To Do"
      },
      "date": 1504626937138
    },
    {
      "type": "edit",
      "id": "d0729bc9247233ba",
      "item": {
        "type": "markdown",
        "id": "d0729bc9247233ba",
        "text": "As a first test we should look at- [ ] ipfs-cluster up of a cluster of Digital Ocean Droplets."
      },
      "date": 1504626938570
    },
    {
      "type": "edit",
      "id": "d0729bc9247233ba",
      "item": {
        "type": "markdown",
        "id": "d0729bc9247233ba",
        "text": "As a first test we should look at:\n\n- [ ] Get ipfs-cluster running on [[Digital Ocean]]\n- [ ] Test with various number of cluster nodes\n- [ ] Wrap HTTP API in [[DreamFactory]]"
      },
      "date": 1504627023419
    }
  ]
}