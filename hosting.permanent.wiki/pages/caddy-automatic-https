{
  "title": "Caddy Automatic HTTPS",
  "story": [
    {
      "type": "paragraph",
      "id": "a49c88d3-3ba9-4331-8d1f-b09ecb61a611",
      "text": "Caddy activates HTTPS by default for sites with qualifying domain names (names for which a TLS certificate can be negotiated via the ACME protocol ([[Automated Certificate Management Environment]])), and redirects HTTP requests to HTTPS. It obtains certificates as needed during startup and keeps them renewed during the lifetime of the server. "
    },
    {
      "type": "paragraph",
      "id": "1b9ff143b5ebcbca",
      "text": "[[Let's Encrypt]] is the default certificate authority, but the user may customize the ACME CA that is used, which is often necessary when testing configurations. As of Q1 2016, Caddy accounted for about 2% of certificates issued by Let's Encrypt. - [https://en.wikipedia.org/wiki/Caddy_(web_server)#Automatic_HTTPS wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "def7baa1-b45c-43b9-ba7a-977bdc2ec4af",
      "text": "An alternate configuration allows Caddy to obtain certificates only as needed during TLS handshakes rather than at startup, a feature dubbed \"On-Demand TLS.\" To enable this feature, the user must specify a maximum number of certificates that can be issued this way. "
    },
    {
      "type": "paragraph",
      "id": "326c61e066ecdd5b",
      "text": "When Caddy receives a request for a hostname for which it does not yet have a certificate, it will negotiate a new certificate via ACME and serve it immediately, while caching the obtained certificate in memory and storing it on disk. This process usually takes a few seconds, and is subject to tight rate limits."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Caddy Automatic HTTPS",
        "story": []
      },
      "date": 1497947286121
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a49c88d3-3ba9-4331-8d1f-b09ecb61a611",
        "text": "Caddy activates HTTPS by default for sites with qualifying domain names (names for which a TLS certificate can be negotiated via the ACME protocol ([[Automated Certificate Management Environment]])), and redirects HTTP requests to HTTPS. It obtains certificates as needed during startup and keeps them renewed during the lifetime of the server. "
      },
      "id": "a49c88d3-3ba9-4331-8d1f-b09ecb61a611",
      "date": 1497947287894
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1b9ff143b5ebcbca",
        "text": "[[Let's Encrypt]] is the default certificate authority, but the user may customize the ACME CA that is used, which is often necessary when testing configurations. As of Q1 2016, Caddy accounted for about 2% of certificates issued by Let's Encrypt. - [https://en.wikipedia.org/wiki/Caddy_(web_server)#Automatic_HTTPS wikipedia]"
      },
      "after": "a49c88d3-3ba9-4331-8d1f-b09ecb61a611",
      "id": "1b9ff143b5ebcbca",
      "date": 1497947289970
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "def7baa1-b45c-43b9-ba7a-977bdc2ec4af",
        "text": "An alternate configuration allows Caddy to obtain certificates only as needed during TLS handshakes rather than at startup, a feature dubbed \"On-Demand TLS.\" To enable this feature, the user must specify a maximum number of certificates that can be issued this way. "
      },
      "after": "1b9ff143b5ebcbca",
      "id": "def7baa1-b45c-43b9-ba7a-977bdc2ec4af",
      "date": 1497947291850
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "326c61e066ecdd5b",
        "text": "When Caddy receives a request for a hostname for which it does not yet have a certificate, it will negotiate a new certificate via ACME and serve it immediately, while caching the obtained certificate in memory and storing it on disk. This process usually takes a few seconds, and is subject to tight rate limits."
      },
      "after": "def7baa1-b45c-43b9-ba7a-977bdc2ec4af",
      "id": "326c61e066ecdd5b",
      "date": 1497947293799
    }
  ]
}