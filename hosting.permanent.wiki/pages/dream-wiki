{
  "title": "Dream Wiki",
  "story": [
    {
      "type": "factory",
      "id": "ff07b869a0cee510"
    },
    {
      "type": "markdown",
      "id": "fb65c4b0a6275120",
      "text": "- [[Snapshots of Wiki]]\n- [[Going Back In Time]]\n- [[Proof of Publishing]]\n- [[Local Wiki + Global Wiki]]\n- [[Serverless Decentralised Wiki]]"
    },
    {
      "type": "reference",
      "id": "9eea3cf0bc9c2cf5",
      "site": "hosting.permanent.wiki",
      "slug": "one-big-wiki",
      "title": "One Big Wiki",
      "text": "Once wiki pages have been published to the [[permanent wiki]], pages are now immutable, and effectively reside in one huge global namespace."
    },
    {
      "type": "reference",
      "id": "38e35c2f494e9c1e",
      "site": "hosting.permanent.wiki",
      "slug": "dreamfactory-wiki",
      "title": "DreamFactory Wiki",
      "text": "So the idea here is to see if we can get [[DreamFactory]] to fulfil the basic [[Fedwiki Server Requirements]], which essentially means serving json files, a favicon and a sitemap via HTTP GET."
    },
    {
      "id": "7e4d82867cbb9148",
      "type": "reference",
      "site": "hosting.permanent.wiki",
      "slug": "dreamfactory-wiki-files",
      "title": "DreamFactory Wiki Files",
      "text": "Here we look at how we can provide proper [[RESTful]] access to [[Fedwiki Files]] from multiple domains using [[DreamFactory]]."
    },
    {
      "id": "101d57275f37e17c",
      "type": "reference",
      "site": "hosting.permanent.wiki",
      "slug": "dreamfactory-wiki-assets",
      "title": "Dreamfactory Wiki Assets",
      "text": "Here we explore how we will organise media assets in wiki to create our own [[decentralised media commons]] on"
    },
    {
      "id": "eab3ccbe2ea85cb9",
      "type": "reference",
      "site": "hosting.permanent.wiki",
      "slug": "dreamfactory-ipfs-service",
      "title": "DreamFactory IPFS Service",
      "text": "The aim here is to have the [[IPFS Daemon]] running on a [[docker]] and serving files from a cloud based data container, using [[DreamFactory]] to wrap this as a service which we can use in apps and manage authentication tokens for."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Dream Wiki",
        "story": []
      },
      "date": 1503088518254
    },
    {
      "item": {
        "type": "factory",
        "id": "9eea3cf0bc9c2cf5"
      },
      "id": "9eea3cf0bc9c2cf5",
      "type": "add",
      "date": 1503088520086
    },
    {
      "item": {
        "type": "factory",
        "id": "38e35c2f494e9c1e"
      },
      "id": "38e35c2f494e9c1e",
      "type": "add",
      "after": "9eea3cf0bc9c2cf5",
      "date": 1503088521930
    },
    {
      "type": "edit",
      "id": "38e35c2f494e9c1e",
      "item": {
        "type": "reference",
        "id": "38e35c2f494e9c1e",
        "site": "hosting.permanent.wiki",
        "slug": "dreamfactory-wiki",
        "title": "DreamFactory Wiki",
        "text": "So the idea here is to see if we can get [[DreamFactory]] to fulfil the basic [[Fedwiki Server Requirements]], which essentially means serving json files, a favicon and a sitemap via HTTP GET."
      },
      "date": 1503088527913
    },
    {
      "type": "add",
      "item": {
        "id": "7e4d82867cbb9148",
        "type": "reference",
        "site": "hosting.permanent.wiki",
        "slug": "dreamfactory-wiki-files",
        "title": "DreamFactory Wiki Files",
        "text": "Here we look at how we can provide proper [[RESTful]] access to [[Fedwiki Files]] from multiple domains using [[DreamFactory]]."
      },
      "after": "38e35c2f494e9c1e",
      "id": "7e4d82867cbb9148",
      "date": 1503088539528
    },
    {
      "type": "add",
      "item": {
        "id": "101d57275f37e17c",
        "type": "reference",
        "site": "hosting.permanent.wiki",
        "slug": "dreamfactory-wiki-assets",
        "title": "Dreamfactory Wiki Assets",
        "text": "Here we explore how we will organise media assets in wiki to create our own [[decentralised media commons]] on"
      },
      "after": "7e4d82867cbb9148",
      "id": "101d57275f37e17c",
      "date": 1503088544605
    },
    {
      "type": "add",
      "item": {
        "id": "eab3ccbe2ea85cb9",
        "type": "reference",
        "site": "hosting.permanent.wiki",
        "slug": "dreamfactory-ipfs-service",
        "title": "DreamFactory IPFS Service",
        "text": "The aim here is to have the [[IPFS Daemon]] running on a [[docker]] and serving files from a cloud based data container, using [[DreamFactory]] to wrap this as a service which we can use in apps and manage authentication tokens for."
      },
      "after": "101d57275f37e17c",
      "id": "eab3ccbe2ea85cb9",
      "date": 1503088557515
    },
    {
      "type": "edit",
      "id": "9eea3cf0bc9c2cf5",
      "item": {
        "type": "reference",
        "id": "9eea3cf0bc9c2cf5",
        "site": "hosting.permanent.wiki",
        "slug": "one-big-wiki",
        "title": "One Big Wiki",
        "text": "Once wiki pages have been published to the [[permanent wiki]], pages are now immutable, and effectively reside in one huge global namespace."
      },
      "date": 1503088574274
    },
    {
      "item": {
        "type": "factory",
        "id": "ff07b869a0cee510"
      },
      "id": "ff07b869a0cee510",
      "type": "add",
      "after": "eab3ccbe2ea85cb9",
      "date": 1503088575558
    },
    {
      "type": "move",
      "order": [
        "ff07b869a0cee510",
        "9eea3cf0bc9c2cf5",
        "38e35c2f494e9c1e",
        "7e4d82867cbb9148",
        "101d57275f37e17c",
        "eab3ccbe2ea85cb9"
      ],
      "id": "ff07b869a0cee510",
      "date": 1503088577089
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "fb65c4b0a6275120",
        "text": "- [[Snapshots of Wiki]]\n- [[Going Back In Time]]\n- [[Proof of Publishing]]\n- [[Local Wiki + Global Wiki]]\n- [[Serverless Decentralised Wiki]]"
      },
      "after": "ff07b869a0cee510",
      "id": "fb65c4b0a6275120",
      "date": 1503088592221
    }
  ]
}