{
  "title": "Continuous delivery",
  "journal": [
    {
      "type": "create",
      "item": {
        "story": "",
        "title": "Continuous delivery"
      },
      "date": 1501495920630,
      "source": {
        "pageTitle": "Continuous delivery",
        "pageSlug": "Continuous delivery",
        "url": "https://en.wikipedia.org/wiki/Continuous_delivery",
        "date": 1501495920630,
        "link_dictionary": {
          "wiki_links": {
            "References": {
              "section_number": 12,
              "section_level": 2,
              "dot_number": 12
            },
            "Further reading": {
              "section_number": 11,
              "section_level": 2,
              "dot_number": 11
            },
            "Benefits and obstacles": {
              "section_number": 8,
              "section_level": 2,
              "dot_number": 8
            },
            "Relationship to DevOps": {
              "section_number": 1,
              "section_level": 2,
              "dot_number": 1
            },
            "Relationship to continuous deployment": {
              "section_number": 2,
              "section_level": 2,
              "dot_number": 2
            },
            "Architecting for continuous delivery": {
              "section_number": 6,
              "section_level": 2,
              "dot_number": 6
            },
            "See also": {
              "section_number": 10,
              "section_level": 2,
              "dot_number": 10
            },
            "Deployment pipeline": {
              "section_number": 4,
              "section_level": 2,
              "dot_number": 4
            },
            "Implementation and usage": {
              "section_number": 7,
              "section_level": 2,
              "dot_number": 7
            },
            "Strategies to overcome adoption challenges": {
              "section_number": 9,
              "section_level": 2,
              "dot_number": 9
            },
            "Principles": {
              "section_number": 3,
              "section_level": 2,
              "dot_number": 3
            },
            "Tools/tool types": {
              "section_number": 5,
              "section_level": 2,
              "dot_number": 5
            }
          },
          "default": {
            "transport": "https://livecode.world/mediawiki/importSection"
          }
        },
        "transport": "https://livecode.world/mediawiki/transportAgain",
        "rev": 789006278,
        "repo": "https://github.com/LiveCodeWorld/lib_MediaWiki"
      }
    },
    {
      "type": "fork",
      "date": 1501495921368
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "fb50178c-8bd6-4ebd-9bde-5903fc709412",
      "text": "Continuous delivery (CD) is a software engineering approach in which teams produce software in short cycles, ensuring that the software can be reliably released at any time. It aims at building, testing, and releasing software faster and more frequently. The approach helps reduce the cost, time, and risk of delivering changes by allowing for more incremental updates to applications in production. A straightforward and repeatable deployment process is important for continuous delivery - [https://en.wikipedia.org/wiki/Continuous_delivery wikipedia]"
    },
    {
      "type": "markdown",
      "id": "6494b089-0f18-40ed-a0dd-d46fb8c597a5",
      "text": "# See also\n* [[Relationship to DevOps]]\n* [[Relationship to continuous deployment]]\n* [[Principles]]\n* [[Deployment pipeline]]\n* [[Tools/tool types]]\n* [[Architecting for continuous delivery]]\n* [[Implementation and usage]]\n* [[Benefits and obstacles]]\n* [[Strategies to overcome adoption challenges]]\n* [[See also]]\n* [[Further reading]]\n* [[References]]"
    }
  ]
}