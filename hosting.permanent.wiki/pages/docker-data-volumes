{
  "title": "Docker Data Volumes",
  "story": [
    {
      "type": "paragraph",
      "id": "57ca147037b8bf3e",
      "text": "A Docker container is similar to a virtual machine. It basically allows you to run a pre-packaged \"Linux box\" inside a container -\n [https://www.digitalocean.com/community/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04 digitalocean.com]"
    },
    {
      "type": "paragraph",
      "id": "8c9b71ef75177c41",
      "text": "The main difference between a Docker container and a typical virtual machine is that Docker is not quite as isolated from the surrounding environment as a normal virtual machine would be. A Docker container shares the Linux kernel with the host operating system, which means it doesn't need to \"boot\" the way a virtual machine would."
    },
    {
      "type": "paragraph",
      "id": "f189c8822475e9f9",
      "text": "Since so much is shared, firing up a Docker container is a quick and cheap operation — in most cases you can bring up a full Docker container (the equivalent of a normal virtual machine) in the same time as it would take to run a normal command line program. "
    },
    {
      "type": "paragraph",
      "id": "f92c41a278d91f58",
      "text": "This is great because it makes deploying complex systems a much easier and more modular process, but it's a different paradigm from the usual virtual machine approach and has some unexpected side effects for people coming from the virtualization world.\n\n"
    },
    {
      "type": "markdown",
      "id": "d8db8d591696ee7b",
      "text": "# Types of Docker Data Volumes\n"
    },
    {
      "type": "markdown",
      "id": "17fea7dd05468865",
      "text": "There are three main use cases for Docker data volumes:\n\n- To keep data around when a container is removed\n- To share data between the host filesystem and the Docker container\n- To share data with other Docker containers\n"
    },
    {
      "type": "markdown",
      "id": "a7fe945e09d69678",
      "text": "# Docker Data Volumes on Ubuntu 14.04"
    },
    {
      "type": "markdown",
      "id": "b9301bf0677d360d",
      "text": "# [[Docker Data Sharing]]"
    },
    {
      "type": "paragraph",
      "id": "f33d8fe6964818d0",
      "text": "The other common use for Docker containers is as a means of sharing files between the host machine and the Docker container. This works differently from the last example. "
    },
    {
      "type": "paragraph",
      "id": "9b0fe7a46824e8a8",
      "text": "There's no need to create a \"data-only\" container first. You can simply run a container of any Docker image and override one of its directories with the contents of a directory on the host system."
    },
    {
      "type": "paragraph",
      "id": "6913b9bd05e16419",
      "text": "As a quick real-world example, let's say you wanted to use the official Docker Nginx image but you wanted to keep a permanent copy of the Nginx's log files to analyze later. "
    },
    {
      "type": "paragraph",
      "id": "87d6b3c25ab7b2ce",
      "text": "By default the [[Nginx Docker]] image logs to the /var/log/nginx directory, but this is /var/log/nginx inside the Docker Nginx container. Normally it's not reachable from the host filesystem."
    },
    {
      "type": "paragraph",
      "id": "4ba764b41b368d0d",
      "text": "Follow this link to find out ow to create a folder to store logs and then run a copy of the Nginx image with a shared volume so that Nginx writes its logs to our host's filesystem instead of to the /var/log/nginx inside the container -\n [https://www.digitalocean.com/community/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04 digitalocean.com]"
    },
    {
      "type": "markdown",
      "id": "d12363f83a1c5c24",
      "text": "# See also\n\n- [[Share Data between Containers]]\n- [[Docker Data Volumes]]\n- [[Docker Data Sharing]]\n- [[Docker Based Livecode Server]]\n- [[Cluster Based Federation]]\n- Manage Data Containers - [https://docs.docker.com/engine/tutorials/dockervolumes/ docker.com]"
    },
    {
      "type": "paragraph",
      "id": "70df40218716e1f1",
      "text": "\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Docker Data Volumes",
        "story": []
      },
      "date": 1497994766785
    },
    {
      "item": {
        "type": "factory",
        "id": "a7fe945e09d69678"
      },
      "id": "a7fe945e09d69678",
      "type": "add",
      "date": 1497994767835
    },
    {
      "type": "edit",
      "id": "a7fe945e09d69678",
      "item": {
        "type": "paragraph",
        "id": "a7fe945e09d69678",
        "text": "-\n [https://www.digitalocean.com/community/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04 digitalocean.com]"
      },
      "date": 1497994784501
    },
    {
      "item": {
        "type": "factory",
        "id": "57ca147037b8bf3e"
      },
      "id": "57ca147037b8bf3e",
      "type": "add",
      "after": "a7fe945e09d69678",
      "date": 1497994805694
    },
    {
      "type": "edit",
      "id": "a7fe945e09d69678",
      "item": {
        "type": "paragraph",
        "id": "a7fe945e09d69678",
        "text": "Docker Data Volumes on Ubuntu 14.04 -\n [https://www.digitalocean.com/community/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04 digitalocean.com]"
      },
      "date": 1497994815279
    },
    {
      "type": "edit",
      "id": "a7fe945e09d69678",
      "item": {
        "type": "paragraph",
        "id": "a7fe945e09d69678",
        "text": "Docker Data Volumes on Ubuntu 14.04 -\n [https://www.digitalocean.com/community/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04 digitalocean]"
      },
      "date": 1497994829399
    },
    {
      "type": "edit",
      "id": "57ca147037b8bf3e",
      "item": {
        "type": "paragraph",
        "id": "57ca147037b8bf3e",
        "text": "A Docker container is similar to a virtual machine. It basically allows you to run a pre-packaged \"Linux box\" inside a container. The main difference between a Docker container and a typical virtual machine is that Docker is not quite as isolated from the surrounding environment as a normal virtual machine would be. A Docker container shares the Linux kernel with the host operating system, which means it doesn't need to \"boot\" the way a virtual machine would.\n\nSince so much is shared, firing up a Docker container is a quick and cheap operation — in most cases you can bring up a full Docker container (the equivalent of a normal virtual machine) in the same time as it would take to run a normal command line program. This is great because it makes deploying complex systems a much easier and more modular process, but it's a different paradigm from the usual virtual machine approach and has some unexpected side effects for people coming from the virtualization world.\n\nLearning the Types of Docker Data Volumes\nThere are three main use cases for Docker data volumes:\n\nTo keep data around when a container is removed\nTo share data between the host filesystem and the Docker container\nTo share data with other Docker containers\n"
      },
      "date": 1497994890023
    },
    {
      "type": "edit",
      "id": "57ca147037b8bf3e",
      "item": {
        "type": "paragraph",
        "id": "57ca147037b8bf3e",
        "text": "A Docker container is similar to a virtual machine. It basically allows you to run a pre-packaged \"Linux box\" inside a container. The main difference between a Docker container and a typical virtual machine is that Docker is not quite as isolated from the surrounding environment as a normal virtual machine would be. A Docker container shares the Linux kernel with the host operating system, which means it doesn't need to \"boot\" the way a virtual machine would.\n\nSince so much is shared, firing up a Docker container is a quick and cheap operation — in most cases you can bring up a full Docker container (the equivalent of a normal virtual machine) in the same time as it would take to run a normal command line program. This is great because it makes deploying complex systems a much easier and more modular process, but it's a different paradigm from the usual virtual machine approach and has some unexpected side effects for people coming from the virtualization world.\n\nLearning the Types of Docker Data Volumes\n"
      },
      "date": 1497994895887
    },
    {
      "type": "add",
      "id": "17fea7dd05468865",
      "item": {
        "type": "paragraph",
        "id": "17fea7dd05468865",
        "text": "There are three main use cases for Docker data volumes:\n\n- To keep data around when a container is removed\n- To share data between the host filesystem and the Docker container\n- To share data with other Docker containers\n"
      },
      "after": "57ca147037b8bf3e",
      "date": 1497994909199
    },
    {
      "type": "edit",
      "id": "17fea7dd05468865",
      "item": {
        "type": "markdown",
        "id": "17fea7dd05468865",
        "text": "There are three main use cases for Docker data volumes:\n\n- To keep data around when a container is removed\n- To share data between the host filesystem and the Docker container\n- To share data with other Docker containers\n"
      },
      "date": 1497994909991
    },
    {
      "type": "edit",
      "id": "57ca147037b8bf3e",
      "item": {
        "type": "paragraph",
        "id": "57ca147037b8bf3e",
        "text": "A Docker container is similar to a virtual machine. It basically allows you to run a pre-packaged \"Linux box\" inside a container. The main difference between a Docker container and a typical virtual machine is that Docker is not quite as isolated from the surrounding environment as a normal virtual machine would be. A Docker container shares the Linux kernel with the host operating system, which means it doesn't need to \"boot\" the way a virtual machine would.\n\nSince so much is shared, firing up a Docker container is a quick and cheap operation — in most cases you can bring up a full Docker container (the equivalent of a normal virtual machine) in the same time as it would take to run a normal command line program. This is great because it makes deploying complex systems a much easier and more modular process, but it's a different paradigm from the usual virtual machine approach and has some unexpected side effects for people coming from the virtualization world.\n\n"
      },
      "date": 1497994918598
    },
    {
      "type": "add",
      "id": "d8db8d591696ee7b",
      "item": {
        "type": "paragraph",
        "id": "d8db8d591696ee7b",
        "text": "# Types of Docker Data Volumes\n"
      },
      "after": "57ca147037b8bf3e",
      "date": 1497994921192
    },
    {
      "type": "edit",
      "id": "d8db8d591696ee7b",
      "item": {
        "type": "markdown",
        "id": "d8db8d591696ee7b",
        "text": "# Types of Docker Data Volumes\n"
      },
      "date": 1497994922208
    },
    {
      "type": "edit",
      "id": "57ca147037b8bf3e",
      "item": {
        "type": "paragraph",
        "id": "57ca147037b8bf3e",
        "text": "A Docker container is similar to a virtual machine. It basically allows you to run a pre-packaged \"Linux box\" inside a container. "
      },
      "date": 1497994934145
    },
    {
      "type": "add",
      "id": "8c9b71ef75177c41",
      "item": {
        "type": "paragraph",
        "id": "8c9b71ef75177c41",
        "text": "The main difference between a Docker container and a typical virtual machine is that Docker is not quite as isolated from the surrounding environment as a normal virtual machine would be. A Docker container shares the Linux kernel with the host operating system, which means it doesn't need to \"boot\" the way a virtual machine would."
      },
      "after": "57ca147037b8bf3e",
      "date": 1497994935934
    },
    {
      "type": "add",
      "id": "f189c8822475e9f9",
      "item": {
        "type": "paragraph",
        "id": "f189c8822475e9f9",
        "text": "Since so much is shared, firing up a Docker container is a quick and cheap operation — in most cases you can bring up a full Docker container (the equivalent of a normal virtual machine) in the same time as it would take to run a normal command line program. "
      },
      "after": "8c9b71ef75177c41",
      "date": 1497994940048
    },
    {
      "type": "add",
      "id": "f92c41a278d91f58",
      "item": {
        "type": "paragraph",
        "id": "f92c41a278d91f58",
        "text": "This is great because it makes deploying complex systems a much easier and more modular process, but it's a different paradigm from the usual virtual machine approach and has some unexpected side effects for people coming from the virtualization world.\n\n"
      },
      "after": "f189c8822475e9f9",
      "date": 1497994940488
    },
    {
      "type": "edit",
      "id": "a7fe945e09d69678",
      "item": {
        "type": "paragraph",
        "id": "a7fe945e09d69678",
        "text": "# Docker Data Volumes on Ubuntu 14.04"
      },
      "date": 1497994955689
    },
    {
      "type": "edit",
      "id": "a7fe945e09d69678",
      "item": {
        "type": "markdown",
        "id": "a7fe945e09d69678",
        "text": "# Docker Data Volumes on Ubuntu 14.04"
      },
      "date": 1497994957152
    },
    {
      "type": "move",
      "order": [
        "57ca147037b8bf3e",
        "8c9b71ef75177c41",
        "f189c8822475e9f9",
        "f92c41a278d91f58",
        "d8db8d591696ee7b",
        "17fea7dd05468865",
        "a7fe945e09d69678"
      ],
      "id": "a7fe945e09d69678",
      "date": 1497994965684
    },
    {
      "type": "edit",
      "id": "57ca147037b8bf3e",
      "item": {
        "type": "paragraph",
        "id": "57ca147037b8bf3e",
        "text": "A Docker container is similar to a virtual machine. It basically allows you to run a pre-packaged \"Linux box\" inside a container -\n [https://www.digitalocean.com/community/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04 digitalocean]"
      },
      "date": 1497994972486
    },
    {
      "type": "edit",
      "id": "57ca147037b8bf3e",
      "item": {
        "type": "paragraph",
        "id": "57ca147037b8bf3e",
        "text": "A Docker container is similar to a virtual machine. It basically allows you to run a pre-packaged \"Linux box\" inside a container -\n [https://www.digitalocean.com/community/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04 digitalocean.com]"
      },
      "date": 1497994978780
    },
    {
      "item": {
        "type": "factory",
        "id": "b9301bf0677d360d"
      },
      "id": "b9301bf0677d360d",
      "type": "add",
      "after": "a7fe945e09d69678",
      "date": 1497995015759
    },
    {
      "type": "edit",
      "id": "b9301bf0677d360d",
      "item": {
        "type": "paragraph",
        "id": "b9301bf0677d360d",
        "text": "# Sharing Data Between Host and Docker Container"
      },
      "date": 1497995046600
    },
    {
      "type": "add",
      "id": "f33d8fe6964818d0",
      "item": {
        "type": "paragraph",
        "id": "f33d8fe6964818d0",
        "text": "The other common use for Docker containers is as a means of sharing files between the host machine and the Docker container. This works differently from the last example. There's no need to create a \"data-only\" container first. You can simply run a container of any Docker image and override one of its directories with the contents of a directory on the host system."
      },
      "after": "b9301bf0677d360d",
      "date": 1497995048248
    },
    {
      "type": "add",
      "id": "6913b9bd05e16419",
      "item": {
        "type": "paragraph",
        "id": "6913b9bd05e16419",
        "text": "As a quick real-world example, let's say you wanted to use the official Docker Nginx image but you wanted to keep a permanent copy of the Nginx's log files to analyze later. By default the nginx Docker image logs to the /var/log/nginx directory, but this is /var/log/nginx inside the Docker Nginx container. Normally it's not reachable from the host filesystem."
      },
      "after": "f33d8fe6964818d0",
      "date": 1497995054408
    },
    {
      "type": "add",
      "id": "70df40218716e1f1",
      "item": {
        "type": "paragraph",
        "id": "70df40218716e1f1",
        "text": "\n"
      },
      "after": "6913b9bd05e16419",
      "date": 1497995057460
    },
    {
      "type": "edit",
      "id": "b9301bf0677d360d",
      "item": {
        "type": "markdown",
        "id": "b9301bf0677d360d",
        "text": "# Sharing Data Between Host and Docker Container"
      },
      "date": 1497995061076
    },
    {
      "type": "edit",
      "id": "b9301bf0677d360d",
      "item": {
        "type": "markdown",
        "id": "b9301bf0677d360d",
        "text": "# Sharing Data Between Host and Container"
      },
      "date": 1497995081141
    },
    {
      "type": "edit",
      "id": "f33d8fe6964818d0",
      "item": {
        "type": "paragraph",
        "id": "f33d8fe6964818d0",
        "text": "The other common use for Docker containers is as a means of sharing files between the host machine and the Docker container. This works differently from the last example. "
      },
      "date": 1497995088075
    },
    {
      "type": "add",
      "id": "9b0fe7a46824e8a8",
      "item": {
        "type": "paragraph",
        "id": "9b0fe7a46824e8a8",
        "text": "There's no need to create a \"data-only\" container first. You can simply run a container of any Docker image and override one of its directories with the contents of a directory on the host system."
      },
      "after": "f33d8fe6964818d0",
      "date": 1497995088548
    },
    {
      "type": "edit",
      "id": "6913b9bd05e16419",
      "item": {
        "type": "paragraph",
        "id": "6913b9bd05e16419",
        "text": "As a quick real-world example, let's say you wanted to use the official Docker Nginx image but you wanted to keep a permanent copy of the Nginx's log files to analyze later. "
      },
      "date": 1497995094758
    },
    {
      "type": "add",
      "id": "87d6b3c25ab7b2ce",
      "item": {
        "type": "paragraph",
        "id": "87d6b3c25ab7b2ce",
        "text": "By default the [[Nginx Docker]] image logs to the /var/log/nginx directory, but this is /var/log/nginx inside the Docker Nginx container. Normally it's not reachable from the host filesystem."
      },
      "after": "6913b9bd05e16419",
      "date": 1497995105136
    },
    {
      "type": "add",
      "id": "4ba764b41b368d0d",
      "item": {
        "type": "paragraph",
        "id": "4ba764b41b368d0d",
        "text": "Follow this link to find out ow to create a folder to store logs and then run a copy of the Nginx image with a shared volume so that Nginx writes its logs to our host's filesystem instead of to the /var/log/nginx inside the container"
      },
      "after": "87d6b3c25ab7b2ce",
      "date": 1497995191971
    },
    {
      "type": "edit",
      "id": "4ba764b41b368d0d",
      "item": {
        "type": "paragraph",
        "id": "4ba764b41b368d0d",
        "text": "Follow this link to find out ow to create a folder to store logs and then run a copy of the Nginx image with a shared volume so that Nginx writes its logs to our host's filesystem instead of to the /var/log/nginx inside the container -\n [https://www.digitalocean.com/community/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04 digitalocean.com]"
      },
      "date": 1497995200132
    },
    {
      "item": {
        "type": "factory",
        "id": "a2806a43f8e6b305"
      },
      "id": "a2806a43f8e6b305",
      "type": "add",
      "after": "70df40218716e1f1",
      "date": 1497995533648
    },
    {
      "type": "edit",
      "id": "a2806a43f8e6b305",
      "item": {
        "type": "markdown",
        "id": "a2806a43f8e6b305",
        "text": "How To [[Share Data between Docker Containers]]"
      },
      "date": 1497995548208
    },
    {
      "type": "edit",
      "id": "a2806a43f8e6b305",
      "item": {
        "type": "markdown",
        "id": "a2806a43f8e6b305",
        "text": "How To [[Share Data between Containers]]"
      },
      "date": 1497995557969
    },
    {
      "type": "edit",
      "id": "b9301bf0677d360d",
      "item": {
        "type": "markdown",
        "id": "b9301bf0677d360d",
        "text": "# [[DockerHost Container Data Sharing]]"
      },
      "date": 1497995688027
    },
    {
      "type": "edit",
      "id": "b9301bf0677d360d",
      "item": {
        "type": "markdown",
        "id": "b9301bf0677d360d",
        "text": "# [[Docker Data Sharing]]"
      },
      "date": 1497995716828
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d12363f83a1c5c24",
        "text": "# See also\n\n- [[Docker Data Volumes]]\n- [[Docker Data Sharing]]\n- [[Docker Based Livecode Server]]\n- [[Cluster Based Federation]]"
      },
      "after": "4ba764b41b368d0d",
      "id": "d12363f83a1c5c24",
      "date": 1497995793791
    },
    {
      "type": "move",
      "order": [
        "57ca147037b8bf3e",
        "8c9b71ef75177c41",
        "f189c8822475e9f9",
        "f92c41a278d91f58",
        "d8db8d591696ee7b",
        "17fea7dd05468865",
        "a7fe945e09d69678",
        "b9301bf0677d360d",
        "f33d8fe6964818d0",
        "9b0fe7a46824e8a8",
        "6913b9bd05e16419",
        "87d6b3c25ab7b2ce",
        "4ba764b41b368d0d",
        "a2806a43f8e6b305",
        "d12363f83a1c5c24",
        "70df40218716e1f1"
      ],
      "id": "a2806a43f8e6b305",
      "date": 1497995797533
    },
    {
      "type": "remove",
      "id": "a2806a43f8e6b305",
      "date": 1497995810931
    },
    {
      "type": "edit",
      "id": "d12363f83a1c5c24",
      "item": {
        "type": "markdown",
        "id": "d12363f83a1c5c24",
        "text": "# See also\n\n- [[Share Data between Containers]]\n- [[Docker Data Volumes]]\n- [[Docker Data Sharing]]\n- [[Docker Based Livecode Server]]\n- [[Cluster Based Federation]]"
      },
      "date": 1497995816348
    },
    {
      "type": "edit",
      "id": "d12363f83a1c5c24",
      "item": {
        "type": "markdown",
        "id": "d12363f83a1c5c24",
        "text": "# See also\n\n- [[Share Data between Containers]]\n- [[Docker Data Volumes]]\n- [[Docker Data Sharing]]\n- [[Docker Based Livecode Server]]\n- [[Cluster Based Federation]]\n- Manage Data Containers -\n [https://docs.docker.com/engine/tutorials/dockervolumes/ docker.com]"
      },
      "date": 1497995866000
    },
    {
      "type": "edit",
      "id": "d12363f83a1c5c24",
      "item": {
        "type": "markdown",
        "id": "d12363f83a1c5c24",
        "text": "# See also\n\n- [[Share Data between Containers]]\n- [[Docker Data Volumes]]\n- [[Docker Data Sharing]]\n- [[Docker Based Livecode Server]]\n- [[Cluster Based Federation]]\n- Manage Data Containers - [https://docs.docker.com/engine/tutorials/dockervolumes/ docker.com]"
      },
      "date": 1497995872241
    }
  ]
}