{
  "title": "Serverless Microservices",
  "story": [
    {
      "type": "paragraph",
      "id": "b359b1695bc74c12",
      "text": "Using [[microservices]] on AWS. Is this to wiki's advantage? Can we exploit it without becoming it? See [[Computational Habitat]]"
    },
    {
      "type": "video",
      "id": "d4239b84a7cffcd4",
      "text": "YOUTUBE w14NJkV5yAg\nWith the release of AWS' API Gateway and the Lambda service, it is now possible to write scalable microservices without an application server--rather than being charged by the server-hour, you can create a server process that is charged by the processor-millisecond. Adam and Ben will walk through the process (and trade-offs) of defining and deploying an API service backed by Clojure components deployed into Lambda. Initial specification, authentication via an API token and SSO system, retrieval of data, and transformation of that data using the API Service will be covered, along with logging, exception handling, and monitoring."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Serverless Microservices",
        "story": []
      },
      "date": 1448039060042
    },
    {
      "item": {
        "type": "factory",
        "id": "d4239b84a7cffcd4"
      },
      "id": "d4239b84a7cffcd4",
      "type": "add",
      "date": 1448039061644
    },
    {
      "type": "edit",
      "id": "d4239b84a7cffcd4",
      "item": {
        "type": "video",
        "id": "d4239b84a7cffcd4",
        "text": "YOUTUBE w14NJkV5yAg\n(double-click to edit caption)\n"
      },
      "date": 1448039067010
    },
    {
      "type": "edit",
      "id": "d4239b84a7cffcd4",
      "item": {
        "type": "video",
        "id": "d4239b84a7cffcd4",
        "text": "YOUTUBE w14NJkV5yAg\nWith the release of AWS' API Gateway and the Lambda service, it is now possible to write scalable microservices without an application server--rather than being charged by the server-hour, you can create a server process that is charged by the processor-millisecond. Adam and Ben will walk through the process (and trade-offs) of defining and deploying an API service backed by Clojure components deployed into Lambda. Initial specification, authentication via an API token and SSO system, retrieval of data, and transformation of that data using the API Service will be covered, along with logging, exception handling, and monitoring.\n\nAbout the speakers: Ben Vandgrift struggles with a problem solving compulsion. He writes software when he is not being mauled by his rescue panther. Co-author of Clojure Applied: from Practice to Practitioner, and currently at Aerostat.\n\nAdam Hunter's appetite for new technologies is insatiable. Adam and Ben work daily to bring sanity and efficiency to the process of governance and taxation. Adam is currently at Aerostat.\n"
      },
      "date": 1448039098494
    },
    {
      "type": "edit",
      "id": "d4239b84a7cffcd4",
      "item": {
        "type": "video",
        "id": "d4239b84a7cffcd4",
        "text": "YOUTUBE w14NJkV5yAg\nWith the release of AWS' API Gateway and the Lambda service, it is now possible to write scalable microservices without an application server--rather than being charged by the server-hour, you can create a server process that is charged by the processor-millisecond. Adam and Ben will walk through the process (and trade-offs) of defining and deploying an API service backed by Clojure components deployed into Lambda. Initial specification, authentication via an API token and SSO system, retrieval of data, and transformation of that data using the API Service will be covered, along with logging, exception handling, and monitoring."
      },
      "date": 1448039130238
    },
    {
      "type": "fork",
      "site": "forage.rodwell.me",
      "date": 1448822670707
    },
    {
      "item": {
        "type": "factory",
        "id": "b359b1695bc74c12"
      },
      "id": "b359b1695bc74c12",
      "type": "add",
      "after": "d4239b84a7cffcd4",
      "date": 1448822673099
    },
    {
      "type": "move",
      "order": [
        "b359b1695bc74c12",
        "d4239b84a7cffcd4"
      ],
      "id": "b359b1695bc74c12",
      "date": 1448822675262
    },
    {
      "type": "edit",
      "id": "b359b1695bc74c12",
      "item": {
        "type": "paragraph",
        "id": "b359b1695bc74c12",
        "text": "Using microservices on AWS"
      },
      "date": 1448822723052
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1449070040977
    },
    {
      "type": "edit",
      "id": "b359b1695bc74c12",
      "item": {
        "type": "paragraph",
        "id": "b359b1695bc74c12",
        "text": "Using microservices on AWS. Is this to wiki's advantage? Can we exploit it without becoming it? See [[Computational Habitat]]"
      },
      "date": 1449070145677
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1449084367843
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1501495332067
    },
    {
      "type": "edit",
      "id": "b359b1695bc74c12",
      "item": {
        "type": "paragraph",
        "id": "b359b1695bc74c12",
        "text": "Using [[microservices]] on AWS. Is this to wiki's advantage? Can we exploit it without becoming it? See [[Computational Habitat]]"
      },
      "date": 1501495577845
    }
  ]
}