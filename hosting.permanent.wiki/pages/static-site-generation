{
  "title": "Static Site Generation",
  "story": [
    {
      "type": "paragraph",
      "id": "b2f2c8ada4fb7794",
      "text": "People sometimes ask if static sites make sense for anything beyond a one-pager. This leaderboard highlights the top open source projects, in many different languages, that make static sites not only viable, but an attractive option for creating sophisticated websites!\n\nThe typical CMS driven website works by building each page on-demand, fetching content from a database and running it through a template engine. This means each page is assembled from templates and content on each request to the server.\n\nFor most sites this is completely unnecessary overhead and only adds complexity, performance problems and security issues. After all, by far the most websites only change when the content authors or their design team makes changes.\n\nA Static Site Generator takes a different approach and generate all the pages of the website once when there’s actually changes to the site. This means there’s no moving parts in the deployed website. Caching gets much easier, performance goes up and static sites are far more secure."
    },
    {
      "id": "d5001761d3487772",
      "text": "Command line deploy with [http://surge.sh Surge].",
      "type": "paragraph"
    },
    {
      "id": "259318fba50548c2",
      "text": "Fairly comprehensive list of open source [https://www.staticgen.com/ Static Site Generators]",
      "type": "paragraph"
    },
    {
      "id": "d1ca9fe2c5298b4f",
      "text": "[http://jekyllrb.com/ Jekyll], which powers GitHub Pages, does not use a database. Everything is in HTML or Markdown. Interesting spin with [https://github.com/barryclark/jekyll-now Jekyll Now] to run it directly from GitHub. ",
      "type": "paragraph"
    },
    {
      "id": "f00b36e2e91fab29",
      "text": "[http://dynalon.github.io/mdwiki/#!index.md MDWiki] is an interesting concept of flat file markdown + javascript parsing. ",
      "type": "paragraph"
    },
    {
      "id": "915a78593865848e",
      "text": "[http://postach.io/site Postachio] uses Evernote as the content host and uses the API to render out a website. Publishing content is as simple as tagging a post with #published. Really interesting is the parsing engine they've built to render out media and interactive elements. Using simple \"short code\" style snippets of text [http://help.postach.io/tag/post-embeds users can embed a variety of content] from external sources such as Tweets, Comics, Images, Videos, Slides and Gists.",
      "type": "paragraph"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Static Site Generation",
        "story": []
      },
      "date": 1497954160362
    },
    {
      "item": {
        "type": "factory",
        "id": "b2f2c8ada4fb7794"
      },
      "id": "b2f2c8ada4fb7794",
      "type": "add",
      "date": 1497954161949
    },
    {
      "type": "add",
      "item": {
        "id": "d5001761d3487772",
        "text": "Command line deploy with [http://surge.sh Surge].",
        "type": "paragraph"
      },
      "id": "d5001761d3487772",
      "date": 1497954166343
    },
    {
      "type": "add",
      "item": {
        "id": "d1ca9fe2c5298b4f",
        "text": "[http://jekyllrb.com/ Jekyll], which powers GitHub Pages, does not use a database. Everything is in HTML or Markdown. Interesting spin with [https://github.com/barryclark/jekyll-now Jekyll Now] to run it directly from GitHub. ",
        "type": "paragraph"
      },
      "after": "d5001761d3487772",
      "id": "d1ca9fe2c5298b4f",
      "date": 1497954168382
    },
    {
      "type": "add",
      "item": {
        "id": "f00b36e2e91fab29",
        "text": "[http://dynalon.github.io/mdwiki/#!index.md MDWiki] is an interesting concept of flat file markdown + javascript parsing. ",
        "type": "paragraph"
      },
      "after": "d1ca9fe2c5298b4f",
      "id": "f00b36e2e91fab29",
      "date": 1497954172747
    },
    {
      "type": "add",
      "item": {
        "id": "915a78593865848e",
        "text": "[http://postach.io/site Postachio] uses Evernote as the content host and uses the API to render out a website. Publishing content is as simple as tagging a post with #published. Really interesting is the parsing engine they've built to render out media and interactive elements. Using simple \"short code\" style snippets of text [http://help.postach.io/tag/post-embeds users can embed a variety of content] from external sources such as Tweets, Comics, Images, Videos, Slides and Gists.",
        "type": "paragraph"
      },
      "after": "f00b36e2e91fab29",
      "id": "915a78593865848e",
      "date": 1497954174990
    },
    {
      "type": "add",
      "item": {
        "id": "259318fba50548c2",
        "text": "Fairly comprehensive list of open source [https://www.staticgen.com/ Static Site Generators]",
        "type": "paragraph"
      },
      "after": "d5001761d3487772",
      "id": "259318fba50548c2",
      "date": 1497954177940
    },
    {
      "type": "edit",
      "id": "b2f2c8ada4fb7794",
      "item": {
        "type": "paragraph",
        "id": "b2f2c8ada4fb7794",
        "text": "People sometimes ask if static sites make sense for anything beyond a one-pager. This leaderboard highlights the top open source projects, in many different languages, that make static sites not only viable, but an attractive option for creating sophisticated websites!\n\nThe typical CMS driven website works by building each page on-demand, fetching content from a database and running it through a template engine. This means each page is assembled from templates and content on each request to the server.\n\nFor most sites this is completely unnecessary overhead and only adds complexity, performance problems and security issues. After all, by far the most websites only change when the content authors or their design team makes changes.\n\nA Static Site Generator takes a different approach and generate all the pages of the website once when there’s actually changes to the site. This means there’s no moving parts in the deployed website. Caching gets much easier, performance goes up and static sites are far more secure."
      },
      "date": 1497954224258
    },
    {
      "type": "move",
      "order": [
        "b2f2c8ada4fb7794",
        "d5001761d3487772",
        "259318fba50548c2",
        "d1ca9fe2c5298b4f",
        "f00b36e2e91fab29",
        "915a78593865848e"
      ],
      "id": "b2f2c8ada4fb7794",
      "date": 1497954226982
    }
  ]
}