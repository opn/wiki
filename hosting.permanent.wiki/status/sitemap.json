[{"slug":"-nginx-virtual-hosts","title":" Nginx Virtual Hosts","date":1502531690008,"synopsis":"Redirect: space in page title"},{"slug":"alexandria","title":"Alexandria","date":1497296731498,"synopsis":"The Ancient Library of Alexandria is a perfect, and tragic, example of the problem with centralization. Today’s information architecture is similarly vulnerable because the it’s hub and spoke network relies on centralized hubs to store and distribute information. Decentralized technology eliminates central points of failure - [http://www.alexandria.io/learn/#learn1 alexandria.io]"},{"slug":"almost-instant-web-sites","title":"Almost Instant Web Sites","date":1497954622991,"synopsis":"Now running web sites involves ftping files to servers, and running complex perl scripts. The future is [[Static Site Generation]] - at least for a short while :)"},{"slug":"amazon-lightsail","title":"Amazon LightSail","date":1497366817185,"synopsis":"Lightsail packages together a compute server, storage, and transfer into fixed-price plans, like VPS providers do."},{"slug":"anatomy-of-a-server","title":"Anatomy of a Server","date":1502465845907,"synopsis":"Here we describe the essential elements that make up a [[Wiki Node Server]]:"},{"slug":"anthropological-archive","title":"Anthropological Archive","date":1500114723827,"synopsis":"An [[archive]] can be considered as a store of artefacts, whether digital or physical, but here we look to describe something more organic, more \"present\" and evolving in terms of structure, and more psychosocial in terms of content."},{"slug":"application-linking","title":"Application Linking","date":1497365171234,"synopsis":"Linking your micro-service applications together within [[containership.io]] is incredibly simple."},{"slug":"archive-file-naming-convention","title":"Archive File Naming Convention","date":1503088243997,"synopsis":"Here we are looking at how we name files, and what folder structure we use so that assets in the [[Permanent Wiki]] can be stored conventionally, and in [[IPFS]]."},{"slug":"assets-in-ipfs","title":"Assets in IPFS","date":1502542746242,"synopsis":"We explore distributing assets via a node on localhost. The strategy is to store postcard sized assets in the json along with full resolution content in ipfs. Double-click will retrieve and display the ipfs version."},{"slug":"basic-access-authentication","title":"Basic access authentication","date":1502264300980,"synopsis":"In the context of a HTTP transaction, basic access authentication is a method for a HTTP user agent to provide a user name and password when making a request - [https://en.wikipedia.org/wiki/Basic_access_authentication wikipedia]"},{"slug":"basic-authentication","title":"Basic Authentication","date":1502264268098,"synopsis":"In the context of a HTTP transaction, [[basic access authentication]] is a method for a HTTP user agent to provide a user name and password when making a request - [https://en.wikipedia.org/wiki/Basic_access_authentication wikipedia]"},{"slug":"benefits-of-jwts","title":"Benefits of JWT's","date":1510693296202,"synopsis":"There are a number of benefits to using [[Jason Web Tokens]]:"},{"slug":"best-picts","title":"Best Picts","date":1474762119902,"synopsis":"These are from a sample app saving images to ipfs. [https://ipfs.pics/best site]"},{"slug":"block-server","title":"Block Server","date":1461351916945,"synopsis":"Block Server or BlockServer is a term that I am using for an HTTP server which interacts with the [[Blockchain]] and / or decentralised protocols such as [[IPFS]]."},{"slug":"budget-studio","title":"Budget Studio","date":1437998380322,"synopsis":"Here we look at creating a super low cost [[Live TV Studio]] using one or more [[Raspberry Pi]] devices."},{"slug":"caddy","title":"Caddy","date":1502212471579,"synopsis":"Caddy is a modern light weight server, which makes it super easy to maintain an HTTPS server. It is an alternative to using [[Nginx]] -"},{"slug":"caddy-automatic-https","title":"Caddy Automatic HTTPS","date":1497947293799,"synopsis":"Caddy activates HTTPS by default for sites with qualifying domain names (names for which a TLS certificate can be negotiated via the ACME protocol ([[Automated Certificate Management Environment]])), and redirects HTTP requests to HTTPS. It obtains certificates as needed during startup and keeps them renewed during the lifetime of the server."},{"slug":"caddy-based-federation","title":"Caddy Based Federation","date":1497947169448,"synopsis":"Here we look at how we can have an easy setup and install for the following integrated services all on one machine (ie your laptop):"},{"slug":"caddy-git-plugin","title":"Caddy Git Plugin","date":1497947248527,"synopsis":"The git plugin makes it possible to deploy your site with a simple git push - [https://caddyserver.com/docs/http.git caddyserver.com]"},{"slug":"caddy-on-dreamfactory","title":"Caddy on DreamFactory","date":1511885789201,"synopsis":"Below are a collection of links imported from [[OneTab]]. You can view these links here - [https://www.one-tab.com/page/jzTse7Z6ST6FwGU_OWrDgQ one-tab.com]:"},{"slug":"caddy-web-server","title":"Caddy (web server)","date":1497947355702,"synopsis":"Caddy, sometimes clarified as the Caddy web server, is an open source, HTTP/2-enabled web server written in Go. It uses the Go standard library for its HTTP functionality - [https://en.wikipedia.org/wiki/Caddy_(web_server) wikipedia]"},{"slug":"ceptr","title":"CEPTR","date":1501590056783,"synopsis":"Ceptr is one of those audacious, world-changing projects which can't be summarized into a shiny catch-phrase, but here are some anyway - [http://ceptr.org/ ceptr.org]"},{"slug":"changes-to-this-site","title":"Changes to this Site","date":1499016428941,"synopsis":"Follow  [[Changes to this Site]], or [[Changes to Fedwiki Sites]], to see what we are [[Currently Working On]]. Use [[Fedwiki Tools]] to author new content."},{"slug":"cluster-based-federation","title":"Cluster Based Federation","date":1497945391657,"synopsis":"A page with 1 items."},{"slug":"colophon","title":"Colophon","date":1497058650118,"synopsis":"A lot of code was written and deleted in the creation of this wiki.  Here we highlight some of the current solutions."},{"slug":"constructing-explanations","title":"Constructing Explanations","date":1501835949173,"synopsis":"We seek explanation for what a system does and why. [[Microservices]] complicate this aspiration when mixed technologies have been assembled over years by evolving teams for changing business purpose."},{"slug":"containershipio","title":"containership.io","date":1497885958866,"synopsis":"Containership Cloud is a containers-as-a-service platform providing users with a single pane of glass to easily deploy, manage and scale their containerized applications on any public or private cloud - [https://docs.containership.io/getting-started/overview/what-is-containership-cloud containership.io]"},{"slug":"context-map","title":"Context Map","date":1490102968545,"synopsis":"An individual [[bounded context]] leaves some problems in the absence of a global view. The context of other models may still be vague and in flux."},{"slug":"continuous-delivery","title":"Continuous delivery","date":1501495920630,"synopsis":"Continuous delivery (CD) is a software engineering approach in which teams produce software in short cycles, ensuring that the software can be reliably released at any time. It aims at building, testing, and releasing software faster and more frequently. The approach helps reduce the cost, time, and risk of delivering changes by allowing for more incremental updates to applications in production. A straightforward and repeatable deployment process is important for continuous delivery - [https://en.wikipedia.org/wiki/Continuous_delivery wikipedia]"},{"slug":"controlling-nginx","title":"Controlling Nginx","date":1502226663432,"synopsis":"If you need full control over your NGINX webserver you can use this commands to start, stop and restart NGINX."},{"slug":"cors","title":"CORS","date":1434924448927,"synopsis":"Cross-origin resource sharing (CORS) is a mechanism that allows restricted resources (e.g. fonts, JavaScript, etc.) on a web page to be requested from another domain outside the domain from which the resource originated - [https://en.wikipedia.org/wiki/Cross-origin_resource_sharing wikipedia]"},{"slug":"currently-working-on","title":"Currently Working On","date":1497943611025,"synopsis":"Here is a list of [[Recent Changes]] I consider important. View our experiments on the [[Scratch]] page. To clear stuff saved in your browser try [[Local Changes]]."},{"slug":"custom-css","title":"Custom CSS","date":1502357605507,"synopsis":"You can set the [[CSS]] for individual wiki sites in a farm by adding a [[Fedwiki Theme Folder]] to the status folder of the site."},{"slug":"d3-visualizations","title":"D3 Visualizations","date":1420389860685,"synopsis":"I've adapted many d3.js examples to make useful and occasionally innovative visualizations in federated wiki and elsewhere."},{"slug":"data-analysis-of-wiki","title":"Data Analysis Of Wiki","date":1503058198507,"synopsis":"Wiki lends itself to data analysis. [[Paragraph level atomicity]], and [[Fork History]] enable us to graph relationships between authors, and explore how information travels across the federation."},{"slug":"decentralised-media-commons","title":"Decentralised Media Commons","date":1502550713381,"synopsis":"The Decentralised Media Archive aims to fulfil the same function as [[Wikimedia Commons]] but for the decentralised or permanent web."},{"slug":"decentralised-video-workstation","title":"Decentralised Video Workstation","date":1502640002158,"synopsis":"A page with 1 items."},{"slug":"decentralised-wikipedia","title":"Decentralised Wikipedia","date":1503005958316,"synopsis":"Putting Wikipedia Snapshots on IPFS and working towards making it fully read-write."},{"slug":"detailed-look-at-wiki-components","title":"detailed look at wiki components","date":1501514640022,"synopsis":"Several components collaborate to make this local wiki farm work.  Here we consider the parts and their interaction with the whole."},{"slug":"devops","title":"DevOps","date":1502218167112,"synopsis":"DevOps is a software development and delivery process that emphasises communication and collaboration between product management, software development, and operations professionals."},{"slug":"digital-ocean","title":"Digital Ocean","date":1518180712045,"synopsis":"[[DigitalOcean Hosting]] enables flexible control of teams, and servers, which together with a robust API offers the ability to manage [[Platform Earth]] hosting and billing by independent legal entities."},{"slug":"digitalocean","title":"DigitalOcean","date":1518179368024,"synopsis":"[[DigitalOcean]] is an American virtual private server provider based in New York City. The company leases capacity from existing datacenters, including sites in New York, Amsterdam, San Francisco, London and Singapore."},{"slug":"digitalocean-api","title":"DigitalOcean API","date":1518179546990,"synopsis":"The first step to using the API is to generate a personal access token. Personal access tokens function like ordinary [[OAuth]] access tokens. They can be used instead of a password for [[DigitalOcean]] over [[HTTPS]], or can be used to authenticate to the API over [[Basic Authentication]]."},{"slug":"digitalocean-hosting","title":"DigitalOcean Hosting","date":1518180723045,"synopsis":"[[DigitalOcean Hosting]] enables flexible control of teams, and servers, which together with a robust API offers the ability to manage [[Platform Earth]] hosting and billing by independent legal entities."},{"slug":"distributed-file-systems","title":"Distributed file systems","date":1503005512191,"synopsis":"''Distributed file systems'' do not share block level access to the same storage but use a network protocol ([[protocol (computing)]]).  These are commonly known as ''network file systems'', even though they are not the only file systems that use the network to send data.  Distributed file systems can restrict access to the file system depending on [[access list]]s or capabilities ([[Capability-based security]]) on both the servers and the clients, depending on how the protocol is designed."},{"slug":"docker","title":"Docker","date":1459437795001,"synopsis":"Docker is an open-source project that automates the deployment of applications inside software containers - [https://en.wikipedia.org/wiki/Docker_%28software%29 wikipedia]"},{"slug":"docker-based-livecode-server","title":"Docker Based Livecode Server","date":1497994739935,"synopsis":"Here we explore how we might run a Livecode server using Docker."},{"slug":"docker-container","title":"Docker Container","date":1497359035285,"synopsis":"Docker containers are similar to a directory. A Docker container holds everything that is needed for an application to run."},{"slug":"docker-data-sharing","title":"Docker Data Sharing","date":1497995718989,"synopsis":"A page with 0 items."},{"slug":"docker-data-volumes","title":"Docker Data Volumes","date":1497995872241,"synopsis":"A Docker container is similar to a virtual machine. It basically allows you to run a pre-packaged \"Linux box\" inside a container -"},{"slug":"docker-provisioning","title":"Docker Provisioning","date":1501770734972,"synopsis":"For simple ad-hoc farms of diverse infrastructure, Docker is a simple deployment platform."},{"slug":"document-package","title":"Document Package","date":1502985557744,"synopsis":"Document packages give the illusion of a single document to users but provide you with flexibility in how you store the document data internally."},{"slug":"domain-driven-design","title":"Domain-driven design","date":1502218812344,"synopsis":"Domain-driven design (DDD) is an approach to software development for complex needs by connecting the implementation to an evolving model. The premise of domain-driven design is the following: - [https://en.wikipedia.org/wiki/Domain-driven_design wikipedia]"},{"slug":"dream-wiki","title":"Dream Wiki","date":1503088592221,"synopsis":"- [[Snapshots of Wiki]]"},{"slug":"dreamfactory","title":"DreamFactory","date":1502367653482,"synopsis":"Here we look at installing DreamFactory on [[DigitalOcean]] servers. Essentially the main purpose of DreamFactory is to make it easy to provide and manage a [[REST Gateway]] that can act as a proxy to a wide range of [[microservices]]."},{"slug":"dreamfactory-and-oauth","title":"DreamFactory and OAuth","date":1502262033581,"synopsis":"Next let's jump in to see how [[oAuth 2.0]] works with [[DreamFactory]]:"},{"slug":"dreamfactory-ipfs-service","title":"DreamFactory IPFS Service","date":1502992536734,"synopsis":"The aim here is to have the [[IPFS Daemon]] running on a [[docker]] and serving files from a cloud based data container, using [[DreamFactory]] to wrap this as a service which we can use in apps and manage authentication tokens for."},{"slug":"dreamfactory-nginx-config","title":"DreamFactory Nginx Config","date":1502526722232,"synopsis":"Here we should link to the [[Nginx Configuration File]] for the DreamFactory Wiki."},{"slug":"dreamfactory-nginx-configuration","title":"DreamFactory Nginx Configuration","date":1502526702935,"synopsis":"Redirect:"},{"slug":"dreamfactory-security","title":"DreamFactory Security","date":1502264818451,"synopsis":"DreamFactory services can be authenticated using [[Basic Authentication]] or [[OAuth 2.0]]."},{"slug":"dreamfactory-services","title":"DreamFactory Services","date":1502218958866,"synopsis":"Here we look at how we can use DreamFactory to create [[microservices]] - but by bit."},{"slug":"dreamfactory-wiki","title":"DreamFactory Wiki","date":1503088482614,"synopsis":"So the idea here is to see if we can get [[DreamFactory]] to fulfil the basic [[Fedwiki Server Requirements]], which essentially means serving json files, a favicon and a sitemap via HTTP GET."},{"slug":"dreamfactory-wiki-assets","title":"Dreamfactory Wiki Assets","date":1502543350082,"synopsis":"Here we explore how we will organise media assets in wiki to create our own [[decentralised media commons]] on"},{"slug":"dreamfactory-wiki-files","title":"DreamFactory Wiki Files","date":1503088220939,"synopsis":"Here we look at how we can provide proper [[RESTful]] access to [[Fedwiki Files]] from multiple domains using [[DreamFactory]]."},{"slug":"ease-of-use","title":"Ease of Use","date":1503041020787,"synopsis":"Wiki is easy to use, in the same way that a bicycle is easy to use. Once you've learned it you don't have to think about it. But it takes a while to learn, and there is no easy shortcut to learning how to ride."},{"slug":"el-dorado","title":"El Dorado","date":1511883037097,"synopsis":"My colleagues and I anticipated losing track of [[micro-services]] when they are freely created through self-service. Is this a problem? Andrew Ettinger initiated the further study of our engineering records that he dubbed El Dorado, the place of treasure."},{"slug":"elitism-of-effort","title":"Elitism of Effort","date":1503041435977,"synopsis":"To take advantage, or even respect the content of [[wiki]], you need effort. It is not designed to be immediately accessible, and through continued puzzled use, I have come to think that this aspect of wiki may strangely be a core social feature."},{"slug":"experiment-with-plugins","title":"Experiment with Plugins","date":1501513492515,"synopsis":"Our default configuration sets the admin in config.json to match The Owner's secret. With this in place, you can use [[plugmatic]] to install plugins in your local wiki farm. As of this writing the plugins do not get installed in a persistent location in the container. The next reboot of the web service will reset the container to its original state without the plugins installed."},{"slug":"federated-wayback-machine","title":"Federated Wayback Machine","date":1502380650312,"synopsis":"A federated-wayback-machine, is a way of archiving all content in the [[Federation]]. JSON from every site would be periodically archived in a decentralised manor."},{"slug":"federated-wiki-on-digital-ocean","title":"Federated Wiki on Digital Ocean","date":1497613599780,"synopsis":"At some point you may want to run your own Federated Wiki site, or perhaps set one up  for friends or a class. We've had good luck installing on Digital Ocean, which currently offers very cheap hosting and a much simpler setup than services such as Amazon Web Services."},{"slug":"federating-foreign-servers","title":"Federating Foreign Servers","date":1485371526159,"synopsis":"We consider what requests a server must handle in order to participate in wiki's federation. Such a server provides pages without taking responsibility for the client-side javascript conventionally used by federated wiki."},{"slug":"fedwiki-live-studio","title":"Fedwiki Live Studio","date":1438343176050,"synopsis":"The idea here is to build [[Fedwiki]] and [[IPFS]] into the heart of a running live studio."},{"slug":"fedwiki-livecode-server","title":"Fedwiki Livecode Server","date":1497948465764,"synopsis":"Alongside creating native Android and iOS [[Wiki App]] in [[LiveCode]] we will look to engage a community in creating a test server in [[Livecode]]."},{"slug":"fedwiki-on-ipfs","title":"Fedwiki on IPFS","date":1450008242137,"synopsis":"The aim is to have [[Fedwiki]] running as a pure Javascript application (no custom server required) and served by IPFS to allow a fully decentralised platform."},{"slug":"fedwiki-pi","title":"Fedwiki Pi","date":1437992805110,"synopsis":"The [[Raspberry Pi]] makes a handy server for [[Fedwiki]]. This page is about how you setup and run a [[Wiki Farm]] on a Raspberry Pi."},{"slug":"fedwiki-server","title":"Fedwiki Server","date":1502222458101,"synopsis":"This page is about the current and future of [[Fedwiki]] servers. The current reference implementation in [[Node]] can be found her on [https://github.com/fedwiki/wiki-node-server gitbub]"},{"slug":"fedwiki-server-headers","title":"Fedwiki Server Headers","date":1502467852440,"synopsis":"Here we look at the [[HTTP Headers]] that are sent and received when a client (browser) requests a wiki-page (json)."},{"slug":"fedwiki-server-hosting","title":"Fedwiki Server Hosting","date":1435500019322,"synopsis":"This page is about the current and future of [[Fedwiki]] servers. The current reference implementation in [[Node]] can be found her on [https://github.com/fedwiki/wiki-node-server gitbub]"},{"slug":"fedwiki-server-requirements","title":"Fedwiki Server Requirements","date":1502465731135,"synopsis":"Here we list the minimum requirements for a Fedwiki Server:"},{"slug":"fedwiki-server-routes","title":"Fedwiki Server Routes","date":1502465848794,"synopsis":"A page with 0 items."},{"slug":"fedwiki-site-administration","title":"Fedwiki Site Administration","date":1497880682228,"synopsis":"These pages are about techniques, problems and issues with regard to running a [[Fedwiki Server]]."},{"slug":"fedwiki-storage","title":"Fedwiki Storage","date":1497356418632,"synopsis":"Here we look to explore different forms of file storage for Fedwiki."},{"slug":"fedwiki-theme-folder","title":"Fedwiki Theme Folder","date":1502543025154,"synopsis":"You can set the [[CSS]] (or indeed any file such as an image file) that you want to wiki to serve), by adding a [[Fedwiki Theme Folder]] to the status folder of the site."},{"slug":"fedwiki-tools","title":"Fedwiki Tools","date":1502534642551,"synopsis":"Here we list a few tools that are of particular use in managing and creating [[Fedwiki]] content."},{"slug":"filecoin","title":"Filecoin","date":1502552673866,"synopsis":"[[Filecoin]] is the sister protocol of [[IPFS]]. While neither protocol depends on each other, they are perfectly complementary. IPFS handles high performance distribution of objects; Filecoin handles incentivising the world to backup/seed objects."},{"slug":"filesystem-in-userspace","title":"Filesystem in Userspace","date":1502984795116,"synopsis":"Filesystem in Userspace (FUSE) is a software interface for Unix-like computer operating systems that lets non-privileged users create their own file systems without editing kernel code. This is achieved by running file system code in user space while the FUSE module provides only a \"bridge\" to the actual kernel interfaces - [https://en.wikipedia.org/wiki/Filesystem_in_Userspace wikipedia]"},{"slug":"film-oracle","title":"Film Oracle","date":1455125495662,"synopsis":"Here we describe the physicality, and software architecture of a [[Micro-server]] that we have developed for the purpose of supporting decentralised film production."},{"slug":"flickr-photos","title":"Flickr Photos","date":1502557162159,"synopsis":"Below are a collection of links imported from [[OneTab]]. You can view these links here - [https://www.one-tab.com/page/kNLuIMyVT5mUPltI9ybD9w one-tab.com]:"},{"slug":"freedom-from-lock-in","title":"Freedom from Lock-in","date":1497358375644,"synopsis":"The aim is to be able to choose and move hosting as easily as possible as and when new solutions become available. In particular the ability to self-host when needed is a basic."},{"slug":"graph-database","title":"Graph database","date":1503048933739,"synopsis":"In computing, a graph database is a database that uses graph structures for semantic queries with nodes, edges and properties to represent and store data - [https://en.wikipedia.org/wiki/Graph_Database wikipedia]"},{"slug":"holochain","title":"Holochain","date":1514134906111,"synopsis":"Holographic storage for distributed applications. A holochain is a validating distributed hash table (DHT) where every node enforces validation rules on data against the signed chains where the data originated - [http://ceptr.org/projects/holochain ceptr.org]"},{"slug":"hosting","title":"Hosting","date":1501556213211,"synopsis":"A computer with a modern operating system and networking software can host the wiki server. This combination of resources can be found in many places."},{"slug":"hosting-audio","title":"Hosting Audio","date":1497705626109,"synopsis":"Here we look at strategies for hosting audio files in Fedwiki. This is a specific use-case for creating an [[Audio Archive]] rather than simply a hosting files in a more general media archive."},{"slug":"hosting-infrastructure","title":"Hosting Infrastructure","date":1435499407384,"synopsis":"THe aim of a future hosting infrastructure for [[Fedwiki Server]] software should separate concerns:"},{"slug":"hosting-strategy","title":"Hosting Strategy","date":1501495942209,"synopsis":"Here we look at our latest thinking of hosting strategy for [[Thought Garden Projects]]."},{"slug":"html5-audio","title":"HTML5 Audio","date":1497703061935,"synopsis":"HTML5 Audio is a subject of the HTML5 specification, investigating audio input, playback, synthesis, as well as speech to text in the browser - [https://en.wikipedia.org/wiki/HTML5_Audio wikipedia]"},{"slug":"html5-video","title":"HTML5 Video","date":1490371420091,"synopsis":"HTML5 video is intended by its creators to become the new standard way to show video on the web without plugins - [https://en.wikipedia.org/wiki/HTML5_video wikipedia]"},{"slug":"hyperlocal-server","title":"Hyperlocal Server","date":1501770781334,"synopsis":"On this page we discuss the development of a \"hyperlocal server\" for the [[Federation]]. We imagine a number of bespoke [[Hyperlocal Servers]] coded in different languages. The one we are concentrating here is the [[LiveNode Server]] or more specifically the [[Block Server]]."},{"slug":"icotopia","title":"Icotopia","date":1502472228913,"synopsis":"Icotopia is a project to tell the story of ICO's, and provide tools to make understanding them and comparing them easier."},{"slug":"image-assets","title":"Image Assets","date":1475588917031,"synopsis":"We url-encode images dropped on the factory plugin. This captures the sharing dynamics expected of the federation but it doesn't match with current asset practices."},{"slug":"install-ipfs","title":"Install IPFS","date":1502726814592,"synopsis":"IPFS is a single file - a command line utility. All you need to do is place that file in the right place on your computer and you are set to go."},{"slug":"install-lets-encrypt-on-apache","title":"Install Let's Encrypt on Apache","date":1502199446930,"synopsis":"The instructions below are for [[Install Let's Encrypt on Apache]]. You may also want to check out how to [[Install Let's Encrypt on Nginx]]."},{"slug":"install-lets-encrypt-on-nginx","title":"Install Let's Encrypt on Nginx","date":1502199277620,"synopsis":"A page with 0 items."},{"slug":"installing-dreamfactory","title":"Installing DreamFactory","date":1502226887654,"synopsis":"Follow this steps for installing Dreamfactory 2.1 on DigitalOcean Server choosing Nginx (not Apache) as the web server and MariaDb as the database - [http://wiki.dreamfactory.com/DreamFactory/APT/Ubuntu_16.04/Installation Install DreamFactory]"},{"slug":"installing-ipfs-on-digital-ocean","title":"Installing IPFS on Digital Ocean","date":1502996497679,"synopsis":"Here we look at how to install IPFS on digital ocean. There are two good tutorials below on how to install IPFS manually:"},{"slug":"installing-nginx-on-osx","title":"Installing Nginx on OSX","date":1502226749856,"synopsis":"It's straightforwards to install Nginx on OSX with [[bre]] - [http://www.parisnakitakejser.com/homebrew-install-nginx-and-php-fpm-on-mac-os-x/ parisnakitakejser.com]"},{"slug":"installing-on-digital-ocean","title":"Installing on Digital Ocean","date":1462886780127,"synopsis":"At some point you may want to run your own Federated Wiki site, or perhaps set one up  for friends or a class. We've had good luck installing on [[DigitalOcean]], which currently offers very cheap hosting and a much simpler setup than services such as Amazon Web Services."},{"slug":"internal-load-balancing","title":"Internal Load Balancing","date":1497365005564,"synopsis":"Internal load balancing between different applications within the same cluster is provided by the Service Discovery system. The service discovery system runs by default on every cluster, and no additional setup is needed to make use of it's features."},{"slug":"interplanetary-file-system","title":"InterPlanetary File System","date":1433116695901,"synopsis":"IPFS is a distributed file system that seeks to connect all computing devices with the same system of files. In some ways, this is similar to the original aims of the Web, but IPFS is actually more similar to a single bittorrent swarm exchanging git objects."},{"slug":"ipfs","title":"IPFS","date":1511883716220,"synopsis":"IPFS stands for the [[InterPlanetary File System]]. IPFS is a bold attempt at evolving the Internet's infrastructure."},{"slug":"ipfs-api","title":"IPFS API","date":1502973753351,"synopsis":"IPFS HTTP API is an RPC API which should work across different IPFS implementations. The most feature-complete of those implementations, and current reference for this specification is go-ipfs - [https://ipfs.io/docs/api/ ipfs.io]"},{"slug":"ipfs-architecture-for-fedwiki","title":"IPFS Architecture for Fedwiki","date":1449658954016,"synopsis":"How we might structure the IPFS \"file system\" to serve Fedwiki pages and integrate this with standalone JavaScript apps."},{"slug":"ipfs-cluster","title":"IPFS Cluster","date":1504627023419,"synopsis":"ipfs-cluster allows to replicate content (by pinning) in multiple IPFS nodes. This is alpha software, but may well be something we want to consider in terms of [[IPFS Hosting]] for the [[Anthropological Archive]]."},{"slug":"ipfs-fedwiki-backend","title":"IPFS Fedwiki Backend","date":1448029544636,"synopsis":"Here we discuss how we might structure the [[IPFS]] \"file system\" to serve [[Fedwiki page]]s and integrate this with [[Standalone JavaScript Apps]]."},{"slug":"ipfs-files","title":"IPFS Files","date":1502380152443,"synopsis":"IPFS Files API allows to manipulate unixfs objects (current IPFS files and directories format) in manner similar to normal Unix commands."},{"slug":"ipfs-hosting","title":"IPFS Hosting","date":1504626649795,"synopsis":"Here we look at how we might host our own IPFS Gateway for hosting Fedwiki assets."},{"slug":"ipfs-howto","title":"IPFS Howto","date":1502641109795,"synopsis":"[[IPFS]] uses a global local object repository, added to ~/.ipfs. See the full instructions over at [http://ipfs.io/docs/getting-started/ ipfs.io]"},{"slug":"ipfs-multihash","title":"IPFS Multihash","date":1502388770635,"synopsis":"[[Multihash]] (as used by [[IPFS]]), is a protocol for differentiating outputs from various well-established cryptographic hash functions, addressing size + encoding considerations."},{"slug":"ipfs-paths","title":"IPFS Paths","date":1502379876877,"synopsis":"[[IPFS]] paths begin with a [[multihash]] and can be followed by an arbitrarily long path. Each path component is looked up in each IPFS nodes link-list until the final blob is retreived."},{"slug":"ipfs-pinning","title":"IPFS Pinning","date":1502990695701,"synopsis":"Pinning is a very important concept in [[ipfs]]. ipfs semantics try to make it feel like every single object is local, there is no \"retrieve this file for me from a remote server\", just ipfs cat or ipfs get which act the same way no matter where the actual object is located. While this is nice, sometimes you want to be able to control what you keep around."},{"slug":"ipfs-pubsub","title":"IPFS pubsub","date":1502991878364,"synopsis":"[[IPFS]] recently merged a simple, experimental pubsub implementation into IPFS. This implementation is just a beginning. It is far from the performance and security goals we will achieve in our long-term target. However, even this early implementation opens the doors to several useful and interesting new applications."},{"slug":"ipfs-video-streaming","title":"IPFS Video Streaming","date":1502640987728,"synopsis":"Here we examine how we stream video using IPFS. Let's do some research on how to install IPFS, and it's application to creating a [[Decentralised Video Workstation]]."},{"slug":"ipns","title":"IPNS","date":1449659116148,"synopsis":"IPNS stands for the The Inter-Planetary Naming System. ipns is a way to add a small amount of mutability to the permanent immutability that is ipfs. It allows you to store a reference to an ipfs hash under the namespace of your peerID ( hash of your public key ). - [https://github.com/ipfs/examples/tree/master/examples/ipns github]"},{"slug":"issue","title":"Issue","date":1458147677831,"synopsis":"Here we list issues to do with the [[Himalayan Academy Web Sites]]."},{"slug":"journal-duplication","title":"Journal Duplication","date":1420512453908,"synopsis":"The Journal stores new copies of story items each time they are edited. This presumes items are small and edits touch all parts of them. Not true for caption edits of fat images. But, let's consider the Journal an asset library for story items in the few cases where this is an issue."},{"slug":"json-web-token","title":"JSON Web Token","date":1510693147666,"synopsis":"JSON Web Token (JWT, pronounced jot) is a relatively new token format used in space-constrained environments such as HTTP Authorization headers. JWT is architected as a method for transferring security claims based between parties - [https://en.wikipedia.org/wiki/JSON_Web_Token wikipedia]"},{"slug":"kubernetes","title":"Kubernetes","date":1497357757822,"synopsis":"Kubernetes (commonly referred to as \"K8s\") is an open-source system for automating deployment, scaling and management of containerized applications."},{"slug":"laptop-server","title":"Laptop Server","date":1431392897772,"synopsis":"Federation makes even tiny wiki sites valuable. To feel this value, make some sites. Experiment. Keep the ones you like. Here I reflect on three years of doing this myself."},{"slug":"lets-encrypt","title":"Let's Encrypt","date":1522437939701,"synopsis":"Let’s Encrypt is a free, automated, and open certificate authority (CA), run for the public’s benefit. Let’s Encrypt is a service provided by the Internet Security Research Group (ISRG). [https://letsencrypt.org Let's Encrypt] [https://letsencrypt.org/isrg/ ISRG]"},{"slug":"lets-encrypt-livecode","title":"Let's Encrypt Livecode","date":1497995264118,"synopsis":"Today I managed to install a [[Let's Encrypt]] certificate on [[DigitalOcean]] so that it works with [[revIgniter]] and Livecode."},{"slug":"livecode-http-server","title":"LiveCode HTTP Server","date":1497948265076,"synopsis":"Below [[Todd Geist]] shows a simple [[LiveCode HTTP Server]] modified to add a [[Router]] and [[Middleware]]. The architecture borrows from simple light servers like [[Ruby Sinatra]] or [[Node Express]]."},{"slug":"livecode-nginx-hosting","title":"Livecode Nginx Hosting","date":1497944303356,"synopsis":"Story made short : Appart the amazing Lua platform (preferably set as an Openresty one), well configured LC application’s servers still outperforms anything available around (Websphere, Tomcat, PHP5/7, Perl5, NodeJS, Go, Python, RoR,…) - [http://runtime-revolution.278305.n4.nabble.com/connecting-db-sqlserver-with-my-app-livecode-how-td4700842.html nabble.com]"},{"slug":"livecode-server","title":"Livecode Server","date":1502201172466,"synopsis":"[[Livecode]] can run both as a native server, or as a CGI under [[Apache]] (or [[Caddy]])."},{"slug":"livecode-server-on-digitalocean","title":"Livecode Server on DigitalOcean","date":1497959004718,"synopsis":"The following instructions are thanks to Mike Bonner and describe how to get [[Livecode Server]] running on [[DigitalOcean]]:"},{"slug":"livenode-server","title":"LiveNode Server","date":1427885163198,"synopsis":"The aim of this project is to create a [[LiveCode Server]] that interoperates efficiently with [[NodeJS]]."},{"slug":"local-farm","title":"Local Farm","date":1502996803631,"synopsis":"This kind of farm, which is also a [[Laptop Server]], is configured so one person owns all of the subdomains.  It is intended to be 1) a relatively easy way to [[start your own local wiki farm]], and 2) a helpful example of how to configure various components.  We share configurations for [[Docker]] and docker-compose to offer more detailed conversation."},{"slug":"local-wiki-farm-with-tls","title":"Local Wiki Farm With Tls","date":1501427860829,"synopsis":"This wiki innovates many of the conventions you know.  If this is your first time, please allow a little time to adjust.  It feels a little disorienting, but your patience with that discomfort will be richly rewarded."},{"slug":"loose-coupling-of-ipfs","title":"Loose Coupling of IPFS","date":1503048588646,"synopsis":"[[Loose coupling]] of IPFS with [[wiki]] can be achieved through using IPFS as an alternative distribution source for some or all of wiki. It can act as a form of backup of important assets, and as a way to access the information in a decentralised way."},{"slug":"media-package","title":"Media Package","date":1503002738549,"synopsis":"Packaging is an evolving discipline on Linux. OSX has it's own definitions of application and [[Document Package]]s. Ubuntu has [[Ubuntu Snappy]]."},{"slug":"merkle-dag","title":"Merkle DAG","date":1502991112190,"synopsis":"Every Merkle is a directed acyclic graph (DAG) because each node is accessed via its name. Each branch of Merkle is the hash of its local contents, naming children by their hash instead of their full contents. So after creation there is no way to edit a node. This prevents cycles (assuming there are no hash collisions), since one can not link the first created node to the last node to create the last reference."},{"slug":"microservice-architecture","title":"Microservice Architecture","date":1501495809445,"synopsis":"A microservice is an architectural style, in which complex applications are composed of small, independent processes communicating with each other using language-agnostic APIs - [https://en.wikipedia.org/wiki/Microservices wikipedia]"},{"slug":"microservices","title":"Microservices","date":1510673640830,"synopsis":"A [[microservice]] is an architectural style, in which complex applications are composed of small, independent processes communicating with each other using language-agnostic APIs - [https://en.wikipedia.org/wiki/Microservices wikipedia]"},{"slug":"microservices-visualized","title":"Microservices Visualized","date":1501836305754,"synopsis":"Ben Halpern's Practical Dev tweeted an enchanting video loop suggesting that it represented microservice architecture or pretty much any software ever. [https://twitter.com/ThePracticalDev/status/845285541528719360 tweet]"},{"slug":"multihash","title":"Multihash","date":1502384826277,"synopsis":"In computer science, a [[multimap]] (sometimes also multihash or multidict) is a generalization of a map or associative array abstract data type in which more than one value may be associated with and returned for a given key. Both map and multimap are particular cases of containers (for example, see C++ Standard Template Library containers). Often the multimap is implemented as a map with lists or sets as the map values - [https://en.wikipedia.org/wiki/Multimap wikipedia]"},{"slug":"multimap","title":"Multimap","date":1502379676614,"synopsis":"In computer science, a multimap (sometimes also multihash or multidict) is a generalization of a map or associative array abstract data type in which more than one value may be associated with and returned for a given key. Both map and multimap are particular cases of containers (for example, see C++ Standard Template Library containers). Often the multimap is implemented as a map with lists or sets as the map values - [https://en.wikipedia.org/wiki/Multimap wikipedia]"},{"slug":"neo4j","title":"Neo4J","date":1472668277362,"synopsis":"Neo4j is an open-source graph database implemented in Java and accessible from software written in other languages using the Cypher query language through a transactional HTTP endpoint. [https://en.wikipedia.org/wiki/Neo4j wikipedia] [http://neo4j.com/ site]"},{"slug":"nginx","title":"Nginx","date":1502531415495,"synopsis":"Nginx (pronounced \"engine x\") is a web server. It can act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache - [https://en.wikipedia.org/wiki/Nginx wikipedia]"},{"slug":"nginx-configuration","title":"Nginx Configuration","date":1502226596676,"synopsis":"First we need to change in our NGINX config file, open NGINX config file in your editor, i primary use [[nano]]:"},{"slug":"nginx-configuration-file","title":"Nginx Configuration File","date":1502531194035,"synopsis":"You can read about [[Nginx]] configuration on [[Ubuntu]] over at - [https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-16-04 digitalocean.com]"},{"slug":"nginx-virtual-hosts","title":"Nginx Virtual Hosts","date":1502531404871,"synopsis":"Here we look at how to configure [[Virtual Host]]s in [[Nginx]]."},{"slug":"node-wiki-server-logs","title":"Node Wiki Server Logs","date":1501771132166,"synopsis":"Assuming you are using the install from the [[One Line Installation Script]] then the logs will be in:"},{"slug":"nodejs-and-livecode","title":"NodeJS and LiveCode","date":1460900341774,"synopsis":"If you prefer light-weight server + the expressive power of [[LiveScript]], you may build your own server using [[Node.js]] and [[Express.js]] together with the SimpleCGI \"Middleware\", which forwards CGI requests to [[LiveCode Server]] - [http://www.rozek.mobi/LiveCode_Server/Node.js/index_scr_en.html rozek.mobi]"},{"slug":"oauth-20","title":"OAuth 2.0","date":1502219175149,"synopsis":"OAuth 2.0 is the next evolution of the OAuth protocol and is not backwards compatible with OAuth 1.0. OAuth 2.0 focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices - [https://en.wikipedia.org/wiki/Oauth#OAuth_2.0 wikipedia]"},{"slug":"one-big-wiki","title":"One Big Wiki","date":1503088742737,"synopsis":"Once wiki pages have been published to the [[permanent wiki]], pages are now immutable, and effectively reside in one huge global namespace."},{"slug":"one-wiki---many-sites","title":"One Wiki - Many Sites","date":1503086247640,"synopsis":"There can be many [[IPFS Folder Hash]]'s corresponding to different collections of pages. One for  the global name space (which may also be refered to by a mutable IPNS hash), and others for particular collections on pages sharing the same title/slug."},{"slug":"oneclick-orgs","title":"OneClick Orgs","date":1502880509661,"synopsis":"One Click Orgs is a social enterprise based in London UK that provides a range of innovative platforms for democratic membership organisations."},{"slug":"ontology-v-stigmergy","title":"Ontology v. Stigmergy","date":1501835929830,"synopsis":"By day I struggle to bring order to increasing complex and disorganized information while on nights and weekends I let [[Collaborative Link]]s do this work for me."},{"slug":"operating-system-level-virtualization","title":"Operating-system-level virtualization","date":1497359072869,"synopsis":"See - [[software containers]]"},{"slug":"origin-server","title":"Origin Server","date":1437492864837,"synopsis":"The server that delivers the client-side javascript that starts you browsing the federated wiki is called the Origin Server. It's special."},{"slug":"packagejson","title":"package.json","date":1448972361903,"synopsis":"This file is the configuration file that tells [[npm]] what to install and how. You can interactively browse an example package.json file over at [http://browsenpm.org/package.json browsenpm.org]"},{"slug":"paragraph-level-atomicity","title":"Paragraph Level Atomicity","date":1503048516233,"synopsis":"Presently a wiki page is constructed out of individual items (roughly speaking numbered paragraphs), each with an id, and a plugin that renders the json for display."},{"slug":"passportjs","title":"Passport.js","date":1502462519665,"synopsis":"Passport is authentication middleware for Node.js. Extremely flexible and modular, Passport can be unobtrusively dropped in to any Express-based web application. A comprehensive set of strategies support authentication using a username and password, Facebook, Twitter, and more -"},{"slug":"permanent-archive","title":"Permanent Archive","date":1511887626527,"synopsis":"The permanent archive is the immutable aspect of the [[permanent wiki]]. The aim is to create a publishing medium for wiki. It is designed to store immutable assets such as images, video and audio together with standard single page sites, and  finalise json data."},{"slug":"permanent-wiki","title":"Permanent Wiki","date":1496583776069,"synopsis":"The [[Permanent Wiki]] is a project that I have been working towards for several years now."},{"slug":"permanent-wiki-folder-structure","title":"Permanent Wiki Folder Structure","date":1503086167186,"synopsis":"A page entitled \"Cats\" is serving a file \"cats.json\" that is constructed out of atomic paragraphs. The file and folder structure can then be a series of IPFS link lists to assemblages of paragraph level items all within a global folder with an IPFS path of the form:"},{"slug":"pi-zero","title":"Pi Zero","date":1502537074233,"synopsis":"The Raspberry Pi Zero is half the size of a Model A+, with twice the utility. A tiny Raspberry Pi that’s affordable enough for any project!"},{"slug":"pi-zero-pirate-radio","title":"Pi Zero Pirate Radio","date":1502538743878,"synopsis":"This kit has everything you'll need, including a [[Pi Zero W]], our flash new [[pHAT BEAT DAC]] and stereo amp, a 5W speaker, and a beautifully retro acrylic enclosure to make it look the business. It'll take you around 30 minutes to assemble everything - [https://shop.pimoroni.com/products/pirate-radio-pi-zero-w-project-kit pimoroni.com]"},{"slug":"pi-zero-w","title":"Pi Zero W","date":1502538821485,"synopsis":"The Raspberry Pi Zero W extends the [[Pi Zero]] family and comes with added wireless LAN and Bluetooth connectivity - [https://www.raspberrypi.org/products/raspberry-pi-zero-w/ raspberrypi.org]"},{"slug":"polkadot","title":"Polkadot","date":1501590509700,"synopsis":"Present-day blockchain architectures all suffer from a number of issues not least practical means of extensi- bility and scalability - [https://polkadot.io/ polkadot.io]"},{"slug":"polyglot-software-development","title":"Polyglot Software Development","date":1502221898734,"synopsis":"We look to enable coders to programme in their language of choice, by providing a robust [[RESTful]] [[Microservice Architecture]]."},{"slug":"polyglot-webservice-hosting","title":"Polyglot Webservice Hosting","date":1438352148620,"synopsis":"A proposal to create hosting infrastructure that we give to students to code restful Web services in any programming language."},{"slug":"privacy-in-wiki","title":"Privacy in Wiki","date":1503058748728,"synopsis":"Wiki is by nature [[semi-private]]. However as we look to explore and extend wiki, we can look to add a fully public [[Published Wiki]] and a fully [[Private Wiki]]."},{"slug":"public-dns-overview","title":"Public DNS Overview","date":1497365702034,"synopsis":"In Containership when a cluster is created, the leaders and followers of the cluster automatically generate a public DNS record that dynamically updates as the cluster scales up an down."},{"slug":"public-load-balancing","title":"Public Load Balancing","date":1497365870855,"synopsis":"Containership's load balancing feature allows you to easily create load balancers that will work on any cloud provider."},{"slug":"publishing-to-the-permanent-wiki","title":"Publishing to the Permanent Wiki","date":1503086133690,"synopsis":"A single transporter could import an entire wiki site into the [[permanent wiki]]. This act of publishing a dynamic wiki is effectively taking a frozen snapshot of wiki in time - just like the [[Way back Machine]]."},{"slug":"raspberry-pi","title":"Raspberry Pi","date":1502536424223,"synopsis":"The Raspberry Pi is a credit card–sized single-board computer developed in the UK by the [[Raspberry Pi Foundation]] with the intention of promoting the teaching of basic computer science in schools - [https://en.wikipedia.org/wiki/Raspberry_Pi - wikipedia]"},{"slug":"recover-lost-assets","title":"Recover Lost Assets","date":1503001593692,"synopsis":"The philosophy here is based on the idea of [[Loose Coupling of IPFS]] to wiki. This can be acheived by using an [[archive file naming convention]], in which we can manually or programatically retrieve the IPFS [[multihash]] from the assets filename."},{"slug":"research-group-activity","title":"Research Group Activity","date":1502790396112,"synopsis":"Here we list views of the activity of groups and individual related to the current project. You may want to keep an eye on:"},{"slug":"restful","title":"RESTful","date":1493380270641,"synopsis":"A RESTful web service, is a [[Web Service]] that conforms to Representational State Transfer ([[REST]]) practices. See [[REST]]"},{"slug":"restful-fedwiki-server","title":"RESTful Fedwiki Server","date":1502465784263,"synopsis":"Here we make a start to document the creation of a minimal [[Fedwiki Server]] that provides a minimal but fully specified [[REST API]] for both existing clients and future mobile clients."},{"slug":"reusable-apis","title":"Reusable APIs","date":1502217137603,"synopsis":"REST API complexity is an important problem for companies building mobile applications. The tendency to build new APIs for each new project has negative consequences over time."},{"slug":"revigniter","title":"revIgniter","date":1502464529446,"synopsis":"RevIgniter is a toolkit for people who develop web projects using [[LiveCode]].revIgniter is modelled on [[CodeIgniter]] - [http://revigniter.com/userGuide/index.html revigniter.com]"},{"slug":"robotstxt","title":"robots.txt","date":1503058566025,"synopsis":"The robots exclusion standard, also known as the robots exclusion protocol or simply robots.txt, is a standard used by websites to communicate with [[Web Crawlers]] and other web robots - [https://en.wikipedia.org/wiki/Robots_exclusion_standard wikipedia]"},{"slug":"screenshot-on-a-raspberry-pi","title":"Screenshot on a Raspberry Pi","date":1437998616600,"synopsis":"This can be achieved with [[ImageMagick]] or [[scrot]]. Install by running the command:"},{"slug":"securuty-and-wiki-api","title":"Securuty and Wiki API","date":1500111482666,"synopsis":"Below are a collection of links imported from [[OneTab]]. You can view these links here - [https://www.one-tab.com/page/DnyWrhKBT9u5SLiKFbGLnQ one-tab.com]:"},{"slug":"semi-private","title":"Semi-private","date":1503037767450,"synopsis":"A text, or act is semi-private when it is effectively private, but open to casual, incidental, or word-of-mouth observation."},{"slug":"serverless-microservices","title":"Serverless Microservices","date":1501495577845,"synopsis":"Using [[microservices]] on AWS. Is this to wiki's advantage? Can we exploit it without becoming it? See [[Computational Habitat]]"},{"slug":"service-discovery","title":"Service Discovery","date":1497365409814,"synopsis":"Service discovery is one of the most important features of a functioning clustered environment."},{"slug":"serving-static-content","title":"Serving Static Content","date":1491992900796,"synopsis":"The first way to do this is to use the theme folder to serve files."},{"slug":"share-data-between-containers","title":"Share Data between Containers","date":1497995787876,"synopsis":"Docker is a popular containerization tool used to provide software applications with a filesystem that contains everything they need to run. Using Docker containers ensures that the software will behave the same way, regardless of where it is deployed, because its run-time environment is ruthlessly consistent - [https://www.digitalocean.com/community/tutorials/how-to-share-data-between-docker-containers digitalocean.com]"},{"slug":"snappy-package-manager","title":"Snappy (package manager)","date":1503002229760,"synopsis":"Snappy is a software deployment and package management system originally designed and built by Canonical for the Ubuntu phone operating system. The packages, called 'snaps' and the tool for using them 'snapd', work across a range of Linux distributions and allow therefore distro-agnostic upstream software deployment. The system is designed to work for phone, cloud, internet of things and desktop computing - [https://en.wikipedia.org/wiki/Snappy_(package_manager) wikipedia]"},{"slug":"software-containers","title":"Software Containers","date":1497359194093,"synopsis":"Software contianers (or [[Operating-system-level virtualization]]), is a computer virtualization method in which the kernel of an operating system allows the existence of multiple isolated user-space instances, instead of just one."},{"slug":"start-your-own-local-wiki-farm","title":"Start Your Own Local Wiki Farm","date":1502996576890,"synopsis":"We assume you are connected to the Net and already have some developer tools installed: git, docker, and docker-compose."},{"slug":"static-site-generation","title":"Static Site Generation","date":1497954226982,"synopsis":"People sometimes ask if static sites make sense for anything beyond a one-pager. This leaderboard highlights the top open source projects, in many different languages, that make static sites not only viable, but an attractive option for creating sophisticated websites!"},{"slug":"suggestion","title":"Suggestion","date":1459943716047,"synopsis":"Here we list suggestions and recommendations for his site:"},{"slug":"symlink-sites-available","title":"Symlink Sites Available","date":1502531690011,"synopsis":"For [[Nginx]] and [[Apache]] you often want to [[Symlink]] your sites-available configuration file to the corresponding file in the sites-enabled folder."},{"slug":"telegram","title":"Telegram","date":1501859209769,"synopsis":"[[Telegram]] stands out because of its strong encryption (making intelligence services unhappy). And FireChat works without cellular service: users’ phones communicate directly, which was a popular feature during recent protests in Hong Kong."},{"slug":"the-permanent-federation","title":"The Permanent Federation","date":1466755790382,"synopsis":"Thoughts on the future architecture of a permanent internet archive, and how we can start in small incremental steps."},{"slug":"thought-garden-activity","title":"Thought Garden Activity","date":1501864022703,"synopsis":"View all activity from [[Thought Garden Sites]] listed in the roster below:"},{"slug":"thought-garden-project-activity","title":"Thought Garden Project Activity","date":1502459461318,"synopsis":"View all activity from the [[Thought Garden Projects]] roster below:"},{"slug":"thought-soup","title":"Thought Soup","date":1429107224997,"synopsis":"We reflect on this happening using the metaphorical model of soup as in primordial soup or even stone soup."},{"slug":"trevors-activity","title":"Trevor's Activity","date":1501449413530,"synopsis":"Here we list Trevor's recent activity, and writing and research currently being focussed on."},{"slug":"versions-of-media-assets","title":"Versions of Media Assets","date":1503002034338,"synopsis":"Media of any sort (including text and json files), may be available in several formats. This is particularly relevant to media assets such as images of differing resolutions, or videos encoded with different codecs."},{"slug":"vertx","title":"Vert.x","date":1502221792886,"synopsis":"Eclipse Vert.x is a polyglot event-driven application framework that runs on the Java Virtual Machine - [https://en.wikipedia.org/wiki/Vert.x wikipedia]"},{"slug":"vinyl","title":"Vinyl","date":1503002702034,"synopsis":"Vinyl is a very simple metadata object that describes a file. When you think of a file, two attributes come to mind: path and contents. These are the main attributes on a Vinyl object - [https://github.com/gulpjs/vinyl github]"},{"slug":"virtual-file-system","title":"Virtual file system","date":1502985600881,"synopsis":"A virtual file system (VFS) or virtual filesystem switch is an abstraction layer on top of a more concrete file system. The purpose of a VFS is to allow client applications to access different types of concrete file systems in a uniform way."},{"slug":"volume-management-overview","title":"Volume Management Overview","date":1497365796543,"synopsis":"Containership managed volumes allow you to easily ensure the data follows your container around. When creating an application, you can specify container volumes under the settings page."},{"slug":"websocket-based-cgi","title":"Websocket Based CGI","date":1497948215408,"synopsis":"[[Websocket]] facilitates a WebSocket server/proxy. A command is executed when a new WebSocket connection is made and Caddy relays the client's connection to the command - [https://caddyserver.com/docs/websocket caddyserver.com]"},{"slug":"welcome-visitors","title":"Welcome Visitors","date":1518179134162,"synopsis":"On this site we explore strategies and options for creating and hosting a [[Permanent Wiki]]. We focus on  developing a [[Hosting Strategy]] for the [[Anthropological Archive]]."},{"slug":"wiki-as-git","title":"Wiki as Git","date":1463940814819,"synopsis":"Here we explore the idea of [[the federation]] as one big [[Git Repository]]. Exploring this notion can help us structure the knowledge represented in wiki, as well as plan for alternative architectures such as [[IPFS]]."},{"slug":"wiki-farm-under-docker","title":"Wiki Farm under Docker","date":1511892886079,"synopsis":"Here we build a [[wiki farm]] on [[Docker]] based on the work by Eric below:"},{"slug":"wiki-on-ipfs","title":"Wiki on IPFS","date":1468924557965,"synopsis":"We imagine how wiki client code might maintain its permanent state in IPFS. We suggest an integration with the journal as currently implemented to create [[Fedwiki on IPFS]]."},{"slug":"wiki-page-package","title":"Wiki Page Package","date":1503048549716,"synopsis":"A [[Wiki Page Package]] is a folder that contains an indexed list of IPFS [[multihash]] entries to individual paragraph items in IPFS."},{"slug":"wiki-publishing-process","title":"Wiki Publishing Process","date":1503041710276,"synopsis":"The concept of \"publishing\" in wiki is interesting. Currently wiki enables a unique mode of publishing which we can call [[Semi-private]]. You write for yourself, and do not wish or expect others to notice, while not objecting, or perhaps secretly hoping that others may at some time in the future notice - see [[writing with strangers]]."},{"slug":"writing-with-strangers","title":"Writing with Strangers","date":1429806208111,"synopsis":"Writing in the presence of rampant forking calls into question [[What it Means to Write]] and how to do it well."},{"slug":"zero-to-dev","title":"Zero to Dev","date":1497358579090,"synopsis":"Here we mean providing a minimal learning curve so that developers of any level can get up and running fast."}]