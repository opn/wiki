{
  "title": "Regular expression",
  "journal": [
    {
      "date": 1536146365582,
      "type": "create",
      "item": {
        "story": "",
        "title": "Regular expression"
      }
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0312dbbf556ad77e",
        "text": "[[LiveCode]] implements regular expressions compatible with the PCRE library. For detailed information about regular expression elements you can use with this function."
      },
      "after": "002d60c0-c5b5-4aec-bc35-13fd827bde67",
      "id": "0312dbbf556ad77e",
      "date": 1536146499734
    },
    {
      "type": "fork",
      "date": 1536146502969
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0ace9e49b50cd8ba",
        "text": "The special regular expression characters are: . \\ + * ? [ ^ ] $ ( ) { } = ! < > | : -"
      },
      "after": "0312dbbf556ad77e",
      "id": "0ace9e49b50cd8ba",
      "date": 1536146511777
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1885109ab5e48cd1",
        "text": "Note that / is not a special regular expression character.\n\n"
      },
      "after": "0ace9e49b50cd8ba",
      "id": "1885109ab5e48cd1",
      "date": 1536146514745
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "b0659742ed3311b0",
        "text": "i\tfor PCRE_CASELESS\nm\tfor PCRE_MULTILINE\ns\tfor PCRE_DOTALL\nx\tfor PCRE_EXTENDED\nU\tfor PCRE_UNGREEDY\nX\tfor PCRE_EXTRA"
      },
      "after": "1885109ab5e48cd1",
      "id": "b0659742ed3311b0",
      "date": 1536146518920
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2e6706c2f93d8ab2",
        "text": "For example, (?im) sets caseless, multiline matching. "
      },
      "after": "b0659742ed3311b0",
      "id": "2e6706c2f93d8ab2",
      "date": 1536146523057
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5e81bca0dc44f457",
        "text": "It is also possible to unset these options by preceding the letter with a hyphen, and a combined setting and unsetting such as (?im-sx), which sets PCRE_CASELESS and PCRE_MULTILINE while unsetting PCRE_DOTALL and PCRE_EXTENDED , is also permitted. If a letter appears both before and after the hyphen, the option is unset."
      },
      "after": "2e6706c2f93d8ab2",
      "id": "5e81bca0dc44f457",
      "date": 1536146525779
    },
    {
      "type": "edit",
      "id": "3d3642f1-b2ea-445d-b015-3a018b02e2a0",
      "item": {
        "type": "paragraph",
        "id": "3d3642f1-b2ea-445d-b015-3a018b02e2a0",
        "text": "# History"
      },
      "date": 1536146535867
    },
    {
      "type": "edit",
      "id": "3d3642f1-b2ea-445d-b015-3a018b02e2a0",
      "item": {
        "type": "markdown",
        "id": "3d3642f1-b2ea-445d-b015-3a018b02e2a0",
        "text": "# History"
      },
      "date": 1536146537212
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "7c58d53675e6e6cd",
        "text": "- PCRE manual at - [http://www.pcre.org/man.txt pcre.org] \n- Test expressions at - [http://www.regextester.com/pregsyntax.html regextester.com]\n- Library - [http://www.regexlib.com/Search.aspx?k=xml%20tag regexlib.com]\n"
      },
      "after": "578cc119-fe24-40a2-a955-ce25782e68ee",
      "id": "7c58d53675e6e6cd",
      "date": 1536146544240
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "82805bc569c198e7",
        "text": "- https://www.regextranslator.com/\n- http://rick.measham.id.au/paste/explain.pl"
      },
      "after": "7c58d53675e6e6cd",
      "id": "82805bc569c198e7",
      "date": 1536146547004
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "7f389a8837025b86",
        "text": "- https://github.com/aloisdg/awesome-regex\n- https://www.regular-expressions.info\n- JavaScript RegExp Reference - [https://www.w3schools.com/jsref/jsref_obj_regexp.asp w3schools]\n- Engine comparison - [https://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines wikipedia]"
      },
      "after": "82805bc569c198e7",
      "id": "7f389a8837025b86",
      "date": 1536146550708
    },
    {
      "type": "add",
      "id": "28f3749dab3de0d8",
      "item": {
        "type": "paragraph",
        "id": "28f3749dab3de0d8",
        "text": "The concept arose in the 1950s when the American mathematician Stephen Cole Kleene formalized the description of a regular language. The concept came into common use with Unix text-processing utilities. Since the 1980s, different syntaxes for writing regular expressions exist, one being the POSIX standard and another, widely used, being the Perl syntax."
      },
      "after": "3d3642f1-b2ea-445d-b015-3a018b02e2a0",
      "date": 1536146559259
    },
    {
      "type": "remove",
      "id": "002d60c0-c5b5-4aec-bc35-13fd827bde67",
      "date": 1536146560997
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "031057b3-8f44-40dc-9883-ac654595b062",
        "text": "<div style='padding: 12px; background:#eee; width:96%; align=centered;'>\n<a href='https://commons.wikimedia.org/wiki/File:Kleene.jpg' target='_blank'>\n<img style='display:block; margin:auto; width:100%;'\nsrc='https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Kleene.jpg/420px-Kleene.jpg'>\n</a>\n\n<p class=caption>\n[[Stephen Cole Kleene]], who helped found the concept\n- [https://commons.wikimedia.org/wiki/File:Kleene.jpg wikimedia.org]\n</p></div>"
      },
      "after": "28f3749dab3de0d8",
      "id": "031057b3-8f44-40dc-9883-ac654595b062",
      "date": 1536146566085
    },
    {
      "type": "add",
      "id": "6ea51c369d8a1e6f",
      "item": {
        "type": "paragraph",
        "id": "6ea51c369d8a1e6f",
        "text": "# Livecode"
      },
      "after": "5c7eadcf-c8b7-4b23-b37e-b3780c24168e",
      "date": 1536146584706
    },
    {
      "type": "edit",
      "id": "6ea51c369d8a1e6f",
      "item": {
        "type": "markdown",
        "id": "6ea51c369d8a1e6f",
        "text": "# Livecode"
      },
      "date": 1536146585819
    },
    {
      "type": "edit",
      "id": "0312dbbf556ad77e",
      "item": {
        "type": "paragraph",
        "id": "0312dbbf556ad77e",
        "text": "[[LiveCode]] implements regular expressions compatible with the [[PCRE]] library. For detailed information about regular expression elements you can use with this function."
      },
      "date": 1536146596009
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "444096f7ffbb33c2",
        "text": "- [[Perl Compatible Regular Expressions]]\n- [[PCRE]]\n- [[Regular expression]]"
      },
      "after": "c9e69bf8-20c1-40ec-8d4d-ae03f179be7e",
      "id": "444096f7ffbb33c2",
      "date": 1536146805611
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "2169298d-f19d-4916-8e77-50e7fb2500fa",
        "text": "- [[Comparison of regular expression engines]]"
      },
      "after": "444096f7ffbb33c2",
      "id": "2169298d-f19d-4916-8e77-50e7fb2500fa",
      "date": 1536146808083
    },
    {
      "type": "remove",
      "id": "2169298d-f19d-4916-8e77-50e7fb2500fa",
      "date": 1536146813225
    },
    {
      "type": "fork",
      "site": "c0de.academy",
      "date": 1536156105708
    },
    {
      "type": "fork",
      "site": "livecode.world",
      "date": 1536156120305
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "5c7eadcf-c8b7-4b23-b37e-b3780c24168e",
      "text": "A regular expression, regex or regexp (sometimes called a rational expression) is, in theoretical computer science and formal language theory, a sequence of characters that define a search pattern. Usually this pattern is then used by string searching algorithms for \"find\" or \"find and replace\" operations on strings, or for input validation. - [https://en.wikipedia.org/wiki/Regular_expression wikipedia]"
    },
    {
      "type": "markdown",
      "id": "6ea51c369d8a1e6f",
      "text": "# Livecode"
    },
    {
      "type": "paragraph",
      "id": "0312dbbf556ad77e",
      "text": "[[LiveCode]] implements regular expressions compatible with the [[PCRE]] library. For detailed information about regular expression elements you can use with this function."
    },
    {
      "type": "paragraph",
      "id": "0ace9e49b50cd8ba",
      "text": "The special regular expression characters are: . \\ + * ? [ ^ ] $ ( ) { } = ! < > | : -"
    },
    {
      "type": "paragraph",
      "id": "1885109ab5e48cd1",
      "text": "Note that / is not a special regular expression character.\n\n"
    },
    {
      "type": "code",
      "id": "b0659742ed3311b0",
      "text": "i\tfor PCRE_CASELESS\nm\tfor PCRE_MULTILINE\ns\tfor PCRE_DOTALL\nx\tfor PCRE_EXTENDED\nU\tfor PCRE_UNGREEDY\nX\tfor PCRE_EXTRA"
    },
    {
      "type": "paragraph",
      "id": "2e6706c2f93d8ab2",
      "text": "For example, (?im) sets caseless, multiline matching. "
    },
    {
      "type": "paragraph",
      "id": "5e81bca0dc44f457",
      "text": "It is also possible to unset these options by preceding the letter with a hyphen, and a combined setting and unsetting such as (?im-sx), which sets PCRE_CASELESS and PCRE_MULTILINE while unsetting PCRE_DOTALL and PCRE_EXTENDED , is also permitted. If a letter appears both before and after the hyphen, the option is unset."
    },
    {
      "type": "markdown",
      "id": "3d3642f1-b2ea-445d-b015-3a018b02e2a0",
      "text": "# History"
    },
    {
      "type": "paragraph",
      "id": "28f3749dab3de0d8",
      "text": "The concept arose in the 1950s when the American mathematician Stephen Cole Kleene formalized the description of a regular language. The concept came into common use with Unix text-processing utilities. Since the 1980s, different syntaxes for writing regular expressions exist, one being the POSIX standard and another, widely used, being the Perl syntax."
    },
    {
      "type": "html",
      "id": "031057b3-8f44-40dc-9883-ac654595b062",
      "text": "<div style='padding: 12px; background:#eee; width:96%; align=centered;'>\n<a href='https://commons.wikimedia.org/wiki/File:Kleene.jpg' target='_blank'>\n<img style='display:block; margin:auto; width:100%;'\nsrc='https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Kleene.jpg/420px-Kleene.jpg'>\n</a>\n\n<p class=caption>\n[[Stephen Cole Kleene]], who helped found the concept\n- [https://commons.wikimedia.org/wiki/File:Kleene.jpg wikimedia.org]\n</p></div>"
    },
    {
      "type": "paragraph",
      "id": "9edbbd82-8d06-4ae9-8349-b47f8afeb35c",
      "text": "Regular expressions are used in search engines, search and replace dialogs of word processors and text editors, in text processing utilities such as sed and AWK and in lexical analysis. Many programming languages provide regex capabilities, built-in or via libraries."
    },
    {
      "type": "markdown",
      "id": "1291c547-9237-46b8-a280-c795f2e6c759",
      "text": "# Sections"
    },
    {
      "type": "html",
      "id": "9af15c19-edf4-4801-b63e-50c748fbe949",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Patterns'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=1'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "5838f62e-89f6-4c3b-8ef6-8da8d925448c",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='History'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=2'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "dc99584e-570b-45d5-a399-1d8d2d799f3b",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Basic concepts'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=3'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "79ee12ec-12d0-4335-b9d2-e8e01481f870",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Formal language theory'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=4'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "45f485da-fbd6-4fd8-b1c4-9c2c543f82a3",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Syntax'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=8'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "ccd1b561-6e32-4c6e-a82e-b5010a1a7708",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Patterns for non-regular languages'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=17'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "61dee64a-4724-4551-b6e1-a5c71fca616b",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Implementations and running times'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=18'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "4171b646-d757-488b-958e-8cf623779f02",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Unicode'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=19'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "fc244a37-813b-42c5-bd7b-e2a30a68d944",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Uses'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=20'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "1ebf9f37-2ff5-4acc-b5de-b63ee816d9cd",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Examples'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=21'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "765132b7-47bb-4856-8631-c48d91ba93da",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Induction'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Regular expression&action=edit&section=22'>\n<input type=submit value=create></form>"
    },
    {
      "type": "markdown",
      "id": "c9e69bf8-20c1-40ec-8d4d-ae03f179be7e",
      "text": "# See also"
    },
    {
      "type": "markdown",
      "id": "444096f7ffbb33c2",
      "text": "- [[Perl Compatible Regular Expressions]]\n- [[PCRE]]\n- [[Regular expression]]"
    },
    {
      "type": "markdown",
      "id": "578cc119-fe24-40a2-a955-ce25782e68ee",
      "text": "- [[Comparison of regular expression engines]]\n- [[Extended Backus–Naur Form]]\n- [[Regular tree grammar]]\n- [[Matching wildcards]]\n- [[Thompson's construction algorithm]]"
    },
    {
      "type": "markdown",
      "id": "7c58d53675e6e6cd",
      "text": "- PCRE manual at - [http://www.pcre.org/man.txt pcre.org] \n- Test expressions at - [http://www.regextester.com/pregsyntax.html regextester.com]\n- Library - [http://www.regexlib.com/Search.aspx?k=xml%20tag regexlib.com]\n"
    },
    {
      "type": "markdown",
      "id": "82805bc569c198e7",
      "text": "- https://www.regextranslator.com/\n- http://rick.measham.id.au/paste/explain.pl"
    },
    {
      "type": "markdown",
      "id": "7f389a8837025b86",
      "text": "- https://github.com/aloisdg/awesome-regex\n- https://www.regular-expressions.info\n- JavaScript RegExp Reference - [https://www.w3schools.com/jsref/jsref_obj_regexp.asp w3schools]\n- Engine comparison - [https://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines wikipedia]"
    }
  ]
}