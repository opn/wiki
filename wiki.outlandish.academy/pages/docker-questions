{
  "title": "Docker Questions",
  "story": [
    {
      "type": "paragraph",
      "id": "ac242cb96930eb4a",
      "text": "Here ask a few basic questions we try to answer best we can:"
    },
    {
      "type": "code",
      "id": "f0b967611931777d",
      "text": "How do you deploy/ get software onto multiple platforms, running on different processors - Ubuntu on Digital Ocean, ARM 6, and ARM 7?"
    },
    {
      "type": "factory",
      "id": "914c3960252e03cb"
    },
    {
      "type": "code",
      "id": "dd41d214d2a8cc95",
      "text": "How do you update / auto-update a Docker deployment? Say you have 10 devices, some on Raspberry Pi's, others on other devices?"
    },
    {
      "type": "factory",
      "id": "a5d54949d38d227b"
    },
    {
      "type": "audio",
      "id": "88a82a9328e08e641bdf30a63aeca3eb",
      "text": "http://audioboom.com/boos/3426635-docker-questions.mp3\nSome dumb questions for Jon as I begin to explore Docker...."
    },
    {
      "type": "code",
      "id": "f76e41a9a4d10c40",
      "text": "Why is deploying software to a docker image easier than simply deploying to a consistent production environment?"
    },
    {
      "type": "paragraph",
      "id": "1a35ae37e876f142",
      "text": "But it is hard to keep a production environment consistent? Docker gives you the tools, and sufficient infrastructure to make this a pragmatic reality - [http://stackoverflow.com/questions/16047306/how-is-docker-io-different-from-a-normal-virtual-machine stackoverflow]"
    },
    {
      "type": "reference",
      "id": "08e6a2f7527e5b0c",
      "site": "c0de.academy",
      "slug": "system-administration-is-hard",
      "title": "System Administration is Hard",
      "text": "Here we list some of the things that make [[System Administration]] hard:"
    },
    {
      "type": "html",
      "id": "d7c6e0c9507566c2",
      "text": "With the Docker ecosystem you will never:\n<ul>\n<li> Need to move around Gigabytes on \"small changes\" (Thanks aufs and Registry)\n<li> You don't need to worry about losing performance by packaging applications into a Docker container on runtime\n<li> You don't need to worry about versions of that image\n<li> You will even often be able to reproduce complex production environments even on your linux laptop\n</ul>"
    },
    {
      "type": "code",
      "id": "4044c7b44ffa7900",
      "text": "What's the difference between a a fully virtualised system and Docker?"
    },
    {
      "type": "paragraph",
      "id": "5bc1828d40d2a3e2",
      "text": "A full virtualized system gets its own set of resources allocated to it, and does minimal sharing. You get more isolation, but it is much heavier (requires more resources).\n\nWith LXC you get less isolation, but they are more lightweight and require less resources. So you could easily run 1000's on a host, and it doesn't even blink.\n\nA full virtualized system usually takes minutes to start, LXC containers take seconds, and sometimes even less than a second."
    },
    {
      "type": "paragraph",
      "id": "c262f041c01a8e89",
      "text": "VirtualBox is software that creates a virtualized piece of hardware. Normally, an operating system runs on hardware, where communication between the hardware and operating system is done by moving data to addresses in memory and then issuing instructions that inform the hardware the data can be used (or that it needs to be read). VirtualBox (and other virtual machines) set up an environment where those memory locations are actually just regions of memory in the software, and the instructions are interpreted by the software instead of going directly to the underlying CPU. The practical upshot being that you run an operating system in VirtualBox, and, to the operating system, the VirtualBox application looks like a computer, hardware and all. It doesn't know it's actually running within another program.\n\nDocker, on the other hand, doesn't virtualize the hardware at all. Instead, what it does is creates a filesystem that looks like a regular Linux filesystem, and runs applications in a locked down environment where all the files and resources are inside that filesystem. Effectively, the application container doesn't emulate any hardware, the app still runs on the hardware, it just isolates the running app and allows you to run applications with software and libraries that might be specific to that application and not the host operating system at all. This means that there's almost no overhead in starting or stopping a docker application, they don't require pre-allocations of memory and disk space, etc. So they are very easy to set up and take down. Further, Docker containers don't waste any overhead in running software that pretends to be various hardware components in the system - it uses the hardware directly."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Docker Questions",
        "story": []
      },
      "date": 1438251768235
    },
    {
      "item": {
        "type": "factory",
        "id": "89ffa36f2a6da1d2"
      },
      "id": "89ffa36f2a6da1d2",
      "type": "add",
      "date": 1438251769683
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ac242cb96930eb4a",
        "text": "Here ask a few basic questions we try to answer best we can:"
      },
      "id": "ac242cb96930eb4a",
      "date": 1438251772492
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "f76e41a9a4d10c40",
        "text": "Why is deploying software to a docker image (if that's the right term) easier than simply deploying to a consistent production environment?"
      },
      "after": "ac242cb96930eb4a",
      "id": "f76e41a9a4d10c40",
      "date": 1438251776895
    },
    {
      "type": "remove",
      "id": "89ffa36f2a6da1d2",
      "date": 1438251779965
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1a35ae37e876f142",
        "text": "But it is hard to keep a production environment consistent? Docker gives you the tools, and sufficient infrastructure to make this a pragmatic reality - [http://stackoverflow.com/questions/16047306/how-is-docker-io-different-from-a-normal-virtual-machine stackoverflow]"
      },
      "after": "f76e41a9a4d10c40",
      "id": "1a35ae37e876f142",
      "date": 1438251813674
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "d7c6e0c9507566c2",
        "text": "With the Docker ecosystem you will never:\n<ul>\n<li> Need to move around Gigabytes on \"small changes\" (Thanks aufs and Registry)\n<li> You don't need to worry about losing performance by packaging applications into a Docker container on runtime\n<li> You don't need to worry about versions of that image\n<li> You will even often be able to reproduce complex production environments even on your linux laptop\n</ul>"
      },
      "after": "f76e41a9a4d10c40",
      "id": "d7c6e0c9507566c2",
      "date": 1438251822922
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "d7c6e0c9507566c2"
      ],
      "id": "1a35ae37e876f142",
      "date": 1438251826924
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "id": "08e6a2f7527e5b0c",
        "site": "c0de.academy",
        "slug": "system-administration-is-hard",
        "title": "System Administration is Hard",
        "text": "Here we list some of the things that make [[System Administration]] hard:"
      },
      "after": "d7c6e0c9507566c2",
      "id": "08e6a2f7527e5b0c",
      "date": 1438251835060
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2"
      ],
      "id": "08e6a2f7527e5b0c",
      "date": 1438251846578
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "4044c7b44ffa7900",
        "text": "What's the difference between a a fully virtualised system and Docker?"
      },
      "after": "d7c6e0c9507566c2",
      "id": "4044c7b44ffa7900",
      "date": 1438251849088
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5bc1828d40d2a3e2",
        "text": "A full virtualized system gets its own set of resources allocated to it, and does minimal sharing. You get more isolation, but it is much heavier (requires more resources).\n\nWith LXC you get less isolation, but they are more lightweight and require less resources. So you could easily run 1000's on a host, and it doesn't even blink.\n\nA full virtualized system usually takes minutes to start, LXC containers take seconds, and sometimes even less than a second."
      },
      "after": "4044c7b44ffa7900",
      "id": "5bc1828d40d2a3e2",
      "date": 1438251853258
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c262f041c01a8e89",
        "text": "VirtualBox is software that creates a virtualized piece of hardware. Normally, an operating system runs on hardware, where communication between the hardware and operating system is done by moving data to addresses in memory and then issuing instructions that inform the hardware the data can be used (or that it needs to be read). VirtualBox (and other virtual machines) set up an environment where those memory locations are actually just regions of memory in the software, and the instructions are interpreted by the software instead of going directly to the underlying CPU. The practical upshot being that you run an operating system in VirtualBox, and, to the operating system, the VirtualBox application looks like a computer, hardware and all. It doesn't know it's actually running within another program.\n\nDocker, on the other hand, doesn't virtualize the hardware at all. Instead, what it does is creates a filesystem that looks like a regular Linux filesystem, and runs applications in a locked down environment where all the files and resources are inside that filesystem. Effectively, the application container doesn't emulate any hardware, the app still runs on the hardware, it just isolates the running app and allows you to run applications with software and libraries that might be specific to that application and not the host operating system at all. This means that there's almost no overhead in starting or stopping a docker application, they don't require pre-allocations of memory and disk space, etc. So they are very easy to set up and take down. Further, Docker containers don't waste any overhead in running software that pretends to be various hardware components in the system - it uses the hardware directly."
      },
      "after": "5bc1828d40d2a3e2",
      "id": "c262f041c01a8e89",
      "date": 1438251859979
    },
    {
      "type": "edit",
      "id": "f76e41a9a4d10c40",
      "item": {
        "type": "code",
        "id": "f76e41a9a4d10c40",
        "text": "Why is deploying software to a docker image easier than simply deploying to a consistent production environment?"
      },
      "date": 1438252380536
    },
    {
      "type": "add",
      "item": {
        "type": "audio",
        "id": "88a82a9328e08e641bdf30a63aeca3eb",
        "text": "http://audioboom.com/boos/3426635-docker-questions.mp3\n."
      },
      "after": "ac242cb96930eb4a",
      "id": "88a82a9328e08e641bdf30a63aeca3eb",
      "date": 1438378656376
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "72294c4a32f0787dd67fc9c2b64fcb81",
        "text": "Some dumb questions for Amon as I begin to explore Docker...."
      },
      "after": "ac242cb96930eb4a",
      "id": "72294c4a32f0787dd67fc9c2b64fcb81",
      "date": 1438378664499
    },
    {
      "type": "remove",
      "id": "72294c4a32f0787dd67fc9c2b64fcb81",
      "date": 1438378668824
    },
    {
      "type": "edit",
      "id": "88a82a9328e08e641bdf30a63aeca3eb",
      "item": {
        "type": "audio",
        "id": "88a82a9328e08e641bdf30a63aeca3eb",
        "text": "http://audioboom.com/boos/3426635-docker-questions.mp3\nSome dumb questions for JOn as I begin to explore Docker...."
      },
      "date": 1438378678399
    },
    {
      "type": "fork",
      "date": 1438378686809
    },
    {
      "item": {
        "type": "factory",
        "id": "f0b967611931777d"
      },
      "id": "f0b967611931777d",
      "type": "add",
      "after": "c262f041c01a8e89",
      "date": 1438378713847
    },
    {
      "type": "edit",
      "id": "f0b967611931777d",
      "item": {
        "type": "code",
        "id": "f0b967611931777d",
        "text": "How do you deploy/ get software onto multiple platforms, running on different processors - Ubuntu on Digital Ocean, ARM 6, and ARM 7?"
      },
      "date": 1438378807621
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "88a82a9328e08e641bdf30a63aeca3eb",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2",
        "4044c7b44ffa7900",
        "5bc1828d40d2a3e2",
        "f0b967611931777d",
        "c262f041c01a8e89"
      ],
      "id": "f0b967611931777d",
      "date": 1438378816471
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "f0b967611931777d",
        "88a82a9328e08e641bdf30a63aeca3eb",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2",
        "4044c7b44ffa7900",
        "5bc1828d40d2a3e2",
        "c262f041c01a8e89"
      ],
      "id": "f0b967611931777d",
      "date": 1438378837458
    },
    {
      "item": {
        "type": "factory",
        "id": "dd41d214d2a8cc95"
      },
      "id": "dd41d214d2a8cc95",
      "type": "add",
      "after": "c262f041c01a8e89",
      "date": 1438378842820
    },
    {
      "type": "edit",
      "id": "dd41d214d2a8cc95",
      "item": {
        "type": "code",
        "id": "dd41d214d2a8cc95",
        "text": "How do you update / auto-update a Docker deployment? Say you have 10 devices, some on Raspberry Pi's, others on other devices?"
      },
      "date": 1438378908708
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "f0b967611931777d",
        "dd41d214d2a8cc95",
        "88a82a9328e08e641bdf30a63aeca3eb",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2",
        "4044c7b44ffa7900",
        "5bc1828d40d2a3e2",
        "c262f041c01a8e89"
      ],
      "id": "dd41d214d2a8cc95",
      "date": 1438378920259
    },
    {
      "type": "fork",
      "site": "c0de.academy"
    },
    {
      "item": {
        "type": "factory",
        "id": "914c3960252e03cb"
      },
      "id": "914c3960252e03cb",
      "type": "add",
      "after": "c262f041c01a8e89",
      "date": 1438684350721
    },
    {
      "type": "move",
      "order": [
        "914c3960252e03cb",
        "ac242cb96930eb4a",
        "f0b967611931777d",
        "dd41d214d2a8cc95",
        "88a82a9328e08e641bdf30a63aeca3eb",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2",
        "4044c7b44ffa7900",
        "5bc1828d40d2a3e2",
        "c262f041c01a8e89"
      ],
      "id": "914c3960252e03cb",
      "date": 1438684363281
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "914c3960252e03cb",
        "f0b967611931777d",
        "dd41d214d2a8cc95",
        "88a82a9328e08e641bdf30a63aeca3eb",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2",
        "4044c7b44ffa7900",
        "5bc1828d40d2a3e2",
        "c262f041c01a8e89"
      ],
      "id": "ac242cb96930eb4a",
      "date": 1438684367644
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "f0b967611931777d",
        "914c3960252e03cb",
        "dd41d214d2a8cc95",
        "88a82a9328e08e641bdf30a63aeca3eb",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2",
        "4044c7b44ffa7900",
        "5bc1828d40d2a3e2",
        "c262f041c01a8e89"
      ],
      "id": "f0b967611931777d",
      "date": 1438684369279
    },
    {
      "item": {
        "type": "factory",
        "id": "a5d54949d38d227b"
      },
      "id": "a5d54949d38d227b",
      "type": "add",
      "after": "c262f041c01a8e89",
      "date": 1438684379722
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "f0b967611931777d",
        "914c3960252e03cb",
        "a5d54949d38d227b",
        "dd41d214d2a8cc95",
        "88a82a9328e08e641bdf30a63aeca3eb",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2",
        "4044c7b44ffa7900",
        "5bc1828d40d2a3e2",
        "c262f041c01a8e89"
      ],
      "id": "a5d54949d38d227b",
      "date": 1438684388348
    },
    {
      "type": "move",
      "order": [
        "ac242cb96930eb4a",
        "f0b967611931777d",
        "914c3960252e03cb",
        "dd41d214d2a8cc95",
        "a5d54949d38d227b",
        "88a82a9328e08e641bdf30a63aeca3eb",
        "f76e41a9a4d10c40",
        "1a35ae37e876f142",
        "08e6a2f7527e5b0c",
        "d7c6e0c9507566c2",
        "4044c7b44ffa7900",
        "5bc1828d40d2a3e2",
        "c262f041c01a8e89"
      ],
      "id": "dd41d214d2a8cc95",
      "date": 1438684390352
    },
    {
      "type": "edit",
      "id": "88a82a9328e08e641bdf30a63aeca3eb",
      "item": {
        "type": "audio",
        "id": "88a82a9328e08e641bdf30a63aeca3eb",
        "text": "http://audioboom.com/boos/3426635-docker-questions.mp3\nSome dumb questions for Jon as I begin to explore Docker...."
      },
      "date": 1438684411813
    }
  ]
}