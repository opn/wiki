{"journal":[{"date":1358149513419,"item":{"title":"Episodes"},"type":"create"},{"date":1358149555255,"id":"849de531f842d2b3","item":{"id":"849de531f842d2b3","type":"factory"},"type":"add"},{"date":1358149567749,"id":"849de531f842d2b3","item":{"id":"849de531f842d2b3","text":"This pattern language describes a form of software development appropriate for an entrepreneurial organization. We assume the entrepreneur to work in a small team of bright and highly motivated people. We also assume time to market is highly valued as it often is where market windows close quickly and development dollars are in short supply. But, unlike some entrepreneurs, we also place high value in being able to get a second version out the door in a timely way; and a third version; and an Nth version; many years down the road. That is, we expect to be successful and have every intention of exploiting that success by continuing development for as long as our customer has desires.","type":"paragraph"},"type":"edit"},{"after":"849de531f842d2b3","date":1358149568259,"id":"d3a37fb2de94c46e","item":{"id":"d3a37fb2de94c46e","text":"\n\nThese patterns describe how to develop software. They could be fairly described as process patterns though they don't actually describe a process the way a methodology document might. Nor do they describe designs or organizations a other patterns have. Being patterns, they do describe things, things that solve problems that occur in the process. The things can be physical like a document or meeting. Or they can be mental like a commitment or state of mind.\n\nWe are particularly interested in the sequence of mental states that lead to important decisions. We call the sequence an episode. An episode builds toward a climax where the decision is made. Before the decision, we find facts, share opinions, build concentration and generally prepare for an event that cannot be known in advance. After the climax, the decision is known, but the episode continues. In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.\n\nWe won't be so naive as to suggest that the thoughts leading to a decision be written down. These thoughts are too complex and decisions too numerous for this to be practical. What we do suggest is that hints and pointers be placed in strategic locations so that preparation for subsequent episodes might go more smoothly. Of course they won't. That's because each episode to touch a given area does so with more expectation. We only hope to rise to the occasion. We will know that we have done so if our episodes remain well shaped: not too heavy on the front or the back, and not always getting longer.\n\nThere is an old saying that laments, there is never time to do it right but always time to do it over. We take this to be a fact of competitive life. We find ourselves unable under competitive pressure to make the kind of careful decisions we would like. These patterns tell what decisions can be made, in fact should be made, to maintain continuous forward motion through itterative development.\n\nOne does not have to compete to find these patterns useful. The developments they create are equally applicable for entrepreneurial groups within large organizations, or any other group that wants to develop code quickly and indefinitely.\n\nThe language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. Chart 1. presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"add"},{"date":1358149577739,"id":"d3a37fb2de94c46e","item":{"id":"d3a37fb2de94c46e","text":"\nThese patterns describe how to develop software. They could be fairly described as process patterns though they don't actually describe a process the way a methodology document might. Nor do they describe designs or organizations a other patterns have. Being patterns, they do describe things, things that solve problems that occur in the process. The things can be physical like a document or meeting. Or they can be mental like a commitment or state of mind.","type":"paragraph"},"type":"edit"},{"after":"d3a37fb2de94c46e","date":1358149578251,"id":"91f4d7295c1e446a","item":{"id":"91f4d7295c1e446a","text":"\n\nWe are particularly interested in the sequence of mental states that lead to important decisions. We call the sequence an episode. An episode builds toward a climax where the decision is made. Before the decision, we find facts, share opinions, build concentration and generally prepare for an event that cannot be known in advance. After the climax, the decision is known, but the episode continues. In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.\n\nWe won't be so naive as to suggest that the thoughts leading to a decision be written down. These thoughts are too complex and decisions too numerous for this to be practical. What we do suggest is that hints and pointers be placed in strategic locations so that preparation for subsequent episodes might go more smoothly. Of course they won't. That's because each episode to touch a given area does so with more expectation. We only hope to rise to the occasion. We will know that we have done so if our episodes remain well shaped: not too heavy on the front or the back, and not always getting longer.\n\nThere is an old saying that laments, there is never time to do it right but always time to do it over. We take this to be a fact of competitive life. We find ourselves unable under competitive pressure to make the kind of careful decisions we would like. These patterns tell what decisions can be made, in fact should be made, to maintain continuous forward motion through itterative development.\n\nOne does not have to compete to find these patterns useful. The developments they create are equally applicable for entrepreneurial groups within large organizations, or any other group that wants to develop code quickly and indefinitely.\n\nThe language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. Chart 1. presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"add"},{"date":1358149584242,"id":"91f4d7295c1e446a","item":{"id":"91f4d7295c1e446a","text":"\nWe are particularly interested in the sequence of mental states that lead to important decisions. We call the sequence an episode. An episode builds toward a climax where the decision is made. Before the decision, we find facts, share opinions, build concentration and generally prepare for an event that cannot be known in advance. After the climax, the decision is known, but the episode continues. In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.","type":"paragraph"},"type":"edit"},{"after":"91f4d7295c1e446a","date":1358149584753,"id":"e92a9d3df1465a27","item":{"id":"e92a9d3df1465a27","text":"\n\nWe won't be so naive as to suggest that the thoughts leading to a decision be written down. These thoughts are too complex and decisions too numerous for this to be practical. What we do suggest is that hints and pointers be placed in strategic locations so that preparation for subsequent episodes might go more smoothly. Of course they won't. That's because each episode to touch a given area does so with more expectation. We only hope to rise to the occasion. We will know that we have done so if our episodes remain well shaped: not too heavy on the front or the back, and not always getting longer.\n\nThere is an old saying that laments, there is never time to do it right but always time to do it over. We take this to be a fact of competitive life. We find ourselves unable under competitive pressure to make the kind of careful decisions we would like. These patterns tell what decisions can be made, in fact should be made, to maintain continuous forward motion through itterative development.\n\nOne does not have to compete to find these patterns useful. The developments they create are equally applicable for entrepreneurial groups within large organizations, or any other group that wants to develop code quickly and indefinitely.\n\nThe language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. Chart 1. presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"add"},{"date":1358149589299,"id":"e92a9d3df1465a27","item":{"id":"e92a9d3df1465a27","text":"\nWe won't be so naive as to suggest that the thoughts leading to a decision be written down. These thoughts are too complex and decisions too numerous for this to be practical. What we do suggest is that hints and pointers be placed in strategic locations so that preparation for subsequent episodes might go more smoothly. Of course they won't. That's because each episode to touch a given area does so with more expectation. We only hope to rise to the occasion. We will know that we have done so if our episodes remain well shaped: not too heavy on the front or the back, and not always getting longer.","type":"paragraph"},"type":"edit"},{"after":"e92a9d3df1465a27","date":1358149589807,"id":"bbbfaf8bed8b2f33","item":{"id":"bbbfaf8bed8b2f33","text":"\n\nThere is an old saying that laments, there is never time to do it right but always time to do it over. We take this to be a fact of competitive life. We find ourselves unable under competitive pressure to make the kind of careful decisions we would like. These patterns tell what decisions can be made, in fact should be made, to maintain continuous forward motion through itterative development.\n\nOne does not have to compete to find these patterns useful. The developments they create are equally applicable for entrepreneurial groups within large organizations, or any other group that wants to develop code quickly and indefinitely.\n\nThe language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. Chart 1. presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"add"},{"date":1358149593921,"id":"bbbfaf8bed8b2f33","item":{"id":"bbbfaf8bed8b2f33","text":"\nThere is an old saying that laments, there is never time to do it right but always time to do it over. We take this to be a fact of competitive life. We find ourselves unable under competitive pressure to make the kind of careful decisions we would like. These patterns tell what decisions can be made, in fact should be made, to maintain continuous forward motion through itterative development.","type":"paragraph"},"type":"edit"},{"after":"bbbfaf8bed8b2f33","date":1358149594427,"id":"7a84841ba7722429","item":{"id":"7a84841ba7722429","text":"\n\nOne does not have to compete to find these patterns useful. The developments they create are equally applicable for entrepreneurial groups within large organizations, or any other group that wants to develop code quickly and indefinitely.\n\nThe language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. Chart 1. presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"add"},{"date":1358149598091,"id":"7a84841ba7722429","item":{"id":"7a84841ba7722429","text":"\nOne does not have to compete to find these patterns useful. The developments they create are equally applicable for entrepreneurial groups within large organizations, or any other group that wants to develop code quickly and indefinitely.","type":"paragraph"},"type":"edit"},{"after":"7a84841ba7722429","date":1358149598597,"id":93e1900201386125,"item":{"id":93e1900201386125,"text":"\n\nThe language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. Chart 1. presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"add"},{"date":1358149604178,"id":93e1900201386125,"item":{"id":93e1900201386125,"text":"\nThe language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. Chart 1. presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"edit"},{"date":1358149648991,"id":"d3a37fb2de94c46e","item":{"id":"d3a37fb2de94c46e","text":"These patterns describe how to develop software. They could be fairly described as process patterns though they don't actually describe a process the way a methodology document might. Nor do they describe designs or organizations a other patterns have. Being patterns, they do describe things, things that solve problems that occur in the process. The things can be physical like a document or meeting. Or they can be mental like a commitment or state of mind.","type":"paragraph"},"type":"edit"},{"date":1358149654711,"id":"91f4d7295c1e446a","item":{"id":"91f4d7295c1e446a","text":"We are particularly interested in the sequence of mental states that lead to important decisions. We call the sequence an episode. An episode builds toward a climax where the decision is made. Before the decision, we find facts, share opinions, build concentration and generally prepare for an event that cannot be known in advance. After the climax, the decision is known, but the episode continues. In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.","type":"paragraph"},"type":"edit"},{"date":1358149720136,"id":93e1900201386125,"item":{"id":93e1900201386125,"text":"The language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. ","type":"paragraph"},"type":"edit"},{"after":93e1900201386125,"date":1358149720643,"id":"6a13a3f9052a6882","item":{"id":"6a13a3f9052a6882","text":"Chart 1. presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"add"},{"date":1358149732709,"id":"6a13a3f9052a6882","item":{"id":"6a13a3f9052a6882","text":"Chart 1 presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These aren't to be taken too seriously. Far more important are the relationships between patterns. Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"edit"},{"after":"849de531f842d2b3","date":1358149812602,"id":"f7b62eb0c62305c3","item":{"id":"f7b62eb0c62305c3","text":"","type":"paragraph"},"type":"add"},{"date":1358149835761,"id":"f7b62eb0c62305c3","item":{"id":"f7b62eb0c62305c3","text":"[[Episodes Pattern Language]]","type":"paragraph"},"type":"edit"},{"date":1358149851481,"id":"f7b62eb0c62305c3","item":{"id":"f7b62eb0c62305c3","text":"See [[Episodes Pattern Language]].","type":"paragraph"},"type":"edit"},{"after":"6a13a3f9052a6882","date":1358154624770,"id":"546a6e0ee1d80fec","item":{"id":"546a6e0ee1d80fec","text":"","type":"paragraph"},"type":"add"},{"date":1358154628166,"id":"546a6e0ee1d80fec","type":"remove"},{"date":1389425355162,"id":"849de531f842d2b3","item":{"id":"849de531f842d2b3","text":"This pattern language describes a form of software development appropriate for an entrepreneurial organization. ","type":"paragraph"},"type":"edit"},{"after":"849de531f842d2b3","date":1389425355671,"id":"4b3fcff4a5ca5b24","item":{"id":"4b3fcff4a5ca5b24","text":"We assume the entrepreneur to work in a small team of bright and highly motivated people. We also assume time to market is highly valued as it often is where market windows close quickly and development dollars are in short supply. But, unlike some entrepreneurs, we also place high value in being able to get a second version out the door in a timely way; and a third version; and an Nth version; many years down the road. That is, we expect to be successful and have every intention of exploiting that success by continuing development for as long as our customer has desires.","type":"paragraph"},"type":"add"},{"date":1389425378439,"id":"4b3fcff4a5ca5b24","item":{"id":"4b3fcff4a5ca5b24","text":"We assume the entrepreneur to work in a small team of bright and highly motivated people. We also assume time to market is highly valued as it often is where market windows close quickly and development dollars are in short supply. ","type":"paragraph"},"type":"edit"},{"after":"4b3fcff4a5ca5b24","date":1389425378947,"id":"40c8e11410f254cb","item":{"id":"40c8e11410f254cb","text":"But, unlike some entrepreneurs, we also place high value in being able to get a second version out the door in a timely way; and a third version; and an Nth version; many years down the road. That is, we expect to be successful and have every intention of exploiting that success by continuing development for as long as our customer has desires.","type":"paragraph"},"type":"add"},{"date":1389425403365,"id":"d3a37fb2de94c46e","item":{"id":"d3a37fb2de94c46e","text":"These patterns describe how to develop software. They could be fairly described as process patterns though they don't actually describe a process the way a methodology document might. ","type":"paragraph"},"type":"edit"},{"after":"d3a37fb2de94c46e","date":1389425403873,"id":"9f55e506e24efcd3","item":{"id":"9f55e506e24efcd3","text":"Nor do they describe designs or organizations a other patterns have. Being patterns, they do describe things, things that solve problems that occur in the process. The things can be physical like a document or meeting. Or they can be mental like a commitment or state of mind.","type":"paragraph"},"type":"add"},{"date":1389425482516,"id":"91f4d7295c1e446a","item":{"id":"91f4d7295c1e446a","text":"We are particularly interested in the sequence of mental states that lead to important decisions. We call the sequence an episode. ","type":"paragraph"},"type":"edit"},{"after":"91f4d7295c1e446a","date":1389425483024,"id":"1d5e55830d76b4fb","item":{"id":"1d5e55830d76b4fb","text":"An episode builds toward a climax where the decision is made. Before the decision, we find facts, share opinions, build concentration and generally prepare for an event that cannot be known in advance. After the climax, the decision is known, but the episode continues. In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.","type":"paragraph"},"type":"add"},{"date":1389425490110,"id":"1d5e55830d76b4fb","item":{"id":"1d5e55830d76b4fb","text":"An episode builds toward a climax where the decision is made. ","type":"paragraph"},"type":"edit"},{"after":"1d5e55830d76b4fb","date":1389425490619,"id":"fdd163cdc470aa36","item":{"id":"fdd163cdc470aa36","text":"Before the decision, we find facts, share opinions, build concentration and generally prepare for an event that cannot be known in advance. After the climax, the decision is known, but the episode continues. In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.","type":"paragraph"},"type":"add"},{"date":1389425496118,"id":"fdd163cdc470aa36","item":{"id":"fdd163cdc470aa36","text":"Before the decision, we find facts, share opinions, build concentration and generally prepare for an event that cannot be known in advance. ","type":"paragraph"},"type":"edit"},{"after":"fdd163cdc470aa36","date":1389425496627,"id":"b70889624be123cc","item":{"id":"b70889624be123cc","text":"After the climax, the decision is known, but the episode continues. In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.","type":"paragraph"},"type":"add"},{"date":1389425505016,"id":"b70889624be123cc","item":{"id":"b70889624be123cc","text":"After the climax, the decision is known, but the episode continues. ","type":"paragraph"},"type":"edit"},{"after":"b70889624be123cc","date":1389425505524,"id":"ccb41ddaa5607ad3","item":{"id":"ccb41ddaa5607ad3","text":"In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.","type":"paragraph"},"type":"add"},{"date":1389425510769,"id":"ccb41ddaa5607ad3","item":{"id":"ccb41ddaa5607ad3","text":"In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. ","type":"paragraph"},"type":"edit"},{"after":"ccb41ddaa5607ad3","date":1389425511277,"id":"958d7f937caf13ed","item":{"id":"958d7f937caf13ed","text":"We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.","type":"paragraph"},"type":"add"},{"date":1389425576645,"id":"f7b62eb0c62305c3","order":["849de531f842d2b3","f7b62eb0c62305c3","4b3fcff4a5ca5b24","40c8e11410f254cb","d3a37fb2de94c46e","9f55e506e24efcd3","91f4d7295c1e446a","1d5e55830d76b4fb","fdd163cdc470aa36","b70889624be123cc","ccb41ddaa5607ad3","958d7f937caf13ed","e92a9d3df1465a27","bbbfaf8bed8b2f33","7a84841ba7722429",93e1900201386125,"6a13a3f9052a6882"],"type":"move"},{"date":1389425589229,"id":"f7b62eb0c62305c3","item":{"id":"f7b62eb0c62305c3","text":"Proceed to [[Episodes Pattern Language]].","type":"paragraph"},"type":"edit"},{"date":1389425634609,"id":"f7b62eb0c62305c3","order":["849de531f842d2b3","4b3fcff4a5ca5b24","40c8e11410f254cb","d3a37fb2de94c46e","9f55e506e24efcd3","91f4d7295c1e446a","1d5e55830d76b4fb","fdd163cdc470aa36","b70889624be123cc","ccb41ddaa5607ad3","958d7f937caf13ed","e92a9d3df1465a27","bbbfaf8bed8b2f33","7a84841ba7722429",93e1900201386125,"f7b62eb0c62305c3","6a13a3f9052a6882"],"type":"move"},{"after":"849de531f842d2b3","date":1389425642847,"id":"cabd09642187169a","item":{"id":"cabd09642187169a","text":"","type":"paragraph"},"type":"add"},{"date":1389425667524,"id":"cabd09642187169a","item":{"id":"cabd09642187169a","text":"<h3> Entrepreneurs","type":"paragraph"},"type":"edit"},{"after":"40c8e11410f254cb","date":1389425694778,"id":"cd5d2b9bc03b9ead","item":{"id":"cd5d2b9bc03b9ead","text":"","type":"paragraph"},"type":"add"},{"date":1389425708141,"id":"cd5d2b9bc03b9ead","item":{"id":"cd5d2b9bc03b9ead","text":"<h3> Development","type":"paragraph"},"type":"edit"},{"date":1389425729147,"id":"91f4d7295c1e446a","item":{"id":"91f4d7295c1e446a","text":"<h3> Episodes","type":"paragraph"},"type":"edit"},{"after":"91f4d7295c1e446a","date":1389425729653,"id":"3599a1f7a2274760","item":{"id":"3599a1f7a2274760","text":"We are particularly interested in the sequence of mental states that lead to important decisions. We call the sequence an episode. ","type":"paragraph"},"type":"add"},{"after":"958d7f937caf13ed","date":1389425774162,"id":"78945e9fa87f47f3","item":{"id":"78945e9fa87f47f3","text":"","type":"paragraph"},"type":"add"},{"date":1389425831846,"id":"78945e9fa87f47f3","item":{"id":"78945e9fa87f47f3","text":"<h3> Agility","type":"paragraph"},"type":"edit"},{"date":1389425851764,"id":"bbbfaf8bed8b2f33","item":{"id":"bbbfaf8bed8b2f33","text":"There is an old saying that laments, there is never time to do it right but always time to do it over. We take this to be a fact of competitive life. We find ourselves unable under competitive pressure to make the kind of careful decisions we would like. These patterns tell what decisions can be made, in fact should be made, to maintain continuous forward motion through itterative development.","type":"paragraph"},"type":"edit"},{"after":"bbbfaf8bed8b2f33","date":1389425852272,"id":"20a8e2dca565a0af","item":{"id":"20a8e2dca565a0af","text":"","type":"paragraph"},"type":"add"},{"date":1389425861832,"id":"20a8e2dca565a0af","item":{"id":"20a8e2dca565a0af","text":"<h3> Aplicability","type":"paragraph"},"type":"edit"},{"date":1389425883501,"id":"f7b62eb0c62305c3","order":["849de531f842d2b3","f7b62eb0c62305c3","cabd09642187169a","4b3fcff4a5ca5b24","40c8e11410f254cb","cd5d2b9bc03b9ead","d3a37fb2de94c46e","9f55e506e24efcd3","91f4d7295c1e446a","3599a1f7a2274760","1d5e55830d76b4fb","fdd163cdc470aa36","b70889624be123cc","ccb41ddaa5607ad3","958d7f937caf13ed","78945e9fa87f47f3","e92a9d3df1465a27","bbbfaf8bed8b2f33","20a8e2dca565a0af","7a84841ba7722429",93e1900201386125,"6a13a3f9052a6882"],"type":"move"},{"after":93e1900201386125,"date":1389425908111,"id":"48a4509ed1bb92b1","item":{"id":"48a4509ed1bb92b1","text":"","type":"paragraph"},"type":"add"},{"date":1389425918800,"id":"48a4509ed1bb92b1","item":{"id":"48a4509ed1bb92b1","text":"<h3> Map","type":"paragraph"},"type":"edit"},{"date":1389425980871,"id":"6a13a3f9052a6882","item":{"id":"6a13a3f9052a6882","text":"Chart 1 presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These labels aren't to be taken too seriously. Far more important are the relationships between patterns. ","type":"paragraph"},"type":"edit"},{"after":"6a13a3f9052a6882","date":1389425981379,"id":"a566f3c48f3853e4","item":{"id":"a566f3c48f3853e4","text":"Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"},"type":"add"},{"after":"48a4509ed1bb92b1","date":1396809126909,"id":"3609fed6b4c77990","item":{"id":"3609fed6b4c77990","text":"","type":"paragraph"},"type":"add"},{"date":1396809138458,"id":"3609fed6b4c77990","item":{"id":"3609fed6b4c77990","text":"(currently unavailable)","type":"paragraph"},"type":"edit"},{"date":1420949751639,"id":"cabd09642187169a","item":{"id":"cabd09642187169a","text":"<h3> Entrepreneurs","type":"html"},"type":"edit"},{"date":1420949753529,"id":"cd5d2b9bc03b9ead","item":{"id":"cd5d2b9bc03b9ead","text":"<h3> Development","type":"html"},"type":"edit"},{"date":1420949756104,"id":"91f4d7295c1e446a","item":{"id":"91f4d7295c1e446a","text":"<h3> Episodes","type":"html"},"type":"edit"},{"date":1420949758681,"id":"78945e9fa87f47f3","item":{"id":"78945e9fa87f47f3","text":"<h3> Agility","type":"html"},"type":"edit"},{"date":1420949761331,"id":"20a8e2dca565a0af","item":{"id":"20a8e2dca565a0af","text":"<h3> Aplicability","type":"html"},"type":"edit"},{"date":1420949763193,"id":"48a4509ed1bb92b1","item":{"id":"48a4509ed1bb92b1","text":"<h3> Map","type":"html"},"type":"edit"},{"date":1424074468490,"site":"episodes.fed.wiki.org","type":"fork"}],"story":[{"id":"849de531f842d2b3","text":"This pattern language describes a form of software development appropriate for an entrepreneurial organization. ","type":"paragraph"},{"id":"f7b62eb0c62305c3","text":"Proceed to [[Episodes Pattern Language]].","type":"paragraph"},{"id":"cabd09642187169a","text":"<h3> Entrepreneurs","type":"html"},{"id":"4b3fcff4a5ca5b24","text":"We assume the entrepreneur to work in a small team of bright and highly motivated people. We also assume time to market is highly valued as it often is where market windows close quickly and development dollars are in short supply. ","type":"paragraph"},{"id":"40c8e11410f254cb","text":"But, unlike some entrepreneurs, we also place high value in being able to get a second version out the door in a timely way; and a third version; and an Nth version; many years down the road. That is, we expect to be successful and have every intention of exploiting that success by continuing development for as long as our customer has desires.","type":"paragraph"},{"id":"cd5d2b9bc03b9ead","text":"<h3> Development","type":"html"},{"id":"d3a37fb2de94c46e","text":"These patterns describe how to develop software. They could be fairly described as process patterns though they don't actually describe a process the way a methodology document might. ","type":"paragraph"},{"id":"9f55e506e24efcd3","text":"Nor do they describe designs or organizations a other patterns have. Being patterns, they do describe things, things that solve problems that occur in the process. The things can be physical like a document or meeting. Or they can be mental like a commitment or state of mind.","type":"paragraph"},{"id":"91f4d7295c1e446a","text":"<h3> Episodes","type":"html"},{"id":"3599a1f7a2274760","text":"We are particularly interested in the sequence of mental states that lead to important decisions. We call the sequence an episode. ","type":"paragraph"},{"id":"1d5e55830d76b4fb","text":"An episode builds toward a climax where the decision is made. ","type":"paragraph"},{"id":"fdd163cdc470aa36","text":"Before the decision, we find facts, share opinions, build concentration and generally prepare for an event that cannot be known in advance. ","type":"paragraph"},{"id":"b70889624be123cc","text":"After the climax, the decision is known, but the episode continues. ","type":"paragraph"},{"id":"ccb41ddaa5607ad3","text":"In the tail of an episode we act on our decision, promulgate it, follow it through to its consequences. ","type":"paragraph"},{"id":"958d7f937caf13ed","text":"We also leave a trace of the episode behind in its products. It is from this trace that we must often pick up the pieces of thought in some future episode.","type":"paragraph"},{"id":"78945e9fa87f47f3","text":"<h3> Agility","type":"html"},{"id":"e92a9d3df1465a27","text":"\nWe won't be so naive as to suggest that the thoughts leading to a decision be written down. These thoughts are too complex and decisions too numerous for this to be practical. What we do suggest is that hints and pointers be placed in strategic locations so that preparation for subsequent episodes might go more smoothly. Of course they won't. That's because each episode to touch a given area does so with more expectation. We only hope to rise to the occasion. We will know that we have done so if our episodes remain well shaped: not too heavy on the front or the back, and not always getting longer.","type":"paragraph"},{"id":"bbbfaf8bed8b2f33","text":"There is an old saying that laments, there is never time to do it right but always time to do it over. We take this to be a fact of competitive life. We find ourselves unable under competitive pressure to make the kind of careful decisions we would like. These patterns tell what decisions can be made, in fact should be made, to maintain continuous forward motion through itterative development.","type":"paragraph"},{"id":"20a8e2dca565a0af","text":"<h3> Aplicability","type":"html"},{"id":"7a84841ba7722429","text":"\nOne does not have to compete to find these patterns useful. The developments they create are equally applicable for entrepreneurial groups within large organizations, or any other group that wants to develop code quickly and indefinitely.","type":"paragraph"},{"id":93e1900201386125,"text":"The language addresses a wide variety of development issues. These have been organized into topic areas that could be described as top-down or chronological. Don't think that any real development is so structured or sequenced. In practice, these patterns will be applied over and over, in or out of order, sometimes by people whose job description says they should do so, and sometimes not. ","type":"paragraph"},{"id":"48a4509ed1bb92b1","text":"<h3> Map","type":"html"},{"id":"3609fed6b4c77990","text":"(currently unavailable)","type":"paragraph"},{"id":"6a13a3f9052a6882","text":"Chart 1 presents a map of the language with patterns positioned by task and agent. Here task implies the kind of work being done while agent implies the kind of person doing it. These labels aren't to be taken too seriously. Far more important are the relationships between patterns. ","type":"paragraph"},{"id":"a566f3c48f3853e4","text":"Patterns are related when one leads to another. This happens when the strong forces bearing on a pattern are brought into balance its a solution. Such resolutions of strong forces inevitably expose weaker forces to which attention should then be applied. It is this shift of attention that we capture in the relations between patterns. These relations turn a bunch of patterns into a pattern language; a system that, like a natural language, is employed without a great deal of conscious thought.","type":"paragraph"}],"title":"Episodes"}