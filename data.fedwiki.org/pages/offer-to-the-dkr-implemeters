{
  "title": "Offer to the DKR Implemeters",
  "story": [
    {
      "type": "paragraph",
      "id": "86ef823a86300b18",
      "text": "I've offered to combine work I've done and presented in the context of [[Explore DDD 2017]] to the Doug@50 implementers."
    },
    {
      "type": "pagefold",
      "id": "df8c70dad061fe74",
      "text": "email"
    },
    {
      "type": "paragraph",
      "id": "eb8e1a1f0e04cce2",
      "text": "I appreciate that among this group there are many interests and many systems built to explore those interests. In my day job I work with hundreds of engineers who are similarly inclined. I work with a small team of architects and support them with a “card catalog” of sorts which describes for them what each system knows about any subject and how that information is related. I’ve perfected this over the last year and have spoken about it in public.\n\nWe are a SaaS company which means we write and run software for our customers. I collect data about what we do from a wide variety of systems which in a perfect world would all talk together but don’t. Some systems offer unique views of the same things while other systems describe things that are only occasionally (but importantly) connected.\n\nI offer to provide the same service for all the implementers of systems related to [[Doug's Demo at 50]].\n\nIf all our pieces fit together then there is no need for my service. But my work could prove quite handy during the process of fitting things together and it it never quite comes together then my work could explain what each part does so one could move from one part to another.\n\nMy offer is similar to Frode’s except that I am all about what a system represents and not much interested in how it is represented. Most of our systems have web interfaces which, given some entity id of their design, can pull up the details about what they know. Let me make of an example to illustrate this distinction.\n\nSay two hypertext system will work quite differently but haven’t yet been loaded up with any information. I’m of no use here. But say both get loaded up with information about the history of computers. Imagine one system gets loaded up with detailed information about programming languages that mentions occasionally projects that use them while the other gets loaded up with project information and casually mentions what languages were used. This, maybe repeated twenty times over, is the kind of information I relate.\n\nI read from each system metadata of roughly the complexity of a site map. I model this for each system as nodes and relations in a graph database. I browse this by running graph queries (long joins) for interesting subgraphs which I tabulate or draw. I then collect those queries into its own database which for my work is running around 150 parameterized views. I offer a dozen starting points from which a query recommender will lead one from query to query crossing system boundaries without notice.\n\nIsn’t this just another version of google? Yes, if you squint it is. But because I am willing to “model” each of the systems I get good results without operating at the scale they require.\n\nHow to start? We could begin by asking who has working systems today and what domains of information might already be stored in those systems. I’ve done my work so far adding once system at a time and watching the queries get more powerful with each addition."
    },
    {
      "type": "pagefold",
      "id": "04d36e77b78beb9d",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "8b0adac502c41eed",
      "text": "Jack Park and I are exploring how we might model his TopicQuest metadata with some interesting part of federated wiki. I've extracted the 'statement' field out of some of his nodes. Do we have sites that complement any of these? [http://ward.asia.wiki.org/assets/doug/statements.txt file]"
    },
    {
      "type": "assets",
      "id": "eac2e8af3fa05f07",
      "text": "doug"
    },
    {
      "type": "paragraph",
      "id": "d40835cb4adef5f1",
      "text": "From slack chat: What would be the top three or four of these types to model first?\n\nBlogNodeType is always the main entry. So is BookmarkNodeType. This has a diagram of the data model [http://www.topicquests.net:3000/aboutconversations page]\n\nWe might see more Answers-AnswerNodeType than questions or arguments\n\nI am thinking, after reading your modeling notes, that what About Conversations paints is pretty much our datamodel, absent tags. [[Tips for Modeling]]\n\nPerfect.\nThis is public information? I can put my model on a public website? See [[TopicQuests Nodes]]\n\nyes!"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Offer to the DKR Implemeters",
        "story": []
      },
      "date": 1518375269738
    },
    {
      "item": {
        "type": "factory",
        "id": "86ef823a86300b18"
      },
      "id": "86ef823a86300b18",
      "type": "add",
      "date": 1518375304576
    },
    {
      "type": "edit",
      "id": "86ef823a86300b18",
      "item": {
        "type": "paragraph",
        "id": "86ef823a86300b18",
        "text": "I've offered to combine work I've done and presented in the context of [[Domain Driven Design]] to the Doug@50 implementers."
      },
      "date": 1518375384672
    },
    {
      "item": {
        "type": "factory",
        "id": "df8c70dad061fe74"
      },
      "id": "df8c70dad061fe74",
      "type": "add",
      "after": "86ef823a86300b18",
      "date": 1518375387236
    },
    {
      "type": "edit",
      "id": "df8c70dad061fe74",
      "item": {
        "type": "pagefold",
        "id": "df8c70dad061fe74",
        "text": "email"
      },
      "date": 1518375392311
    },
    {
      "item": {
        "type": "factory",
        "id": "eb8e1a1f0e04cce2"
      },
      "id": "eb8e1a1f0e04cce2",
      "type": "add",
      "after": "df8c70dad061fe74",
      "date": 1518375394196
    },
    {
      "type": "edit",
      "id": "eb8e1a1f0e04cce2",
      "item": {
        "type": "paragraph",
        "id": "eb8e1a1f0e04cce2",
        "text": "I appreciate that among this group there are many interests and many systems built to explore those interests. In my day job I work with hundreds of engineers who are similarly inclined. I work with a small team of architects and support them with a “card catalog” of sorts which describes for them what each system knows about any subject and how that information is related. I’ve perfected this over the last year and have spoken about it in public.\n\nWe are a SaaS company which means we write and run software for our customers. I collect data about what we do from a wide variety of systems which in a perfect world would all talk together but don’t. Some systems offer unique views of the same things while other systems describe things that are only occasionally (but importantly) connected.\n\nI offer to provide the same service for all the implementers of systems related to Doug@50.\n\nIf all our pieces fit together then there is no need for my service. But my work could prove quite handy during the process of fitting things together and it it never quite comes together then my work could explain what each part does so one could move from one part to another.\n\nMy offer is similar to Frode’s except that I am all about what a system represents and not much interested in how it is represented. Most of our systems have web interfaces which, given some entity id of their design, can pull up the details about what they know. Let me make of an example to illustrate this distinction.\n\nSay two hypertext system will work quite differently but haven’t yet been loaded up with any information. I’m of no use here. But say both get loaded up with information about the history of computers. Imagine one system gets loaded up with detailed information about programming languages that mentions occasionally projects that use them while the other gets loaded up with project information and casually mentions what languages were used. This, maybe repeated twenty times over, is the kind of information I relate.\n\nI read from each system metadata of roughly the complexity of a site map. I model this for each system as nodes and relations in a graph database. I browse this by running graph queries (long joins) for interesting subgraphs which I tabulate or draw. I then collect those queries into its own database which for my work is running around 150 parameterized views. I offer a dozen starting points from which a query recommender will lead one from query to query crossing system boundaries without notice.\n\nIsn’t this just another version of google? Yes, if you squint it is. But because I am willing to “model” each of the systems I get good results without operating at the scale they require.\n\nHow to start? We could begin by asking who has working systems today and what domains of information might already be stored in those systems. I’ve done my work so far adding once system at a time and watching the queries get more powerful with each addition."
      },
      "date": 1518375422355
    },
    {
      "type": "fork",
      "date": 1518375459754
    },
    {
      "type": "edit",
      "id": "eb8e1a1f0e04cce2",
      "item": {
        "type": "paragraph",
        "id": "eb8e1a1f0e04cce2",
        "text": "I appreciate that among this group there are many interests and many systems built to explore those interests. In my day job I work with hundreds of engineers who are similarly inclined. I work with a small team of architects and support them with a “card catalog” of sorts which describes for them what each system knows about any subject and how that information is related. I’ve perfected this over the last year and have spoken about it in public.\n\nWe are a SaaS company which means we write and run software for our customers. I collect data about what we do from a wide variety of systems which in a perfect world would all talk together but don’t. Some systems offer unique views of the same things while other systems describe things that are only occasionally (but importantly) connected.\n\nI offer to provide the same service for all the implementers of systems related to [[Doug's Demo at 50]].\n\nIf all our pieces fit together then there is no need for my service. But my work could prove quite handy during the process of fitting things together and it it never quite comes together then my work could explain what each part does so one could move from one part to another.\n\nMy offer is similar to Frode’s except that I am all about what a system represents and not much interested in how it is represented. Most of our systems have web interfaces which, given some entity id of their design, can pull up the details about what they know. Let me make of an example to illustrate this distinction.\n\nSay two hypertext system will work quite differently but haven’t yet been loaded up with any information. I’m of no use here. But say both get loaded up with information about the history of computers. Imagine one system gets loaded up with detailed information about programming languages that mentions occasionally projects that use them while the other gets loaded up with project information and casually mentions what languages were used. This, maybe repeated twenty times over, is the kind of information I relate.\n\nI read from each system metadata of roughly the complexity of a site map. I model this for each system as nodes and relations in a graph database. I browse this by running graph queries (long joins) for interesting subgraphs which I tabulate or draw. I then collect those queries into its own database which for my work is running around 150 parameterized views. I offer a dozen starting points from which a query recommender will lead one from query to query crossing system boundaries without notice.\n\nIsn’t this just another version of google? Yes, if you squint it is. But because I am willing to “model” each of the systems I get good results without operating at the scale they require.\n\nHow to start? We could begin by asking who has working systems today and what domains of information might already be stored in those systems. I’ve done my work so far adding once system at a time and watching the queries get more powerful with each addition."
      },
      "date": 1518375522924
    },
    {
      "type": "edit",
      "id": "86ef823a86300b18",
      "item": {
        "type": "paragraph",
        "id": "86ef823a86300b18",
        "text": "I've offered to combine work I've done and presented in the context of [[Explore DDD 2017] to the Doug@50 implementers."
      },
      "date": 1518375580310
    },
    {
      "type": "edit",
      "id": "86ef823a86300b18",
      "item": {
        "type": "paragraph",
        "id": "86ef823a86300b18",
        "text": "I've offered to combine work I've done and presented in the context of [[Explore DDD 2017]] to the Doug@50 implementers."
      },
      "date": 1518375587792
    },
    {
      "type": "fork",
      "date": 1518376657926
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1519082984188
    },
    {
      "item": {
        "type": "factory",
        "id": "04d36e77b78beb9d"
      },
      "id": "04d36e77b78beb9d",
      "type": "add",
      "after": "eb8e1a1f0e04cce2",
      "date": 1519083000138
    },
    {
      "type": "edit",
      "id": "04d36e77b78beb9d",
      "item": {
        "type": "pagefold",
        "id": "04d36e77b78beb9d",
        "text": "."
      },
      "date": 1519083006754
    },
    {
      "item": {
        "type": "factory",
        "id": "8b0adac502c41eed"
      },
      "id": "8b0adac502c41eed",
      "type": "add",
      "after": "04d36e77b78beb9d",
      "date": 1519083023210
    },
    {
      "type": "edit",
      "id": "8b0adac502c41eed",
      "item": {
        "type": "paragraph",
        "id": "8b0adac502c41eed",
        "text": "Jack Park and I are exploring how we might model his TopicQuest metadata with some interesting part of federated wiki. I've extracted the 'statement' field out of some of his nodes. Do we have sites that complement any of these?"
      },
      "date": 1519083156463
    },
    {
      "item": {
        "type": "factory",
        "id": "eac2e8af3fa05f07"
      },
      "id": "eac2e8af3fa05f07",
      "type": "add",
      "after": "8b0adac502c41eed",
      "date": 1519083163681
    },
    {
      "type": "edit",
      "id": "eac2e8af3fa05f07",
      "item": {
        "type": "assets",
        "id": "eac2e8af3fa05f07",
        "text": "doug"
      },
      "date": 1519083174366
    },
    {
      "type": "edit",
      "id": "8b0adac502c41eed",
      "item": {
        "type": "paragraph",
        "id": "8b0adac502c41eed",
        "text": "Jack Park and I are exploring how we might model his TopicQuest metadata with some interesting part of federated wiki. I've extracted the 'statement' field out of some of his nodes. Do we have sites that complement any of these? [http://ward.asia.wiki.org/assets/doug/statements.txt file]"
      },
      "date": 1519083301714
    },
    {
      "item": {
        "type": "factory",
        "id": "d40835cb4adef5f1"
      },
      "id": "d40835cb4adef5f1",
      "type": "add",
      "after": "eac2e8af3fa05f07",
      "date": 1519083728209
    },
    {
      "type": "edit",
      "id": "d40835cb4adef5f1",
      "item": {
        "type": "paragraph",
        "id": "d40835cb4adef5f1",
        "text": "From slack chat:"
      },
      "date": 1519083739918
    },
    {
      "type": "edit",
      "id": "d40835cb4adef5f1",
      "item": {
        "type": "paragraph",
        "id": "d40835cb4adef5f1",
        "text": "From slack chat: What would be the top three or four of these types to model first?\n\nBlogNodeType is always the main entry. So is BookmarkNodeType. This has a diagram of the data model [http://www.topicquests.net:3000/aboutconversations page]\n\nWe might see more Answers-AnswerNodeType than questions or arguments\n\nI am thinking, after reading your modeling notes, that what aboutconversations paints is pretty much our datamodel, absent tags.\n\nPerfect.\nThis is public information? I can put my model on a public website?\n\nyes!"
      },
      "date": 1519083770326
    },
    {
      "type": "edit",
      "id": "d40835cb4adef5f1",
      "item": {
        "type": "paragraph",
        "id": "d40835cb4adef5f1",
        "text": "From slack chat: What would be the top three or four of these types to model first?\n\nBlogNodeType is always the main entry. So is BookmarkNodeType. This has a diagram of the data model [http://www.topicquests.net:3000/aboutconversations page]\n\nWe might see more Answers-AnswerNodeType than questions or arguments\n\nI am thinking, after reading your modeling notes, that what aboutconversations paints is pretty much our datamodel, absent tags. [[Tips for Modeling]]\n\nPerfect.\nThis is public information? I can put my model on a public website?\n\nyes!"
      },
      "date": 1519083822765
    },
    {
      "type": "edit",
      "id": "d40835cb4adef5f1",
      "item": {
        "type": "paragraph",
        "id": "d40835cb4adef5f1",
        "text": "From slack chat: What would be the top three or four of these types to model first?\n\nBlogNodeType is always the main entry. So is BookmarkNodeType. This has a diagram of the data model [http://www.topicquests.net:3000/aboutconversations page]\n\nWe might see more Answers-AnswerNodeType than questions or arguments\n\nI am thinking, after reading your modeling notes, that what aboutconversations paints is pretty much our datamodel, absent tags. [[Tips for Modeling]]\n\nPerfect.\nThis is public information? I can put my model on a public website? See [[TopicQuests Nodes]]\n\nyes!"
      },
      "date": 1519106710012
    },
    {
      "type": "edit",
      "id": "d40835cb4adef5f1",
      "item": {
        "type": "paragraph",
        "id": "d40835cb4adef5f1",
        "text": "From slack chat: What would be the top three or four of these types to model first?\n\nBlogNodeType is always the main entry. So is BookmarkNodeType. This has a diagram of the data model [http://www.topicquests.net:3000/aboutconversations page]\n\nWe might see more Answers-AnswerNodeType than questions or arguments\n\nI am thinking, after reading your modeling notes, that what about conversations paints is pretty much our datamodel, absent tags. [[Tips for Modeling]]\n\nPerfect.\nThis is public information? I can put my model on a public website? See [[TopicQuests Nodes]]\n\nyes!"
      },
      "date": 1519106738371
    },
    {
      "type": "edit",
      "id": "d40835cb4adef5f1",
      "item": {
        "type": "paragraph",
        "id": "d40835cb4adef5f1",
        "text": "From slack chat: What would be the top three or four of these types to model first?\n\nBlogNodeType is always the main entry. So is BookmarkNodeType. This has a diagram of the data model [http://www.topicquests.net:3000/aboutconversations page]\n\nWe might see more Answers-AnswerNodeType than questions or arguments\n\nI am thinking, after reading your modeling notes, that what About Conversations paints is pretty much our datamodel, absent tags. [[Tips for Modeling]]\n\nPerfect.\nThis is public information? I can put my model on a public website? See [[TopicQuests Nodes]]\n\nyes!"
      },
      "date": 1519106777643
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1519603889393
    },
    {
      "type": "fork",
      "site": "context.asia.wiki.org",
      "date": 1519756959557
    }
  ]
}