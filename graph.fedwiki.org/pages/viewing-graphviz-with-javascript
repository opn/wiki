{
  "journal": [
    {
      "date": 1422304013788,
      "type": "create",
      "item": {
        "story": "",
        "title": "Viewing Graphviz with Javascript"
      }
    },
    {
      "type": "add",
      "id": "811a900c92839a5d",
      "item": {
        "type": "factory",
        "id": "811a900c92839a5d"
      },
      "date": 1422304015235
    },
    {
      "id": "811a900c92839a5d",
      "type": "edit",
      "item": {
        "text": "I'd like to view a graphviz file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter.",
        "type": "paragraph",
        "id": "811a900c92839a5d"
      },
      "date": 1422304094483
    },
    {
      "type": "add",
      "id": "1a6be0b38bce9217",
      "item": {
        "type": "factory",
        "id": "1a6be0b38bce9217"
      },
      "after": "811a900c92839a5d",
      "date": 1422304096798
    },
    {
      "id": "1a6be0b38bce9217",
      "type": "edit",
      "item": {
        "text": "Canviz is a JavaScript library for drawing Graphviz graphs to a web browser canvas. More technically, Canviz is a JavaScript xdot renderer. It works in most modern browsers.",
        "type": "paragraph",
        "id": "1a6be0b38bce9217"
      },
      "date": 1422304123844
    },
    {
      "id": "1a6be0b38bce9217",
      "type": "edit",
      "item": {
        "text": "Canviz is a JavaScript library for drawing Graphviz graphs to a web browser canvas. More technically, Canviz is a JavaScript xdot renderer. It works in most modern browsers. [https://code.google.com/p/canviz/ google code]",
        "type": "paragraph",
        "id": "1a6be0b38bce9217"
      },
      "date": 1422304152890
    },
    {
      "id": "f5bbd2a54d88ab35",
      "type": "add",
      "item": {
        "text": "Viz.js ports graphviz to js with emscripten. This sounds like the wrong way to go but they do have nice examples. [https://github.com/mdaines/viz.js/ github]",
        "type": "paragraph",
        "id": "f5bbd2a54d88ab35"
      },
      "after": "1a6be0b38bce9217",
      "date": 1422304741597
    },
    {
      "id": "811a900c92839a5d",
      "type": "edit",
      "item": {
        "text": "I'd like to view a graphviz file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter. What's with svg anyway?",
        "type": "paragraph",
        "id": "811a900c92839a5d"
      },
      "date": 1422508768775
    },
    {
      "type": "add",
      "id": "b398b0c08d8d96ae",
      "item": {
        "type": "factory",
        "id": "b398b0c08d8d96ae"
      },
      "after": "f5bbd2a54d88ab35",
      "date": 1422508806577
    },
    {
      "id": "b398b0c08d8d96ae",
      "type": "edit",
      "item": {
        "text": "Canvg [https://github.com/gabelerner/canvg github]",
        "type": "paragraph",
        "id": "b398b0c08d8d96ae"
      },
      "date": 1422508825354
    },
    {
      "id": "b398b0c08d8d96ae",
      "type": "edit",
      "item": {
        "text": "Canvg is a SVG parser and renderer. It takes a URL to a SVG file or the text of an SVG file, parses it in JavaScript, and renders the result on a Canvas element. The rendering speed of the examples is about as fast as native SVG. [https://github.com/gabelerner/canvg github]",
        "type": "paragraph",
        "id": "b398b0c08d8d96ae"
      },
      "date": 1422508862393
    },
    {
      "site": "ward.asia.wiki.org",
      "type": "fork",
      "date": 1437948637705
    },
    {
      "type": "add",
      "id": "46f9222300f0bee0",
      "item": {
        "type": "factory",
        "id": "46f9222300f0bee0"
      },
      "after": "b398b0c08d8d96ae",
      "date": 1437948773080
    },
    {
      "id": "46f9222300f0bee0",
      "type": "edit",
      "item": {
        "type": "reference",
        "id": "46f9222300f0bee0",
        "slug": "svg",
        "site": "future.fedwiki.org",
        "title": "SVG",
        "text": "Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation - [https://en.wikipedia.org/wiki/Scalable_Vector_Graphics#Functionality wikipedia]"
      },
      "date": 1437948775517
    },
    {
      "order": [
        "811a900c92839a5d",
        "46f9222300f0bee0",
        "1a6be0b38bce9217",
        "f5bbd2a54d88ab35",
        "b398b0c08d8d96ae"
      ],
      "id": "46f9222300f0bee0",
      "type": "move",
      "date": 1437948778510
    },
    {
      "id": "811a900c92839a5d",
      "type": "edit",
      "item": {
        "text": "I'd like to view a graphviz file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter. ",
        "type": "paragraph",
        "id": "811a900c92839a5d"
      },
      "date": 1437948800622
    },
    {
      "id": "922cb3cf0d44c664",
      "type": "add",
      "item": {
        "text": "What's with svg anyway? It's not an SVG issue. SVG's work fine. They embed and display fine. We have built in interactivity. We can author and enhance them with powerful manual and scripting tools. They are great.",
        "type": "paragraph",
        "id": "922cb3cf0d44c664"
      },
      "after": "811a900c92839a5d",
      "date": 1437948863757
    },
    {
      "id": "ff6e66588f828316",
      "type": "add",
      "item": {
        "text": "The isseu is with how the wiki-client is trapping events and not allowing the browser to handle the url linkes.",
        "type": "paragraph",
        "id": "ff6e66588f828316"
      },
      "after": "922cb3cf0d44c664",
      "date": 1437948887114
    },
    {
      "id": "1a6be0b38bce9217",
      "type": "edit",
      "item": {
        "text": "Older Solutions",
        "type": "paragraph",
        "id": "1a6be0b38bce9217"
      },
      "date": 1437948904070
    },
    {
      "id": "e5d76116df831ea0",
      "type": "add",
      "item": {
        "text": "Canviz is a JavaScript library for drawing Graphviz graphs to a web browser canvas. More technically, Canviz is a JavaScript xdot renderer. It works in most modern browsers. [https://code.google.com/p/canviz/ google code]",
        "type": "paragraph",
        "id": "e5d76116df831ea0"
      },
      "after": "1a6be0b38bce9217",
      "date": 1437948905388
    },
    {
      "id": "1a6be0b38bce9217",
      "type": "edit",
      "item": {
        "text": "<H3>Older Solutions",
        "type": "paragraph",
        "id": "1a6be0b38bce9217"
      },
      "date": 1437948910178
    },
    {
      "id": "1a6be0b38bce9217",
      "type": "edit",
      "item": {
        "text": "<H3>Older Solutions",
        "type": "html",
        "id": "1a6be0b38bce9217"
      },
      "date": 1437948911497
    },
    {
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "e5d76116df831ea0",
        "f5bbd2a54d88ab35",
        "1a6be0b38bce9217",
        "b398b0c08d8d96ae"
      ],
      "id": "1a6be0b38bce9217",
      "type": "move",
      "date": 1437948913514
    },
    {
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "f5bbd2a54d88ab35",
        "e5d76116df831ea0",
        "1a6be0b38bce9217",
        "b398b0c08d8d96ae"
      ],
      "id": "e5d76116df831ea0",
      "type": "move",
      "date": 1437948915452
    },
    {
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "f5bbd2a54d88ab35",
        "1a6be0b38bce9217",
        "e5d76116df831ea0",
        "b398b0c08d8d96ae"
      ],
      "id": "e5d76116df831ea0",
      "type": "move",
      "date": 1437948926417
    },
    {
      "id": "f5bbd2a54d88ab35",
      "type": "edit",
      "item": {
        "text": "<H3>Older Solutions",
        "type": "paragraph",
        "id": "f5bbd2a54d88ab35"
      },
      "date": 1437948936024
    },
    {
      "id": "5f42a7333dc007ee",
      "type": "add",
      "item": {
        "text": "Viz.js ports graphviz to js with emscripten. This sounds like the wrong way to go but they do have nice examples. [https://github.com/mdaines/viz.js/ github]",
        "type": "paragraph",
        "id": "5f42a7333dc007ee"
      },
      "after": "f5bbd2a54d88ab35",
      "date": 1437948936996
    },
    {
      "id": "f5bbd2a54d88ab35",
      "type": "edit",
      "item": {
        "text": "<H3>Older Solutions",
        "type": "html",
        "id": "f5bbd2a54d88ab35"
      },
      "date": 1437948938734
    },
    {
      "id": "f5bbd2a54d88ab35",
      "type": "edit",
      "item": {
        "text": "<H3>Experimental Solutions",
        "type": "html",
        "id": "f5bbd2a54d88ab35"
      },
      "date": 1437948945514
    },
    {
      "id": "837e7246b6eb20dd",
      "type": "add",
      "item": {
        "text": "<H3>Client Side Solution",
        "type": "paragraph",
        "id": "837e7246b6eb20dd"
      },
      "after": "ff6e66588f828316",
      "date": 1437948973930
    },
    {
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "837e7246b6eb20dd",
        "f5bbd2a54d88ab35",
        "5f42a7333dc007ee",
        "1a6be0b38bce9217",
        "e5d76116df831ea0",
        "b398b0c08d8d96ae"
      ],
      "id": "837e7246b6eb20dd",
      "type": "move",
      "date": 1437948976734
    },
    {
      "id": "badc89d5f4c3d71e",
      "type": "add",
      "item": {
        "text": "A client side solution has some advantages. you can tweak the code in the browser. You can quickly role simple diagrams. It suffers from the lack of ability to bring the image into a nice drawing package and edit it to make it clean and simple before returning it to the wiki. That is what [[SVG]]'s are good for.",
        "type": "paragraph",
        "id": "badc89d5f4c3d71e"
      },
      "after": "837e7246b6eb20dd",
      "date": 1437949077612
    },
    {
      "id": "837e7246b6eb20dd",
      "type": "edit",
      "item": {
        "text": "<H3>Client Side Solution",
        "type": "html",
        "id": "837e7246b6eb20dd"
      },
      "date": 1437949079107
    },
    {
      "id": "badc89d5f4c3d71e",
      "type": "edit",
      "item": {
        "text": "A client side solution has some advantages. you can tweak the code in the browser. You can quickly role simple diagrams. ",
        "type": "paragraph",
        "id": "badc89d5f4c3d71e"
      },
      "date": 1437949085139
    },
    {
      "id": "3b394fb4353482f0",
      "type": "add",
      "item": {
        "text": "Client side solutions suffers from the lack of ability to bring the image into a nice drawing package and edit it to make it clean and simple before returning it to the wiki. That is what [[SVG]]'s are good for.",
        "type": "paragraph",
        "id": "3b394fb4353482f0"
      },
      "after": "badc89d5f4c3d71e",
      "date": 1437949096754
    },
    {
      "id": "a6cd84e835999196",
      "type": "add",
      "item": {
        "text": "However the best current javascript client side implementation is:",
        "type": "paragraph",
        "id": "a6cd84e835999196"
      },
      "after": "3b394fb4353482f0",
      "date": 1437949112694
    },
    {
      "type": "add",
      "id": "7a8802a13b70c67b",
      "item": {
        "type": "factory",
        "id": "7a8802a13b70c67b"
      },
      "after": "b398b0c08d8d96ae",
      "date": 1437950197460
    },
    {
      "id": "7a8802a13b70c67b",
      "type": "edit",
      "item": {
        "type": "reference",
        "id": "7a8802a13b70c67b",
        "slug": "javascript-graph-libraries",
        "site": "david.viral.academy",
        "title": "Javascript Graph Libraries",
        "text": "Dagre (Directed graph renderer for Javascript) - [https://github.com/cpettitt/dagre github.com]"
      },
      "date": 1437950200711
    },
    {
      "id": "a6cd84e835999196",
      "type": "edit",
      "item": {
        "text": "However the best current javascript client side implementation is: [[Dagre]]",
        "type": "paragraph",
        "id": "a6cd84e835999196"
      },
      "date": 1437950438821
    },
    {
      "type": "add",
      "id": "b1ae5094ed9967c7",
      "item": {
        "type": "factory",
        "id": "b1ae5094ed9967c7"
      },
      "after": "7a8802a13b70c67b",
      "date": 1437950858949
    },
    {
      "order": [
        "811a900c92839a5d",
        "922cb3cf0d44c664",
        "ff6e66588f828316",
        "46f9222300f0bee0",
        "837e7246b6eb20dd",
        "badc89d5f4c3d71e",
        "3b394fb4353482f0",
        "a6cd84e835999196",
        "b1ae5094ed9967c7",
        "f5bbd2a54d88ab35",
        "5f42a7333dc007ee",
        "1a6be0b38bce9217",
        "e5d76116df831ea0",
        "b398b0c08d8d96ae",
        "7a8802a13b70c67b"
      ],
      "id": "b1ae5094ed9967c7",
      "type": "move",
      "date": 1437950862136
    },
    {
      "id": "b1ae5094ed9967c7",
      "type": "edit",
      "item": {
        "type": "reference",
        "id": "b1ae5094ed9967c7",
        "slug": "dagre",
        "site": "future.fedwiki.org",
        "title": "Dagre",
        "text": "Dagre is a JavaScript library that makes it easy to lay out directed graphs on the client-side."
      },
      "date": 1437950864310
    },
    {
      "id": "a6cd84e835999196",
      "type": "edit",
      "item": {
        "text": "However the best current javascript client side implementation is:",
        "type": "paragraph",
        "id": "a6cd84e835999196"
      },
      "date": 1437950869549
    },
    {
      "type": "add",
      "id": "8a82f7f05ced1cd7",
      "item": {
        "type": "factory",
        "id": "8a82f7f05ced1cd7"
      },
      "after": "7a8802a13b70c67b",
      "date": 1455626217995
    },
    {
      "id": "8a82f7f05ced1cd7",
      "type": "edit",
      "item": {
        "type": "reference",
        "id": "8a82f7f05ced1cd7",
        "slug": "graphoid-service",
        "site": "c0de.academy",
        "title": "Graphoid Service",
        "text": "Graphoid (git repo) is a node.js service that converts a graph definition into a static PNG image using the same Vega library code that runs in advanced browsers. The service is available on the Wikimedia cluster at graphoid.wikimedia.org - [https://www.mediawiki.org/wiki/Extension:Graph#Graphoid_service mediawiki.org]"
      },
      "date": 1455626245151
    },
    {
      "type": "add",
      "id": "6fdf378a73662fe7",
      "item": {
        "type": "factory",
        "id": "6fdf378a73662fe7"
      },
      "after": "8a82f7f05ced1cd7",
      "date": 1455626246787
    },
    {
      "id": "6fdf378a73662fe7",
      "type": "edit",
      "item": {
        "type": "reference",
        "id": "6fdf378a73662fe7",
        "slug": "vega",
        "site": "c0de.academy",
        "title": "Vega",
        "text": "Vega is a visualization grammar, a declarative format for creating, saving and sharing interactive visualization designs. "
      },
      "date": 1455626252576
    },
    {
      "site": "future.fedwiki.org",
      "type": "fork",
      "date": 1511883275035
    },
    {
      "id": "811a900c92839a5d",
      "type": "edit",
      "item": {
        "text": "I'd like to view a [[graphviz]] file in wiki. I can process it on the server but it seems difficult to get any rich format to display on the screen. Of course I want links so this makes image formats a non-starter. ",
        "type": "paragraph",
        "id": "811a900c92839a5d"
      },
      "date": 1511883372658
    },
    {
      "site": "map.progressivedemocracy.cc",
      "type": "fork",
      "date": 1512128977682
    },
    {
      "id": "ff6e66588f828316",
      "type": "edit",
      "item": {
        "text": "The issue is with how the wiki-client is trapping events and not allowing the browser to handle the url linkes.",
        "type": "paragraph",
        "id": "ff6e66588f828316"
      },
      "date": 1512128992878
    },
    {
      "id": "20084356ff8e69ce",
      "type": "add",
      "item": {
        "text": "<blockquote><b style='color:red'>Issue: </b>\n\nor you can copy this formatting here (as it looks prettier :)\n<p>",
        "type": "html",
        "id": "20084356ff8e69ce"
      },
      "after": "922cb3cf0d44c664",
      "date": 1512129024542
    },
    {
      "date": 1512129033422,
      "id": "ff6e66588f828316",
      "type": "remove"
    },
    {
      "id": "20084356ff8e69ce",
      "type": "edit",
      "item": {
        "text": "<blockquote><b style='color:red'>Issue: </b>\n\nthe issue is with how the wiki-client is trapping events and not allowing the browser to handle the url linkes.\n<p>",
        "type": "html",
        "id": "20084356ff8e69ce"
      },
      "date": 1512129038343
    },
    {
      "id": "a3cffb61d101d38b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a3cffb61d101d38b",
        "text": "Viz.js ports graphviz to js with emscripten. This sounds like the wrong way to go but they do have nice examples. [https://github.com/mdaines/viz.js/ github]",
        "alias": "f5bbd2a54d88ab35"
      },
      "after": "b398b0c08d8d96ae",
      "date": 1512129083844
    },
    {
      "id": "ab3d0ddd8bd9c6f6",
      "type": "add",
      "item": {
        "text": "The SVG Files Loader for SystemJS and JSPM plugin allows to handle SVG files with DOM as specified by the W3C . However If you simply want to display a SVG image in your html document, the official image plugin could be a better choice for you. [https://github.com/vuzonp/systemjs-plugin-svg github]",
        "type": "paragraph",
        "id": "ab3d0ddd8bd9c6f6"
      },
      "after": "f5bbd2a54d88ab35",
      "date": 1512129100472
    },
    {
      "id": "d2b6616cb8626850",
      "type": "add",
      "item": {
        "text": "See [[Graphviz in El Dorado]]",
        "type": "paragraph",
        "id": "d2b6616cb8626850"
      },
      "after": "a3cffb61d101d38b",
      "date": 1512323204794
    },
    {
      "id": "be1c189512f72ed2",
      "type": "add",
      "item": {
        "text": "Scalable Vector Graphics ([[SVG]]) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation - [https://en.wikipedia.org/wiki/Scalable_Vector_Graphics#Functionality wikipedia]",
        "type": "paragraph",
        "id": "be1c189512f72ed2"
      },
      "after": "20084356ff8e69ce",
      "date": 1512323241091
    },
    {
      "date": 1512323244331,
      "id": "46f9222300f0bee0",
      "type": "remove"
    },
    {
      "id": "6784ee238554a940",
      "type": "add",
      "item": {
        "text": "Dagre is a JavaScript library that makes it easy to lay out directed graphs on the client-side - [https://github.com/cpettitt/dagre/wiki github]",
        "type": "paragraph",
        "id": "6784ee238554a940"
      },
      "after": "a6cd84e835999196",
      "date": 1512323287439
    },
    {
      "date": 1512323291158,
      "id": "b1ae5094ed9967c7",
      "type": "remove"
    },
    {
      "type": "fork",
      "date": 1512323382924
    },
    {
      "type": "remove",
      "id": "d2b6616cb8626850",
      "date": 1512323391554
    },
    {
      "type": "edit",
      "id": "13362b06-5621-460d-81df-cf57bcb49db4",
      "item": {
        "type": "markdown",
        "id": "13362b06-5621-460d-81df-cf57bcb49db4",
        "text": "# See also\n\n- [[Javascript Graph Libraries]]\n- [[Graphoid Service]]\n- [[Vega]]\n- [[Graphviz in El Dorado]]"
      },
      "date": 1512323397132
    },
    {
      "type": "edit",
      "id": "5f42a7333dc007ee",
      "item": {
        "text": "Viz.js ports graphviz to js with [[emscripten]]. This sounds like the wrong way to go but they do have nice examples - [https://github.com/mdaines/viz.js/ github]",
        "id": "5f42a7333dc007ee",
        "type": "paragraph"
      },
      "date": 1512323469102
    },
    {
      "type": "edit",
      "id": "5f42a7333dc007ee",
      "item": {
        "text": "[[Viz.js]] ports graphviz to js with [[emscripten]]. This sounds like the wrong way to go but they do have nice examples - [https://github.com/mdaines/viz.js/ github]",
        "id": "5f42a7333dc007ee",
        "type": "paragraph"
      },
      "date": 1512323478021
    },
    {
      "type": "edit",
      "id": "b398b0c08d8d96ae",
      "item": {
        "text": "Canvg is a SVG parser and renderer. It takes a URL to a SVG file or the text of an SVG file, parses it in JavaScript, and renders the result on a Canvas element. The rendering speed of the examples is about as fast as native SVG -\n [https://github.com/gabelerner/canvg github]",
        "id": "b398b0c08d8d96ae",
        "type": "paragraph"
      },
      "date": 1512323498639
    },
    {
      "type": "remove",
      "id": "a3cffb61d101d38b",
      "date": 1512323505663
    },
    {
      "type": "edit",
      "id": "811a900c92839a5d",
      "item": {
        "text": "There are basically two ways to view interactive graphs exported from [[graphviz]]. The first is to use the [[svg]] export and then use javascript to make these svgs interactive, and the second is to take the raw [[Graphviz dot format]] and use a library to create interactive graphs directly.",
        "id": "811a900c92839a5d",
        "type": "paragraph"
      },
      "date": 1512325511296
    },
    {
      "type": "edit",
      "id": "922cb3cf0d44c664",
      "item": {
        "text": "# Displaying interactive SVG's in wiki",
        "id": "922cb3cf0d44c664",
        "type": "paragraph"
      },
      "date": 1512325524243
    },
    {
      "type": "edit",
      "id": "922cb3cf0d44c664",
      "item": {
        "text": "# Displaying interactive SVG's in wiki",
        "id": "922cb3cf0d44c664",
        "type": "markdown"
      },
      "date": 1512325525859
    },
    {
      "type": "add",
      "id": "592b49b6dd4c395a",
      "item": {
        "type": "paragraph",
        "id": "592b49b6dd4c395a",
        "text": "What's with svg anyway? It's not an SVG issue. SVG's work fine. They embed and display fine. We have built in interactivity. We can author and enhance them with powerful manual and scripting tools. They are great."
      },
      "after": "922cb3cf0d44c664",
      "date": 1512325528393
    },
    {
      "type": "edit",
      "id": "592b49b6dd4c395a",
      "item": {
        "type": "paragraph",
        "id": "592b49b6dd4c395a",
        "text": "What's with svg anyway? Well it's not an SVG issue. SVG's work fine. They embed and display fine. We have built in interactivity. We can author and enhance them with powerful manual and scripting tools. They are great."
      },
      "date": 1512325554153
    },
    {
      "type": "edit",
      "id": "be1c189512f72ed2",
      "item": {
        "text": "To get around this issue we either have to allow [[svg-links]] in the [[About HTML Plugin], or we create a plugin to allow javascript to do it's magic on the svg.",
        "id": "be1c189512f72ed2",
        "type": "paragraph"
      },
      "date": 1512325652317
    },
    {
      "type": "add",
      "id": "cd9bf37e055f9876",
      "item": {
        "type": "paragraph",
        "id": "cd9bf37e055f9876",
        "text": "Our aim here is to make [[Pretty Wiki]], and well functional. [[Wiki Relationships]] are inherently graph-like. [[Liquid Democracy]] needs a writing medium that suits the creative diversity that [[federated wiki] engenders. "
      },
      "after": "811a900c92839a5d",
      "date": 1512325808684
    },
    {
      "type": "edit",
      "id": "811a900c92839a5d",
      "item": {
        "text": "There are basically two ways to view interactive graphs exported from [[graphviz]]. ",
        "id": "811a900c92839a5d",
        "type": "paragraph"
      },
      "date": 1512325818336
    },
    {
      "type": "add",
      "id": "433f41e61d2d5462",
      "item": {
        "type": "paragraph",
        "id": "433f41e61d2d5462",
        "text": "The first is to use the [[svg]] export and then use javascript to make these svgs interactive, and the second is to take the raw [[Graphviz dot format]] and use a library to create interactive graphs directly."
      },
      "after": "811a900c92839a5d",
      "date": 1512325818700
    },
    {
      "type": "edit",
      "id": "cd9bf37e055f9876",
      "item": {
        "type": "paragraph",
        "id": "cd9bf37e055f9876",
        "text": "Our aim here is to make [[Pretty Wiki]], and well functional. [[Wiki Relationships]] are inherently graph-like. [[Liquid Democracy]] needs a writing medium that suits the creative diversity that [[federated wiki]] engenders. "
      },
      "date": 1512325831493
    },
    {
      "type": "add",
      "id": "1beec55a99a1eb81",
      "item": {
        "type": "paragraph",
        "id": "1beec55a99a1eb81",
        "text": "# MountainStorm"
      },
      "after": "be1c189512f72ed2",
      "date": 1512325876201
    },
    {
      "type": "add",
      "id": "9db36c08a6057f57",
      "item": {
        "type": "paragraph",
        "id": "9db36c08a6057f57",
        "text": "asdf"
      },
      "after": "1beec55a99a1eb81",
      "date": 1512325878030
    },
    {
      "type": "edit",
      "id": "1beec55a99a1eb81",
      "item": {
        "type": "markdown",
        "id": "1beec55a99a1eb81",
        "text": "# MountainStorm"
      },
      "date": 1512325879797
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "7ad5c70b-f449-434c-9487-27fd273e2fa2",
        "text": "<img src='https://www.google.com/s2/favicons?domain=github.com' style='vertical-align: middle; width:16px; height:16px' /><a target=_blank style='vertical-align: middle; padding-left: 10px; padding-right: 12px; text-decoration: none;' href='https://github.com/mountainstorm/jquery.graphviz.svg/'>mountainstorm/jquery.graphviz.svg: jquery plugin to make graphviz svg charts responsive</a>"
      },
      "after": "1beec55a99a1eb81",
      "id": "7ad5c70b-f449-434c-9487-27fd273e2fa2",
      "date": 1512325883488
    },
    {
      "type": "add",
      "id": "333c02e0dca5d096",
      "item": {
        "type": "paragraph",
        "id": "333c02e0dca5d096",
        "text": "# Javascript and SVG"
      },
      "after": "be1c189512f72ed2",
      "date": 1512325934906
    },
    {
      "type": "add",
      "id": "ad7ea53eeadd4b4b",
      "item": {
        "type": "paragraph",
        "id": "ad7ea53eeadd4b4b",
        "text": "The best solution I have found so far is to use "
      },
      "after": "333c02e0dca5d096",
      "date": 1512325952420
    },
    {
      "type": "edit",
      "id": "333c02e0dca5d096",
      "item": {
        "type": "markdown",
        "id": "333c02e0dca5d096",
        "text": "# Javascript and SVG"
      },
      "date": 1512325978622
    },
    {
      "type": "add",
      "id": "f0769a8e7f24c8e2",
      "item": {
        "type": "paragraph",
        "id": "f0769a8e7f24c8e2",
        "text": "[[MountainStorm]] is a jQuery plugin to make Graphviz [[SVG]] output more interactive and easier to navigate. Makes it easy to have features like:\n\n- Highlight nodes/edges\n- Zoom in/out\n- Graph navigation - select linked nodes\n- Fancy UI tooltips; bootstrap supported out the box\n- Move things forward/back in the graph\nHave a look at the demo -\n [https://cdn.rawgit.com/mountainstorm/jquery.graphviz.svg/master/demo.html rawgit]\n\n"
      },
      "after": "ad7ea53eeadd4b4b",
      "date": 1512326057445
    },
    {
      "type": "move",
      "order": [
        "811a900c92839a5d",
        "433f41e61d2d5462",
        "cd9bf37e055f9876",
        "922cb3cf0d44c664",
        "592b49b6dd4c395a",
        "20084356ff8e69ce",
        "be1c189512f72ed2",
        "333c02e0dca5d096",
        "ad7ea53eeadd4b4b",
        "1beec55a99a1eb81",
        "7ad5c70b-f449-434c-9487-27fd273e2fa2",
        "f0769a8e7f24c8e2",
        "9db36c08a6057f57",
        "837e7246b6eb20dd",
        "badc89d5f4c3d71e",
        "3b394fb4353482f0",
        "a6cd84e835999196",
        "6784ee238554a940",
        "f5bbd2a54d88ab35",
        "ab3d0ddd8bd9c6f6",
        "5f42a7333dc007ee",
        "1a6be0b38bce9217",
        "e5d76116df831ea0",
        "b398b0c08d8d96ae",
        "13362b06-5621-460d-81df-cf57bcb49db4"
      ],
      "id": "f0769a8e7f24c8e2",
      "date": 1512326176518
    },
    {
      "type": "edit",
      "id": "ad7ea53eeadd4b4b",
      "item": {
        "type": "paragraph",
        "id": "ad7ea53eeadd4b4b",
        "text": "The best solution I have found so far is to use [[MountainStorm]]."
      },
      "date": 1512326202668
    },
    {
      "type": "edit",
      "id": "ad7ea53eeadd4b4b",
      "item": {
        "type": "paragraph",
        "id": "ad7ea53eeadd4b4b",
        "text": "The best solution I have found so far is to use [[MountainStorm]] - [https://cdn.rawgit.com/mountainstorm/jquery.graphviz.svg/master/demo.html rawgit]"
      },
      "date": 1512326233637
    },
    {
      "type": "remove",
      "id": "7ad5c70b-f449-434c-9487-27fd273e2fa2",
      "date": 1512326241435
    },
    {
      "type": "edit",
      "id": "f0769a8e7f24c8e2",
      "item": {
        "type": "markdown",
        "id": "f0769a8e7f24c8e2",
        "text": "[[MountainStorm]] is a jQuery plugin to make Graphviz [[SVG]] output more interactive and easier to navigate. Makes it easy to have features like:\n\n- Highlight nodes/edges\n- Zoom in/out\n- Graph navigation - select linked nodes\n- Fancy UI tooltips; bootstrap supported out the box\n- Move things forward/back in the graph\nHave a look at the demo -\n [https://cdn.rawgit.com/mountainstorm/jquery.graphviz.svg/master/demo.html rawgit]\n\n"
      },
      "date": 1512326248564
    },
    {
      "type": "edit",
      "id": "f0769a8e7f24c8e2",
      "item": {
        "type": "markdown",
        "id": "f0769a8e7f24c8e2",
        "text": "[[MountainStorm]] is a jQuery plugin to make Graphviz [[SVG]] output more interactive and easier to navigate. Makes it easy to have features like:\n\n- Highlight nodes/edges\n- Zoom in/out\n- Graph navigation - select linked nodes\n- Fancy UI tooltips; bootstrap supported out the box\n- Move things forward/back in the graph"
      },
      "date": 1512326256933
    },
    {
      "type": "edit",
      "id": "f0769a8e7f24c8e2",
      "item": {
        "type": "markdown",
        "id": "f0769a8e7f24c8e2",
        "text": "[[MountainStorm]] is a jQuery plugin to make [[Graphviz]] SVG output more interactive and easier to navigate. Makes it easy to have features like:\n\n- Highlight nodes/edges\n- Zoom in/out\n- Graph navigation - select linked nodes\n- Fancy UI tooltips; bootstrap supported out the box\n- Move things forward/back in the graph"
      },
      "date": 1512330118615
    },
    {
      "type": "edit",
      "id": "9db36c08a6057f57",
      "item": {
        "type": "paragraph",
        "id": "9db36c08a6057f57",
        "text": "This approach has a number of advantages. It enables us to use the power of graphviz, and other programming languages that understand the [[dot language]] to create graphs in wiki."
      },
      "date": 1512330186331
    },
    {
      "type": "add",
      "id": "972db241d1fc324b",
      "item": {
        "type": "paragraph",
        "id": "972db241d1fc324b",
        "text": "We can store the dot language, or use our own simplified [[DSL]] in order to create the dot format, and then store the resulting SVG."
      },
      "after": "9db36c08a6057f57",
      "date": 1512330277894
    },
    {
      "type": "add",
      "id": "44ff1ca9739455c7",
      "item": {
        "type": "paragraph",
        "id": "44ff1ca9739455c7",
        "text": "In turn this svg can be brought into an illustration program that understands svg and modified by hand before returning it to wiki."
      },
      "after": "972db241d1fc324b",
      "date": 1512330319678
    },
    {
      "type": "add",
      "id": "c57227dd864d3624",
      "item": {
        "type": "paragraph",
        "id": "c57227dd864d3624",
        "text": "Finally Mountainstorm can make the resulting svg interactive, and our DSL could simplify the interaction with wiki (opening wiki pages for instance)."
      },
      "after": "44ff1ca9739455c7",
      "date": 1512330367141
    },
    {
      "type": "edit",
      "id": "c57227dd864d3624",
      "item": {
        "type": "paragraph",
        "id": "c57227dd864d3624",
        "text": "Finally [[MountainStorm]] can make the resulting svg interactive, and our DSL could simplify the interaction with wiki (opening wiki pages for instance)."
      },
      "date": 1512330377141
    },
    {
      "type": "remove",
      "id": "9db36c08a6057f57",
      "date": 1512330390281
    },
    {
      "type": "remove",
      "id": "972db241d1fc324b",
      "date": 1512330393138
    },
    {
      "type": "remove",
      "id": "44ff1ca9739455c7",
      "date": 1512330395475
    },
    {
      "type": "remove",
      "id": "c57227dd864d3624",
      "date": 1512330398292
    },
    {
      "type": "edit",
      "id": "f0769a8e7f24c8e2",
      "item": {
        "type": "markdown",
        "id": "f0769a8e7f24c8e2",
        "text": "[[MountainStorm]] is a jQuery plugin to make [[Graphviz]] SVG output more interactive and easier to navigate."
      },
      "date": 1512330486420
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "972db241d1fc324b",
        "text": "We can store the dot language, or use our own simplified [[DSL]] in order to create the dot format, and then store the resulting SVG."
      },
      "after": "f0769a8e7f24c8e2",
      "id": "972db241d1fc324b",
      "date": 1512330499580
    },
    {
      "type": "edit",
      "id": "ad7ea53eeadd4b4b",
      "item": {
        "type": "paragraph",
        "id": "ad7ea53eeadd4b4b",
        "text": "The simplest solution I have found so far is to use [[MountainStorm]]. See this example for a look at the sort of results we could achieve -  [https://cdn.rawgit.com/mountainstorm/jquery.graphviz.svg/master/demo.html rawgit]"
      },
      "date": 1512330574279
    },
    {
      "type": "remove",
      "id": "a6cd84e835999196",
      "date": 1512330594528
    },
    {
      "type": "edit",
      "id": "6784ee238554a940",
      "item": {
        "text": "# RenderingGraphviz Dot language",
        "id": "6784ee238554a940",
        "type": "paragraph"
      },
      "date": 1512330646411
    },
    {
      "type": "add",
      "id": "3c6caa334297d806",
      "item": {
        "type": "paragraph",
        "id": "3c6caa334297d806",
        "text": "Dagre is a JavaScript library that makes it easy to lay out directed graphs on the client-side - [https://github.com/cpettitt/dagre/wiki github]"
      },
      "after": "6784ee238554a940",
      "date": 1512330648168
    },
    {
      "type": "edit",
      "id": "6784ee238554a940",
      "item": {
        "text": "# Rendering Graphviz Dot language",
        "id": "6784ee238554a940",
        "type": "paragraph"
      },
      "date": 1512330650840
    },
    {
      "type": "edit",
      "id": "6784ee238554a940",
      "item": {
        "text": "# Rendering Graphviz Dot language",
        "id": "6784ee238554a940",
        "type": "markdown"
      },
      "date": 1512330651999
    },
    {
      "type": "edit",
      "id": "3c6caa334297d806",
      "item": {
        "type": "paragraph",
        "id": "3c6caa334297d806",
        "text": "[[Dagre]] is a JavaScript addon to [[Cytoscape.js]] that makes it easy to lay out directed graphs on the client-side - [https://github.com/cpettitt/dagre/wiki github]"
      },
      "date": 1512330680386
    },
    {
      "type": "edit",
      "id": "3c6caa334297d806",
      "item": {
        "type": "paragraph",
        "id": "3c6caa334297d806",
        "text": "[[Dagre]] is a JavaScript addon to [[Cytoscape.js]] that makes it easy to lay out dot language on the client-side - [https://github.com/cpettitt/dagre/wiki github]"
      },
      "date": 1512330706268
    },
    {
      "type": "move",
      "order": [
        "811a900c92839a5d",
        "433f41e61d2d5462",
        "cd9bf37e055f9876",
        "922cb3cf0d44c664",
        "592b49b6dd4c395a",
        "20084356ff8e69ce",
        "be1c189512f72ed2",
        "333c02e0dca5d096",
        "ad7ea53eeadd4b4b",
        "1beec55a99a1eb81",
        "f0769a8e7f24c8e2",
        "972db241d1fc324b",
        "837e7246b6eb20dd",
        "badc89d5f4c3d71e",
        "3b394fb4353482f0",
        "6784ee238554a940",
        "3c6caa334297d806",
        "5f42a7333dc007ee",
        "f5bbd2a54d88ab35",
        "ab3d0ddd8bd9c6f6",
        "1a6be0b38bce9217",
        "e5d76116df831ea0",
        "b398b0c08d8d96ae",
        "13362b06-5621-460d-81df-cf57bcb49db4"
      ],
      "id": "5f42a7333dc007ee",
      "date": 1512330714760
    },
    {
      "type": "remove",
      "id": "f5bbd2a54d88ab35",
      "date": 1512330745299
    },
    {
      "type": "add",
      "id": "7160d3155f2568f5",
      "item": {
        "type": "paragraph",
        "id": "7160d3155f2568f5",
        "text": "# SystemJS"
      },
      "after": "5f42a7333dc007ee",
      "date": 1512330751932
    },
    {
      "type": "edit",
      "id": "7160d3155f2568f5",
      "item": {
        "type": "markdown",
        "id": "7160d3155f2568f5",
        "text": "# SystemJS"
      },
      "date": 1512330753180
    },
    {
      "type": "remove",
      "id": "1a6be0b38bce9217",
      "date": 1512330818166
    },
    {
      "type": "add",
      "id": "4cb57ec63c5655ba",
      "item": {
        "type": "paragraph",
        "id": "4cb57ec63c5655ba",
        "text": "# Canviz"
      },
      "after": "ab3d0ddd8bd9c6f6",
      "date": 1512330830344
    },
    {
      "type": "edit",
      "id": "b398b0c08d8d96ae",
      "item": {
        "text": "# Canvg",
        "id": "b398b0c08d8d96ae",
        "type": "paragraph"
      },
      "date": 1512330841610
    },
    {
      "type": "edit",
      "id": "b398b0c08d8d96ae",
      "item": {
        "text": "# Canvg",
        "id": "b398b0c08d8d96ae",
        "type": "markdown"
      },
      "date": 1512330842878
    },
    {
      "type": "edit",
      "id": "4cb57ec63c5655ba",
      "item": {
        "type": "markdown",
        "id": "4cb57ec63c5655ba",
        "text": "# Canviz"
      },
      "date": 1512330844209
    },
    {
      "type": "add",
      "id": "6adde88e3ae5c6db",
      "item": {
        "type": "paragraph",
        "id": "6adde88e3ae5c6db",
        "text": "Canvg is a SVG parser and renderer. It takes a URL to a SVG file or the text of an SVG file, parses it in JavaScript, and renders the result on a Canvas element. The rendering speed of the examples is about as fast as native SVG -\n [https://github.com/gabelerner/canvg github]"
      },
      "after": "b398b0c08d8d96ae",
      "date": 1512330845129
    },
    {
      "type": "edit",
      "id": "333c02e0dca5d096",
      "item": {
        "type": "markdown",
        "id": "333c02e0dca5d096",
        "text": "# Displaying Graphviz SVG"
      },
      "date": 1512330905229
    },
    {
      "type": "edit",
      "id": "ad7ea53eeadd4b4b",
      "item": {
        "type": "paragraph",
        "id": "ad7ea53eeadd4b4b",
        "text": "The first technique relies on displaying"
      },
      "date": 1512330940334
    },
    {
      "type": "add",
      "id": "9956a8d0d284369e",
      "item": {
        "type": "paragraph",
        "id": "9956a8d0d284369e",
        "text": "The simplest solution I have found so far is to use [[MountainStorm]]. See this example for a look at the sort of results we could achieve -  [https://cdn.rawgit.com/mountainstorm/jquery.graphviz.svg/master/demo.html rawgit]"
      },
      "after": "ad7ea53eeadd4b4b",
      "date": 1512330942039
    },
    {
      "type": "edit",
      "id": "ad7ea53eeadd4b4b",
      "item": {
        "type": "paragraph",
        "id": "ad7ea53eeadd4b4b",
        "text": "The first technique emphasises [[svg]] display and storage - from whichever route it is generated. This has a number of advantages - see [[Drawing Graphs by Hand]]"
      },
      "date": 1512331015304
    },
    {
      "type": "remove",
      "id": "7160d3155f2568f5",
      "date": 1512331028773
    },
    {
      "type": "remove",
      "id": "ab3d0ddd8bd9c6f6",
      "date": 1512331032582
    },
    {
      "type": "remove",
      "id": "b398b0c08d8d96ae",
      "date": 1512331036620
    },
    {
      "type": "remove",
      "id": "6adde88e3ae5c6db",
      "date": 1512331039977
    },
    {
      "type": "edit",
      "id": "ad7ea53eeadd4b4b",
      "item": {
        "type": "paragraph",
        "id": "ad7ea53eeadd4b4b",
        "text": "This technique emphasises [[svg]] display and storage - from whichever route it is generated. This has a number of advantages - see [[Drawing Graphs by Hand]]"
      },
      "date": 1512331063921
    },
    {
      "type": "fork",
      "site": "graph.liquiddemocracy.org",
      "date": 1512335865881
    },
    {
      "type": "edit",
      "id": "433f41e61d2d5462",
      "item": {
        "type": "paragraph",
        "id": "433f41e61d2d5462",
        "text": "The first is to use the [[svg]] export and then use javascript to make these svgs interactive, and the second is to take the raw Graphviz [[dot language]] and use a library to create interactive graphs directly."
      },
      "date": 1512335935035
    },
    {
      "type": "edit",
      "id": "ad7ea53eeadd4b4b",
      "item": {
        "type": "paragraph",
        "id": "ad7ea53eeadd4b4b",
        "text": "This technique emphasises [[svg]] display and storage - from whichever route it is generated. This has a number of advantages - see [[Hand Drawn Graphs]]"
      },
      "date": 1512336069583
    }
  ],
  "title": "Viewing Graphviz with Javascript",
  "story": [
    {
      "text": "There are basically two ways to view interactive graphs exported from [[graphviz]]. ",
      "id": "811a900c92839a5d",
      "type": "paragraph"
    },
    {
      "type": "paragraph",
      "id": "433f41e61d2d5462",
      "text": "The first is to use the [[svg]] export and then use javascript to make these svgs interactive, and the second is to take the raw Graphviz [[dot language]] and use a library to create interactive graphs directly."
    },
    {
      "type": "paragraph",
      "id": "cd9bf37e055f9876",
      "text": "Our aim here is to make [[Pretty Wiki]], and well functional. [[Wiki Relationships]] are inherently graph-like. [[Liquid Democracy]] needs a writing medium that suits the creative diversity that [[federated wiki]] engenders. "
    },
    {
      "text": "# Displaying interactive SVG's in wiki",
      "id": "922cb3cf0d44c664",
      "type": "markdown"
    },
    {
      "type": "paragraph",
      "id": "592b49b6dd4c395a",
      "text": "What's with svg anyway? Well it's not an SVG issue. SVG's work fine. They embed and display fine. We have built in interactivity. We can author and enhance them with powerful manual and scripting tools. They are great."
    },
    {
      "text": "<blockquote><b style='color:red'>Issue: </b>\n\nthe issue is with how the wiki-client is trapping events and not allowing the browser to handle the url linkes.\n<p>",
      "id": "20084356ff8e69ce",
      "type": "html"
    },
    {
      "text": "To get around this issue we either have to allow [[svg-links]] in the [[About HTML Plugin], or we create a plugin to allow javascript to do it's magic on the svg.",
      "id": "be1c189512f72ed2",
      "type": "paragraph"
    },
    {
      "type": "markdown",
      "id": "333c02e0dca5d096",
      "text": "# Displaying Graphviz SVG"
    },
    {
      "type": "paragraph",
      "id": "ad7ea53eeadd4b4b",
      "text": "This technique emphasises [[svg]] display and storage - from whichever route it is generated. This has a number of advantages - see [[Hand Drawn Graphs]]"
    },
    {
      "type": "paragraph",
      "id": "9956a8d0d284369e",
      "text": "The simplest solution I have found so far is to use [[MountainStorm]]. See this example for a look at the sort of results we could achieve -  [https://cdn.rawgit.com/mountainstorm/jquery.graphviz.svg/master/demo.html rawgit]"
    },
    {
      "type": "markdown",
      "id": "1beec55a99a1eb81",
      "text": "# MountainStorm"
    },
    {
      "type": "markdown",
      "id": "f0769a8e7f24c8e2",
      "text": "[[MountainStorm]] is a jQuery plugin to make [[Graphviz]] SVG output more interactive and easier to navigate."
    },
    {
      "type": "paragraph",
      "id": "972db241d1fc324b",
      "text": "We can store the dot language, or use our own simplified [[DSL]] in order to create the dot format, and then store the resulting SVG."
    },
    {
      "text": "<H3>Client Side Solution",
      "id": "837e7246b6eb20dd",
      "type": "html"
    },
    {
      "text": "A client side solution has some advantages. you can tweak the code in the browser. You can quickly role simple diagrams. ",
      "id": "badc89d5f4c3d71e",
      "type": "paragraph"
    },
    {
      "text": "Client side solutions suffers from the lack of ability to bring the image into a nice drawing package and edit it to make it clean and simple before returning it to the wiki. That is what [[SVG]]'s are good for.",
      "id": "3b394fb4353482f0",
      "type": "paragraph"
    },
    {
      "text": "# Rendering Graphviz Dot language",
      "id": "6784ee238554a940",
      "type": "markdown"
    },
    {
      "type": "paragraph",
      "id": "3c6caa334297d806",
      "text": "[[Dagre]] is a JavaScript addon to [[Cytoscape.js]] that makes it easy to lay out dot language on the client-side - [https://github.com/cpettitt/dagre/wiki github]"
    },
    {
      "text": "[[Viz.js]] ports graphviz to js with [[emscripten]]. This sounds like the wrong way to go but they do have nice examples - [https://github.com/mdaines/viz.js/ github]",
      "id": "5f42a7333dc007ee",
      "type": "paragraph"
    },
    {
      "type": "markdown",
      "id": "4cb57ec63c5655ba",
      "text": "# Canviz"
    },
    {
      "text": "Canviz is a JavaScript library for drawing Graphviz graphs to a web browser canvas. More technically, Canviz is a JavaScript xdot renderer. It works in most modern browsers. [https://code.google.com/p/canviz/ google code]",
      "id": "e5d76116df831ea0",
      "type": "paragraph"
    },
    {
      "type": "markdown",
      "id": "13362b06-5621-460d-81df-cf57bcb49db4",
      "text": "# See also\n\n- [[Javascript Graph Libraries]]\n- [[Graphoid Service]]\n- [[Vega]]\n- [[Graphviz in El Dorado]]"
    }
  ]
}