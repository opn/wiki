{
  "title": "Parity",
  "story": [
    {
      "type": "paragraph",
      "id": "c9c08e21358eec7f",
      "text": "The fastest and most secure way of interacting with the Ethereum blockchain. Our client powers much of the infrastructure of the public Ethereum network and is used by companies and users alike - [https://www.parity.io/ parity.io]"
    },
    {
      "type": "markdown",
      "id": "f31ee9f1ee7e4edd",
      "text": "- Code on - [https://github.com/paritytech/parity/wiki githib]"
    },
    {
      "type": "paragraph",
      "id": "aea173dc7ea49cfe",
      "text": "Parity is an Ethereum client, written from the ground-up for correctness-verifiability, modularisation, low-footprint and high-performance. To this end it utilises the Rust language, a hybrid imperative/OO/functional language with an emphasis on efficiency. It is professionally developed by Parity Technologies, a VC-funded UK-based company. We aim to have all important logic 100% unit-tested, all public APIs 100% documented, all code reviewed by multiple peers and follow a pipelined 7-ish-week release cycle similar to the Rust compiler - [https://wiki.parity.io/ wiki.parity.io]\n\n"
    },
    {
      "type": "markdown",
      "id": "ffbd7d518035442b",
      "text": "Parity comes with an extensive, in-built Ethereum Wallet and Dapp environment. It includes:\n\n- Account, address-book and multi-sig management.\n- Key creation, importing and exporting.\n- Web3 Ðapp browser.\n- Hardware and electronic cold-wallet support.\n- Name registry support.\n- Contract development, deployment and interaction environment."
    },
    {
      "type": "markdown",
      "id": "9eafbfdc0c9ce21e",
      "text": "# High Performance\nTuned, hand optimised use of low-level Rust language JITEVM turbocharges execution of complex contracts Multi-level in-memory caching\n\n# Ultra Reliable\nMemory and concurrency safety guaranteed by Rust language Actor-based modularity ensures maximal resilience Unit tested and peer reviewed from day one\n\n# Future Proof\nStandard, JSON-based, chain-specification format EVM plugins allow native speed contracts Actor-based modular architecture with IPC\n\n# Small Footprint\nRust's ownership tracking facilitates minimal memory footprint Cache management gives fine control to user State-trie pruning minimises storage footprint\n\n# Easy to use\n1-line install on Mac and Linux Docker images available Library APIs are fully documented\n\n# Compatible\n100% consensus test conformant implementation Complies with standard devp2p network protocol Fully compatible with JSON-RPC API"
    },
    {
      "type": "markdown",
      "id": "0f9ea62c-6b6d-4a19-868a-38958d87304e",
      "text": "# See also\n\n- [[Parity]]\n- [[Parity Bridge]]\n- [[Proof of Authority]]\n- [[POA Network]]\n- [[ScalingNOW]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Parity",
        "story": []
      },
      "date": 1521630641559
    },
    {
      "item": {
        "type": "factory",
        "id": "c9c08e21358eec7f"
      },
      "id": "c9c08e21358eec7f",
      "type": "add",
      "date": 1521630642608
    },
    {
      "type": "edit",
      "id": "c9c08e21358eec7f",
      "item": {
        "type": "paragraph",
        "id": "c9c08e21358eec7f",
        "text": "The fastest and most secure way of interacting with the Ethereum blockchain. Our client powers much of the infrastructure of the public Ethereum network and is used by companies and users alike."
      },
      "date": 1521630646658
    },
    {
      "item": {
        "type": "factory",
        "id": "9eafbfdc0c9ce21e"
      },
      "id": "9eafbfdc0c9ce21e",
      "type": "add",
      "after": "c9c08e21358eec7f",
      "date": 1521630689103
    },
    {
      "type": "edit",
      "id": "9eafbfdc0c9ce21e",
      "item": {
        "type": "markdown",
        "id": "9eafbfdc0c9ce21e",
        "text": "# High Performance\nTuned, hand optimised use of low-level Rust language JITEVM turbocharges execution of complex contracts Multi-level in-memory caching\n\n# Ultra Reliable\nMemory and concurrency safety guaranteed by Rust language Actor-based modularity ensures maximal resilience Unit tested and peer reviewed from day one\n\n# Future Proof\nStandard, JSON-based, chain-specification format EVM plugins allow native speed contracts Actor-based modular architecture with IPC\n\n# Small Footprint\nRust's ownership tracking facilitates minimal memory footprint Cache management gives fine control to user State-trie pruning minimises storage footprint\n\n# Easy to use\n1-line install on Mac and Linux Docker images available Library APIs are fully documented\n\n# Compatible\n100% consensus test conformant implementation Complies with standard devp2p network protocol Fully compatible with JSON-RPC API"
      },
      "date": 1521630720414
    },
    {
      "type": "edit",
      "id": "c9c08e21358eec7f",
      "item": {
        "type": "paragraph",
        "id": "c9c08e21358eec7f",
        "text": "The fastest and most secure way of interacting with the Ethereum blockchain. Our client powers much of the infrastructure of the public Ethereum network and is used by companies and users alike - [https://www.parity.io/ parity.io]"
      },
      "date": 1521630751236
    },
    {
      "type": "add",
      "id": "aea173dc7ea49cfe",
      "item": {
        "type": "paragraph",
        "id": "aea173dc7ea49cfe",
        "text": "- [https://wiki.parity.io/ wiki.parity.io]"
      },
      "after": "c9c08e21358eec7f",
      "date": 1521630789220
    },
    {
      "type": "edit",
      "id": "aea173dc7ea49cfe",
      "item": {
        "type": "paragraph",
        "id": "aea173dc7ea49cfe",
        "text": "Parity is an Ethereum client, written from the ground-up for correctness-verifiability, modularisation, low-footprint and high-performance. To this end it utilises the Rust language, a hybrid imperative/OO/functional language with an emphasis on efficiency. It is professionally developed by Parity Technologies, a VC-funded UK-based company. We aim to have all important logic 100% unit-tested, all public APIs 100% documented, all code reviewed by multiple peers and follow a pipelined 7-ish-week release cycle similar to the Rust compiler - [https://wiki.parity.io/ wiki.parity.io]\n\n"
      },
      "date": 1521630821377
    },
    {
      "type": "add",
      "id": "ffbd7d518035442b",
      "item": {
        "type": "paragraph",
        "id": "ffbd7d518035442b",
        "text": "Parity comes with an extensive, in-built Ethereum Wallet and Dapp environment. It includes:\n\n- Account, address-book and multi-sig management.\n- Key creation, importing and exporting.\n- Web3 Ðapp browser.\n- Hardware and electronic cold-wallet support.\n- Name registry support.\n- Contract development, deployment and interaction environment."
      },
      "after": "aea173dc7ea49cfe",
      "date": 1521630840492
    },
    {
      "type": "edit",
      "id": "ffbd7d518035442b",
      "item": {
        "type": "markdown",
        "id": "ffbd7d518035442b",
        "text": "Parity comes with an extensive, in-built Ethereum Wallet and Dapp environment. It includes:\n\n- Account, address-book and multi-sig management.\n- Key creation, importing and exporting.\n- Web3 Ðapp browser.\n- Hardware and electronic cold-wallet support.\n- Name registry support.\n- Contract development, deployment and interaction environment."
      },
      "date": 1521630841343
    },
    {
      "type": "add",
      "id": "f31ee9f1ee7e4edd",
      "item": {
        "type": "paragraph",
        "id": "f31ee9f1ee7e4edd",
        "text": "- Code on - [https://github.com/paritytech/parity/wiki githib]"
      },
      "after": "c9c08e21358eec7f",
      "date": 1521630877741
    },
    {
      "type": "edit",
      "id": "f31ee9f1ee7e4edd",
      "item": {
        "type": "markdown",
        "id": "f31ee9f1ee7e4edd",
        "text": "- Code on - [https://github.com/paritytech/parity/wiki githib]"
      },
      "date": 1521630879010
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "0f9ea62c-6b6d-4a19-868a-38958d87304e",
        "text": "# See also\n\n- [[Parity]]\n- [[Proof of Authority]]\n- [[ScalingNOW]]"
      },
      "after": "9eafbfdc0c9ce21e",
      "id": "0f9ea62c-6b6d-4a19-868a-38958d87304e",
      "date": 1521630886388
    },
    {
      "type": "edit",
      "id": "0f9ea62c-6b6d-4a19-868a-38958d87304e",
      "item": {
        "type": "markdown",
        "id": "0f9ea62c-6b6d-4a19-868a-38958d87304e",
        "text": "# See also\n\n- [[Parity]]\n- [[Parity Bridge]]\n- [[Proof of Authority]]\n- [[ScalingNOW]]"
      },
      "date": 1521630902180
    },
    {
      "type": "edit",
      "id": "0f9ea62c-6b6d-4a19-868a-38958d87304e",
      "item": {
        "type": "markdown",
        "id": "0f9ea62c-6b6d-4a19-868a-38958d87304e",
        "text": "# See also\n\n- [[Parity]]\n- [[Parity Bridge]]\n- [[Proof of Authority]]\n- [[POA Network]]\n- [[ScalingNOW]]"
      },
      "date": 1521632597653
    }
  ]
}