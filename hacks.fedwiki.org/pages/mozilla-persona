{
  "title": "Mozilla Persona",
  "story": [
    {
      "type": "paragraph",
      "id": "5f73f75b85b871b0",
      "text": "Mozilla Persona is a decentralized authentication system for the web based on the open [[BrowserID Protocol]] prototyped by Mozilla - [http://en.wikipedia.org/wiki/Mozilla_Persona wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "3386c3c2bb50ce01",
      "text": "\n"
    },
    {
      "type": "reference",
      "id": "9127553617cd32c2",
      "site": "c0de.academy",
      "slug": "mozilla-persona",
      "title": "Mozilla Persona",
      "text": "Mozilla Persona is a decentralized authentication system for the web based on the open [[BrowserID Protocol]] prototyped by Mozilla - [http://en.wikipedia.org/wiki/Mozilla_Persona wikipedia]"
    },
    {
      "type": "html",
      "id": "72afbf5dabc85a40",
      "text": "<H3>FedWiki Hack"
    },
    {
      "type": "paragraph",
      "id": "69d2fbd616daff7a",
      "text": "Persona is not so easy to call from outside of the browser environment. The best way to use Persona based authentication in a non-web app is to use an embedded browser to login, and then:"
    },
    {
      "type": "pagefold",
      "id": "08a2982edfcb0b1f",
      "text": "Quote"
    },
    {
      "type": "paragraph",
      "id": "3e22c6d18fa18836",
      "text": "What I would do is show a Web UI the first time (authenticating with Persona) and then exchange a secret token between the server and the client. You then include the token along with each request to the REST API.\n\nThat way you'd be using Persona for the initial authentication, then you'd be using a token-based system for authorization."
    },
    {
      "type": "pagefold",
      "id": "fab47c6d256799ed",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "8644f1933821df33",
      "text": "The trick here is that it's hard to automate the client-side half of a generic Persona login session - the protocol is explicitly build around a user interacting with a user-agent displaying HTML/JS pages. \n\n"
    },
    {
      "type": "paragraph",
      "id": "bbd78208f48486e6",
      "text": "One option that seems to work quite well is to pair Persona for interactive login with a request-signing scheme for automated login.  I describe how we've done it for some Mozilla Services projects in this blog post: [https://www.rfk.id.au/blog/entry/securing-pyramid-persona-macauth/  rfk.id.au]\n\n    "
    },
    {
      "type": "paragraph",
      "id": "e66c543ada16a826",
      "text": "There are some libraries available for OSX clients and servers in the context of using Persona outside of a browser based environment - [https://hacks.mozilla.org/2013/04/mozilla-persona-for-the-non-web/ hacks.mozilla.org]"
    },
    {
      "type": "html",
      "id": "30f389d771745576",
      "text": "<H3>libbrowserid"
    },
    {
      "type": "paragraph",
      "id": "1991fada243a9b24",
      "text": "libbrowserid is a C library for generating and verifying Mozilla Persona (BrowserID) assertions. This source distribution also includes a GSS/SASL mechanism based on the BrowserID protocol, but that is not built by default - [https://github.com/PADL/libbrowserid github.com]"
    },
    {
      "type": "paragraph",
      "id": "7375576c5ba6c430",
      "text": "\n"
    },
    {
      "type": "html",
      "id": "e03a5e512c2e6f61",
      "text": "<H3>How it works"
    },
    {
      "type": "paragraph",
      "id": "eaaffd09f1c0c8ba",
      "text": "The browser stores a list of user verified email addresses (certificates issued by the identity providers), and demonstrates the user's ownership of the addresses to the website using cryptographic proof.\n\n"
    },
    {
      "type": "paragraph",
      "id": "4ab159f2afaaba5b",
      "text": "The certificates must be renewed every 24 hours by logging-in to the identity provider (which will usually mean entering the email and a password in a Web form on the identify provider's site). "
    },
    {
      "type": "paragraph",
      "id": "700c9f60ec29d072",
      "text": "Once done, they will be usable for authenticating to web sites with the same browser for the rest of the day, without entering passwords again ([[Single Sign-On]]).\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Mozilla Persona",
        "story": []
      },
      "date": 1429133892001
    },
    {
      "item": {
        "type": "factory",
        "id": "5f73f75b85b871b0"
      },
      "id": "5f73f75b85b871b0",
      "type": "add",
      "date": 1429133900263
    },
    {
      "type": "edit",
      "id": "5f73f75b85b871b0",
      "item": {
        "type": "paragraph",
        "id": "5f73f75b85b871b0",
        "text": "Mozilla Persona is a decentralized authentication system for the web based on the open BrowserID protocol[1] prototyped by Mozilla [dfsa wikipedia]"
      },
      "date": 1429133910512
    },
    {
      "type": "add",
      "id": "7375576c5ba6c430",
      "item": {
        "type": "paragraph",
        "id": "7375576c5ba6c430",
        "text": "dsa"
      },
      "after": "5f73f75b85b871b0",
      "date": 1429133912121
    },
    {
      "type": "edit",
      "id": "5f73f75b85b871b0",
      "item": {
        "type": "paragraph",
        "id": "5f73f75b85b871b0",
        "text": "Mozilla Persona is a decentralized authentication system for the web based on the open BrowserID protocol[1] prototyped by Mozilla [http://en.wikipedia.org/wiki/Mozilla_Persona wikipedia]"
      },
      "date": 1429133922378
    },
    {
      "type": "edit",
      "id": "5f73f75b85b871b0",
      "item": {
        "type": "paragraph",
        "id": "5f73f75b85b871b0",
        "text": "Mozilla Persona is a decentralized authentication system for the web based on the open [[BrowserID Protocol]] prototyped by Mozilla - [http://en.wikipedia.org/wiki/Mozilla_Persona wikipedia]"
      },
      "date": 1429133956658
    },
    {
      "type": "edit",
      "id": "7375576c5ba6c430",
      "item": {
        "type": "paragraph",
        "id": "7375576c5ba6c430",
        "text": "Persona was launched in July 2011[3] and shares some of its goals with some similar authentication systems like OpenID or Facebook Connect, but it is different in several ways:\n\nIt uses email addresses as identifiers\nIt is more focused on privacy\nIs intended to be fully integrated in the browser (currently relies heavily on Javascript).\nThe privacy goal is motivated by the fact that the identity provider does not know which website the user is identifying on.[4] It was first released in July 2011 and fully deployed by Mozilla on its own websites in January 2012."
      },
      "date": 1429134250623
    },
    {
      "type": "add",
      "id": "72afbf5dabc85a40",
      "item": {
        "type": "paragraph",
        "id": "72afbf5dabc85a40",
        "text": "As of March 2014, Mozilla indicated it was dropping full-time developers from Persona and moving the project to community ownership. Mozilla indicated, however, that it had no plans to decommission Persona and would maintain some level of involvement such as in maintenance and reviewing pull requests.["
      },
      "after": "7375576c5ba6c430",
      "date": 1429134256893
    },
    {
      "type": "edit",
      "id": "7375576c5ba6c430",
      "item": {
        "type": "paragraph",
        "id": "7375576c5ba6c430",
        "text": "Persona was launched in July 2011[3] and shares some of its goals with some similar authentication systems like OpenID or Facebook Connect, but it is different in several ways:\n\n"
      },
      "date": 1429134266428
    },
    {
      "type": "add",
      "id": "8cb185ad15088fbb",
      "item": {
        "type": "paragraph",
        "id": "8cb185ad15088fbb",
        "text": "It uses email addresses as identifiers\nIt is more focused on privacy\nIs intended to be fully integrated in the browser (currently relies heavily on Javascript).\nThe privacy goal is motivated by the fact that the identity provider does not know which website the user is identifying on. It was first released in July 2011 and fully deployed by Mozilla on its own websites in January 2012."
      },
      "after": "7375576c5ba6c430",
      "date": 1429134268638
    },
    {
      "type": "edit",
      "id": "7375576c5ba6c430",
      "item": {
        "type": "paragraph",
        "id": "7375576c5ba6c430",
        "text": "Persona was launched in July 2011 and shares some of its goals with some similar authentication systems like OpenID or Facebook Connect, but it is different in several ways:\n\n"
      },
      "date": 1429134273990
    },
    {
      "type": "edit",
      "id": "8cb185ad15088fbb",
      "item": {
        "type": "paragraph",
        "id": "8cb185ad15088fbb",
        "text": "<UL><LI>It uses email addresses as identifiers</LI><LI>\nIt is more focused on privacy</LI><LI>\nIs intended to be fully integrated in the browser (currently relies heavily on Javascript).</LI><LI>"
      },
      "date": 1429134304941
    },
    {
      "type": "add",
      "id": "0a19a039da6536ea",
      "item": {
        "type": "paragraph",
        "id": "0a19a039da6536ea",
        "text": "The privacy goal is motivated by the fact that the identity provider does not know which website the user is identifying on. It was first released in July 2011 and fully deployed by Mozilla on its own websites in January 2012."
      },
      "after": "8cb185ad15088fbb",
      "date": 1429134307767
    },
    {
      "type": "edit",
      "id": "8cb185ad15088fbb",
      "item": {
        "type": "html",
        "id": "8cb185ad15088fbb",
        "text": "<UL><LI>It uses email addresses as identifiers</LI><LI>\nIt is more focused on privacy</LI><LI>\nIs intended to be fully integrated in the browser (currently relies heavily on Javascript).</LI><LI>"
      },
      "date": 1429134310062
    },
    {
      "type": "edit",
      "id": "8cb185ad15088fbb",
      "item": {
        "type": "html",
        "id": "8cb185ad15088fbb",
        "text": "<UL><LI>It uses email addresses as identifiers</LI><LI>\nIt is more focused on privacy</LI><LI>\nIs intended to be fully integrated in the browser (currently relies heavily on Javascript).</LI></UL>"
      },
      "date": 1429134319097
    },
    {
      "type": "edit",
      "id": "7375576c5ba6c430",
      "item": {
        "type": "paragraph",
        "id": "7375576c5ba6c430",
        "text": "Persona shares some of its goals with authentication systems like OpenID or Facebook Connect, but it is different in several ways:\n\n"
      },
      "date": 1429134370929
    },
    {
      "type": "edit",
      "id": "0a19a039da6536ea",
      "item": {
        "type": "paragraph",
        "id": "0a19a039da6536ea",
        "text": "The additional privacy is provided by the fact that the identity provider does not know which website the user is identifying on."
      },
      "date": 1429134396658
    },
    {
      "type": "edit",
      "id": "72afbf5dabc85a40",
      "item": {
        "type": "paragraph",
        "id": "72afbf5dabc85a40",
        "text": "As of March 2014, Mozilla indicated it was dropping full-time developers from Persona and moving the project to community ownership."
      },
      "date": 1429134406895
    },
    {
      "type": "add",
      "id": "eaaffd09f1c0c8ba",
      "item": {
        "type": "paragraph",
        "id": "eaaffd09f1c0c8ba",
        "text": "The browser stores a list of user verified email addresses (certificates issued by the identity providers), and demonstrates the user's ownership of the addresses to the website using cryptographic proof.\n\n"
      },
      "after": "72afbf5dabc85a40",
      "date": 1429134411296
    },
    {
      "type": "add",
      "id": "4ab159f2afaaba5b",
      "item": {
        "type": "paragraph",
        "id": "4ab159f2afaaba5b",
        "text": "The certificates must be renewed every 24 hours by logging-in to the identity provider (which will usually mean entering the email and a password in a Web form on the identify provider's site). Once done, they will be usable for authenticating to web sites with the same browser for the rest of the day, without entering passwords again (Single Sign-On).\n"
      },
      "after": "eaaffd09f1c0c8ba",
      "date": 1429134415753
    },
    {
      "type": "add",
      "id": "e03a5e512c2e6f61",
      "item": {
        "type": "paragraph",
        "id": "e03a5e512c2e6f61",
        "text": "<H3>How it works"
      },
      "after": "0a19a039da6536ea",
      "date": 1429134427898
    },
    {
      "type": "edit",
      "id": "e03a5e512c2e6f61",
      "item": {
        "type": "html",
        "id": "e03a5e512c2e6f61",
        "text": "<H3>How it works"
      },
      "date": 1429134429762
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "7375576c5ba6c430",
        "8cb185ad15088fbb",
        "0a19a039da6536ea",
        "e03a5e512c2e6f61",
        "4ab159f2afaaba5b",
        "72afbf5dabc85a40",
        "eaaffd09f1c0c8ba"
      ],
      "id": "4ab159f2afaaba5b",
      "date": 1429134438218
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "72afbf5dabc85a40",
        "7375576c5ba6c430",
        "8cb185ad15088fbb",
        "0a19a039da6536ea",
        "e03a5e512c2e6f61",
        "4ab159f2afaaba5b",
        "eaaffd09f1c0c8ba"
      ],
      "id": "72afbf5dabc85a40",
      "date": 1429134446076
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "72afbf5dabc85a40",
        "7375576c5ba6c430",
        "8cb185ad15088fbb",
        "0a19a039da6536ea",
        "e03a5e512c2e6f61",
        "eaaffd09f1c0c8ba",
        "4ab159f2afaaba5b"
      ],
      "id": "eaaffd09f1c0c8ba",
      "date": 1429134452039
    },
    {
      "type": "edit",
      "id": "4ab159f2afaaba5b",
      "item": {
        "type": "paragraph",
        "id": "4ab159f2afaaba5b",
        "text": "The certificates must be renewed every 24 hours by logging-in to the identity provider (which will usually mean entering the email and a password in a Web form on the identify provider's site). "
      },
      "date": 1429134456769
    },
    {
      "type": "add",
      "id": "700c9f60ec29d072",
      "item": {
        "type": "paragraph",
        "id": "700c9f60ec29d072",
        "text": "Once done, they will be usable for authenticating to web sites with the same browser for the rest of the day, without entering passwords again ([[Single Sign-On]]).\n"
      },
      "after": "4ab159f2afaaba5b",
      "date": 1429134462707
    },
    {
      "type": "add",
      "id": "3386c3c2bb50ce01",
      "item": {
        "type": "paragraph",
        "id": "3386c3c2bb50ce01",
        "text": "Persona allows you to sign in to sites using any of your existing email addresses; and if you use Yahoo! or Gmail for email, you will be able to sign in without having to create a new password.\n\n"
      },
      "after": "0a19a039da6536ea",
      "date": 1429134745253
    },
    {
      "type": "add",
      "id": "1bfa3082efbe776d",
      "item": {
        "type": "paragraph",
        "id": "1bfa3082efbe776d",
        "text": "<H3>Roam free"
      },
      "after": "3386c3c2bb50ce01",
      "date": 1429134747949
    },
    {
      "type": "edit",
      "id": "1bfa3082efbe776d",
      "item": {
        "type": "html",
        "id": "1bfa3082efbe776d",
        "text": "<H3>Roam free"
      },
      "date": 1429134749253
    },
    {
      "type": "add",
      "id": "f65864a1f78b9899",
      "item": {
        "type": "paragraph",
        "id": "f65864a1f78b9899",
        "text": "Many sign-in systems track your behavior around the web; and some even share that info with other sites and social networks. We believe you should control how your personal information is shared. Signing in using Persona requires only a valid email address; allowing you to provide personal information on as-needed basis, when and where you think it’s appropriate."
      },
      "after": "1bfa3082efbe776d",
      "date": 1429134752181
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "3386c3c2bb50ce01",
        "72afbf5dabc85a40",
        "7375576c5ba6c430",
        "8cb185ad15088fbb",
        "0a19a039da6536ea",
        "1bfa3082efbe776d",
        "f65864a1f78b9899",
        "e03a5e512c2e6f61",
        "eaaffd09f1c0c8ba",
        "4ab159f2afaaba5b",
        "700c9f60ec29d072"
      ],
      "id": "3386c3c2bb50ce01",
      "date": 1429134756964
    },
    {
      "type": "edit",
      "id": "3386c3c2bb50ce01",
      "item": {
        "type": "paragraph",
        "id": "3386c3c2bb50ce01",
        "text": "Persona allows you to sign in to sites using any of your existing email addresses; and if you use Yahoo! or Gmail for email, you can sign in without having to create a new password.\n\n"
      },
      "date": 1429134773046
    },
    {
      "type": "edit",
      "id": "3386c3c2bb50ce01",
      "item": {
        "type": "paragraph",
        "id": "3386c3c2bb50ce01",
        "text": "Persona allows you to sign in to sites using any of your existing email addresses; and if you use Yahoo! or Gmail for email, you can sign in without having to create a new password - [https://www.mozilla.org/en-US/persona/ mozilla.org]\n\n"
      },
      "date": 1429134809136
    },
    {
      "type": "fork",
      "site": "c0de.academy",
      "date": 1429134839539
    },
    {
      "type": "edit",
      "id": "72afbf5dabc85a40",
      "item": {
        "type": "paragraph",
        "id": "72afbf5dabc85a40",
        "text": "<H3>FedWiki Hack"
      },
      "date": 1429134900567
    },
    {
      "type": "add",
      "id": "69d2fbd616daff7a",
      "item": {
        "type": "paragraph",
        "id": "69d2fbd616daff7a",
        "text": "Persona is not so easy to cal from outside of the browser environment. The best way to use Persona based authentication in a non-web app is to use an embedded browser to login, and then:"
      },
      "after": "72afbf5dabc85a40",
      "date": 1429134976739
    },
    {
      "type": "add",
      "id": "3e22c6d18fa18836",
      "item": {
        "type": "paragraph",
        "id": "3e22c6d18fa18836",
        "text": "What I would do is show a Web UI the first time (authenticating with Persona) and then exchange a secret token between the server and the client. You then include the token along with each request to the REST API.\n\nThat way you'd be using Persona for the initial authentication, then you'd be using a token-based system for authorization."
      },
      "after": "69d2fbd616daff7a",
      "date": 1429134995874
    },
    {
      "type": "remove",
      "id": "f65864a1f78b9899",
      "date": 1429135007343
    },
    {
      "type": "remove",
      "id": "1bfa3082efbe776d",
      "date": 1429135011605
    },
    {
      "type": "edit",
      "id": "7375576c5ba6c430",
      "item": {
        "type": "paragraph",
        "id": "7375576c5ba6c430",
        "text": "\n"
      },
      "date": 1429135013531
    },
    {
      "type": "remove",
      "id": "8cb185ad15088fbb",
      "date": 1429135017104
    },
    {
      "type": "remove",
      "id": "0a19a039da6536ea",
      "date": 1429135024079
    },
    {
      "item": {
        "type": "factory",
        "id": "9127553617cd32c2"
      },
      "id": "9127553617cd32c2",
      "type": "add",
      "after": "700c9f60ec29d072",
      "date": 1429135038096
    },
    {
      "type": "edit",
      "id": "9127553617cd32c2",
      "item": {
        "type": "reference",
        "id": "9127553617cd32c2",
        "site": "c0de.academy",
        "slug": "mozilla-persona",
        "title": "Mozilla Persona",
        "text": "Mozilla Persona is a decentralized authentication system for the web based on the open [[BrowserID Protocol]] prototyped by Mozilla - [http://en.wikipedia.org/wiki/Mozilla_Persona wikipedia]"
      },
      "date": 1429135039872
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "9127553617cd32c2",
        "3386c3c2bb50ce01",
        "72afbf5dabc85a40",
        "69d2fbd616daff7a",
        "3e22c6d18fa18836",
        "7375576c5ba6c430",
        "e03a5e512c2e6f61",
        "eaaffd09f1c0c8ba",
        "4ab159f2afaaba5b",
        "700c9f60ec29d072"
      ],
      "id": "9127553617cd32c2",
      "date": 1429135046849
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "3386c3c2bb50ce01",
        "9127553617cd32c2",
        "72afbf5dabc85a40",
        "69d2fbd616daff7a",
        "3e22c6d18fa18836",
        "7375576c5ba6c430",
        "e03a5e512c2e6f61",
        "eaaffd09f1c0c8ba",
        "4ab159f2afaaba5b",
        "700c9f60ec29d072"
      ],
      "id": "3386c3c2bb50ce01",
      "date": 1429135051775
    },
    {
      "type": "edit",
      "id": "72afbf5dabc85a40",
      "item": {
        "type": "html",
        "id": "72afbf5dabc85a40",
        "text": "<H3>FedWiki Hack"
      },
      "date": 1429135053852
    },
    {
      "item": {
        "type": "factory",
        "id": "08a2982edfcb0b1f"
      },
      "id": "08a2982edfcb0b1f",
      "type": "add",
      "after": "700c9f60ec29d072",
      "date": 1429135057619
    },
    {
      "item": {
        "type": "factory",
        "id": "fab47c6d256799ed"
      },
      "id": "fab47c6d256799ed",
      "type": "add",
      "after": "08a2982edfcb0b1f",
      "date": 1429135062485
    },
    {
      "type": "edit",
      "id": "08a2982edfcb0b1f",
      "item": {
        "type": "pagefold",
        "id": "08a2982edfcb0b1f",
        "text": "Quote"
      },
      "date": 1429135091174
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "3386c3c2bb50ce01",
        "9127553617cd32c2",
        "72afbf5dabc85a40",
        "69d2fbd616daff7a",
        "3e22c6d18fa18836",
        "7375576c5ba6c430",
        "e03a5e512c2e6f61",
        "eaaffd09f1c0c8ba",
        "fab47c6d256799ed",
        "4ab159f2afaaba5b",
        "700c9f60ec29d072",
        "08a2982edfcb0b1f"
      ],
      "id": "fab47c6d256799ed",
      "date": 1429135096546
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "3386c3c2bb50ce01",
        "9127553617cd32c2",
        "72afbf5dabc85a40",
        "69d2fbd616daff7a",
        "08a2982edfcb0b1f",
        "3e22c6d18fa18836",
        "7375576c5ba6c430",
        "e03a5e512c2e6f61",
        "eaaffd09f1c0c8ba",
        "fab47c6d256799ed",
        "4ab159f2afaaba5b",
        "700c9f60ec29d072"
      ],
      "id": "08a2982edfcb0b1f",
      "date": 1429135103221
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "3386c3c2bb50ce01",
        "9127553617cd32c2",
        "72afbf5dabc85a40",
        "69d2fbd616daff7a",
        "08a2982edfcb0b1f",
        "3e22c6d18fa18836",
        "fab47c6d256799ed",
        "7375576c5ba6c430",
        "e03a5e512c2e6f61",
        "eaaffd09f1c0c8ba",
        "4ab159f2afaaba5b",
        "700c9f60ec29d072"
      ],
      "id": "fab47c6d256799ed",
      "date": 1429135105853
    },
    {
      "type": "edit",
      "id": "fab47c6d256799ed",
      "item": {
        "type": "pagefold",
        "id": "fab47c6d256799ed",
        "text": "."
      },
      "date": 1429135110348
    },
    {
      "type": "edit",
      "id": "69d2fbd616daff7a",
      "item": {
        "type": "paragraph",
        "id": "69d2fbd616daff7a",
        "text": "Persona is not so easy to call from outside of the browser environment. The best way to use Persona based authentication in a non-web app is to use an embedded browser to login, and then:"
      },
      "date": 1429135485657
    },
    {
      "type": "edit",
      "id": "3386c3c2bb50ce01",
      "item": {
        "type": "paragraph",
        "id": "3386c3c2bb50ce01",
        "text": "\n"
      },
      "date": 1429135492327
    },
    {
      "type": "add",
      "id": "8644f1933821df33",
      "item": {
        "type": "paragraph",
        "id": "8644f1933821df33",
        "text": "There are some libraries available for OSX clients and servers in the context of using Persoan outside of a browser based environment - [https://hacks.mozilla.org/2013/04/mozilla-persona-for-the-non-web/ hacks.mozilla.org]"
      },
      "after": "e03a5e512c2e6f61",
      "date": 1429135547514
    },
    {
      "type": "move",
      "order": [
        "5f73f75b85b871b0",
        "3386c3c2bb50ce01",
        "9127553617cd32c2",
        "72afbf5dabc85a40",
        "69d2fbd616daff7a",
        "08a2982edfcb0b1f",
        "3e22c6d18fa18836",
        "fab47c6d256799ed",
        "8644f1933821df33",
        "7375576c5ba6c430",
        "e03a5e512c2e6f61",
        "eaaffd09f1c0c8ba",
        "4ab159f2afaaba5b",
        "700c9f60ec29d072"
      ],
      "id": "8644f1933821df33",
      "date": 1429135580870
    },
    {
      "type": "add",
      "id": "30f389d771745576",
      "item": {
        "type": "paragraph",
        "id": "30f389d771745576",
        "text": "<H3>libbrowserid\nlibbrowserid is a C library for generating and verifying Mozilla Persona (BrowserID) assertions. This source distribution also includes a GSS/SASL mechanism based on the BrowserID protocol, but that is not built by default."
      },
      "after": "8644f1933821df33",
      "date": 1429135593859
    },
    {
      "type": "edit",
      "id": "30f389d771745576",
      "item": {
        "type": "paragraph",
        "id": "30f389d771745576",
        "text": "<H3>libbrowserid"
      },
      "date": 1429135599689
    },
    {
      "type": "edit",
      "id": "30f389d771745576",
      "item": {
        "type": "html",
        "id": "30f389d771745576",
        "text": "<H3>libbrowserid"
      },
      "date": 1429135601635
    },
    {
      "type": "add",
      "id": "1991fada243a9b24",
      "item": {
        "type": "paragraph",
        "id": "1991fada243a9b24",
        "text": "libbrowserid is a C library for generating and verifying Mozilla Persona (BrowserID) assertions. This source distribution also includes a GSS/SASL mechanism based on the BrowserID protocol, but that is not built by default."
      },
      "after": "30f389d771745576",
      "date": 1429135603199
    },
    {
      "type": "edit",
      "id": "1991fada243a9b24",
      "item": {
        "type": "paragraph",
        "id": "1991fada243a9b24",
        "text": "libbrowserid is a C library for generating and verifying Mozilla Persona (BrowserID) assertions. This source distribution also includes a GSS/SASL mechanism based on the BrowserID protocol, but that is not built by default - [https://github.com/PADL/libbrowserid github.com]"
      },
      "date": 1429135617027
    },
    {
      "type": "edit",
      "id": "8644f1933821df33",
      "item": {
        "type": "paragraph",
        "id": "8644f1933821df33",
        "text": "The trick here is that it's hard to automate the client-side half of a \ngeneric Persona login session - the protocol is explicitly build around \na user interacting with a user-agent displaying HTML/JS pages. \n\nOne option that seems to work quite well is to pair Persona for \ninteractive login with a request-signing scheme for automated login.  I \ndescribe how we've done it for some Mozilla Services projects in this \nblog post: \n\n    https://www.rfk.id.au/blog/entry/securing-pyramid-persona-macauth/ "
      },
      "date": 1429135695037
    },
    {
      "type": "add",
      "id": "e66c543ada16a826",
      "item": {
        "type": "paragraph",
        "id": "e66c543ada16a826",
        "text": "There are some libraries available for OSX clients and servers in the context of using Persona outside of a browser based environment - [https://hacks.mozilla.org/2013/04/mozilla-persona-for-the-non-web/ hacks.mozilla.org]"
      },
      "after": "8644f1933821df33",
      "date": 1429135698773
    },
    {
      "type": "edit",
      "id": "8644f1933821df33",
      "item": {
        "type": "paragraph",
        "id": "8644f1933821df33",
        "text": "The trick here is that it's hard to automate the client-side half of a generic Persona login session - the protocol is explicitly build around a user interacting with a user-agent displaying HTML/JS pages. \n\n"
      },
      "date": 1429135723702
    },
    {
      "type": "add",
      "id": "bbd78208f48486e6",
      "item": {
        "type": "paragraph",
        "id": "bbd78208f48486e6",
        "text": "One option that seems to work quite well is to pair Persona for interactive login with a request-signing scheme for automated login.  I describe how we've done it for some Mozilla Services projects in this blog post: [https://www.rfk.id.au/blog/entry/securing-pyramid-persona-macauth/  rfk.id.au]\n\n    "
      },
      "after": "8644f1933821df33",
      "date": 1429135739528
    }
  ]
}