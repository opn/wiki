{
  "title": "Domain-specific language",
  "journal": [
    {
      "date": 1523521849088,
      "type": "create",
      "item": {
        "story": "",
        "title": "Domain-specific language"
      }
    },
    {
      "type": "fork",
      "date": 1523521838165
    },
    {
      "type": "edit",
      "id": "2d1a26cb-8ad2-422a-b6f9-f8a20f144a57",
      "item": {
        "type": "markdown",
        "id": "2d1a26cb-8ad2-422a-b6f9-f8a20f144a57",
        "text": "- [[Use]]\n- [[Overview]]\n- [[Domain-specific language topics]]\n- [[Examples]]\n- [[Advantages and disadvantages]]\n- [[Tools for designing domain-specific languages]]\n\n"
      },
      "date": 1523522060555
    },
    {
      "type": "add",
      "id": "22c1451a7c1a54f3",
      "item": {
        "type": "markdown",
        "id": "22c1451a7c1a54f3",
        "text": "- [[Domain Specific Legal Language]]\n- [[DSLs in Javascript]]"
      },
      "after": "2d1a26cb-8ad2-422a-b6f9-f8a20f144a57",
      "date": 1523522074129
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "ba34487f-b8d7-499d-b7eb-d8ddecd54d00",
        "text": "* Domain-specific languages allow solutions to be expressed in the idiom and at the level of abstraction of the problem domain. The idea is that domain experts themselves may understand, validate, modify, and often even develop domain-specific language programs. However, this is seldom the case.[ Domain Specific Languages in a Customs Information System]\n* Domain-specific languages allow [[Computer security|validation]] at the domain level.  As long as the language constructs are safe any sentence written with them can be considered safe.\n* Domain-specific languages can help to shift the development of business information systems from traditional software developers to the typically larger group of domain-experts who (despite having less technical expertise) have deeper knowledge of the domain.[http://www.jisajournal.com/content/pdf/s13174-015-0030-8.pdf Multilayered analysis of co-development of business information systems]\n* Domain-specific languages are easier to learn, given their limited scope."
      },
      "after": "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
      "id": "ba34487f-b8d7-499d-b7eb-d8ddecd54d00",
      "date": 1523522107820
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
        "text": "Some of the advantages:<ref name='Mernik05'/><ref name='Spinellis01'/>"
      },
      "after": "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
      "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
      "date": 1523522112382
    },
    {
      "type": "edit",
      "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
      "item": {
        "type": "paragraph",
        "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
        "text": "Some of the advantages:"
      },
      "date": 1523522117966
    },
    {
      "type": "edit",
      "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
      "item": {
        "type": "paragraph",
        "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
        "text": "# Advantages"
      },
      "date": 1523522124285
    },
    {
      "type": "edit",
      "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
      "item": {
        "type": "markdown",
        "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
        "text": "# Advantages"
      },
      "date": 1523522125556
    },
    {
      "type": "add",
      "id": "3ab349dc0934a7ac",
      "item": {
        "type": "paragraph",
        "id": "3ab349dc0934a7ac",
        "text": "Some of the advantages:"
      },
      "after": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
      "date": 1523522126146
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
        "text": "Some of the disadvantages:"
      },
      "after": "ba34487f-b8d7-499d-b7eb-d8ddecd54d00",
      "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
      "date": 1523522130140
    },
    {
      "type": "edit",
      "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
      "item": {
        "type": "paragraph",
        "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
        "text": "# Disadvantages"
      },
      "date": 1523522139222
    },
    {
      "type": "edit",
      "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
      "item": {
        "type": "markdown",
        "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
        "text": "# Disadvantages"
      },
      "date": 1523522140772
    },
    {
      "type": "add",
      "id": "6b40ce41e7f6c377",
      "item": {
        "type": "paragraph",
        "id": "6b40ce41e7f6c377",
        "text": "Some of the disadvantages:"
      },
      "after": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
      "date": 1523522142074
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "283f3636-4574-471a-8940-19362733979f",
        "text": "* Cost of learning a new language vs. its limited applicability\n* Cost of designing, implementing, and maintaining a domain-specific language as well as the tools required to develop with it ([[Integrated Development Environment|IDE]])\n* Finding, setting, and maintaining proper scope.\n* Difficulty of balancing trade-offs between domain-specificity and general-purpose programming language constructs.\n* Potential loss of processor [[algorithmic efficiency|efficiency]] compared with hand-coded software.\n* Proliferation of similar non-standard domain-specific languages, for example, a DSL used within one insurance company versus a DSL used within another insurance company.[http://adams-project.org/standrts09/proceedings/miotto_vardanega_standrts09_final.pdf On the integration of domain-specific and scientific bodies of knowledge in Model Driven Engineering]\n* Non-technical domain experts can find it hard to write or modify DSL programs by themselves.<ref name=\"Freudenthal\"/>\n* Increased difficulty of integrating the DSL with other components of the IT system (as compared to integrating with a general-purpose language).\n* Low supply of experts in a particular DSL tends to raise labor costs.\n* Harder to find code examples."
      },
      "after": "ba34487f-b8d7-499d-b7eb-d8ddecd54d00",
      "id": "283f3636-4574-471a-8940-19362733979f",
      "date": 1523522146077
    },
    {
      "type": "move",
      "order": [
        "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
        "8c8e9987-96b2-4945-8e3e-536eee6e3255",
        "3ab349dc0934a7ac",
        "ba34487f-b8d7-499d-b7eb-d8ddecd54d00",
        "ff717ff0-8cec-44b1-b725-ae19fa057b79",
        "283f3636-4574-471a-8940-19362733979f",
        "6b40ce41e7f6c377",
        "aa24bbd7-7828-4bc4-b691-357a33974b81",
        "97c72fab-ece0-4efc-b1b2-58133ca67ae7",
        "6e4ea9ca-74f0-425a-b4c8-335f07a5f548",
        "2ca8194c-abac-4589-8772-51087195030d",
        "4d0e27e5-8bb8-4cb7-a380-18ba2bd88e97",
        "39ab8e7f-d12f-4d58-bd05-989fa72971aa",
        "05265bf2-d251-42a4-bc25-877d77f4b987",
        "a2f8d99e-dee5-4341-ae7b-42d983cef18f",
        "8de88bf5-8044-47e2-aee4-5f710c66fada",
        "2d1a26cb-8ad2-422a-b6f9-f8a20f144a57",
        "22c1451a7c1a54f3"
      ],
      "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
      "date": 1523522149336
    },
    {
      "type": "remove",
      "id": "6b40ce41e7f6c377",
      "date": 1523522152514
    },
    {
      "type": "edit",
      "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
      "item": {
        "type": "markdown",
        "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
        "text": "# Disadvantages\n\nSome of the disadvantages:"
      },
      "date": 1523522157311
    },
    {
      "type": "remove",
      "id": "3ab349dc0934a7ac",
      "date": 1523522161853
    },
    {
      "type": "edit",
      "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
      "item": {
        "type": "markdown",
        "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
        "text": "# Advantages\n\nSome of the advantages:"
      },
      "date": 1523522165669
    },
    {
      "type": "edit",
      "id": "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
      "item": {
        "type": "paragraph",
        "id": "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
        "text": "A domain-specific language (DSL) is a computer language specialized to a particular application domain - [https://en.wikipedia.org/wiki/Domain-specific_language wikipedia]"
      },
      "date": 1523522186199
    },
    {
      "type": "add",
      "id": "30cc96252d716276",
      "item": {
        "type": "paragraph",
        "id": "30cc96252d716276",
        "text": "This is in contrast to a general-purpose language, which is broadly applicable across domains. "
      },
      "after": "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
      "date": 1523522201607
    },
    {
      "type": "add",
      "id": "651e0d895fcbfb96",
      "item": {
        "type": "paragraph",
        "id": "651e0d895fcbfb96",
        "text": "There is a wide variety of DSLs, ranging from widely used languages for common domains, such as HTML for web pages, down to languages used by only one or a few pieces of software, such as Emacs Lisp for GNU Emacs and XEmacs. DSLs can be further subdivided by the kind of language, and include domain-specific markup languages, domain-specific modeling languages, and domain-specific programming languages. Special-purpose computer languages have always existed in the computer age, but the term \"domain-specific language\" has become more popular due to the rise of domain-specific modeling. Simpler DSLs, particularly ones used by a single application, are sometimes informally called mini-languages."
      },
      "after": "30cc96252d716276",
      "date": 1523522202855
    },
    {
      "type": "remove",
      "id": "30cc96252d716276",
      "date": 1523522205352
    },
    {
      "type": "edit",
      "id": "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
      "item": {
        "type": "paragraph",
        "id": "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
        "text": "A domain-specific language (DSL) is a computer language specialized to a particular application domain. This is in contrast to a general-purpose language, which is broadly applicable across domains - [https://en.wikipedia.org/wiki/Domain-specific_language wikipedia]"
      },
      "date": 1523522213013
    },
    {
      "type": "edit",
      "id": "651e0d895fcbfb96",
      "item": {
        "type": "paragraph",
        "id": "651e0d895fcbfb96",
        "text": "There is a wide variety of DSLs, ranging from widely used languages for common domains, such as HTML for web pages, down to languages used by only one or a few pieces of software, such as Emacs Lisp for GNU Emacs and XEmacs. "
      },
      "date": 1523522225207
    },
    {
      "type": "add",
      "id": "51795825f4970b62",
      "item": {
        "type": "paragraph",
        "id": "51795825f4970b62",
        "text": "DSLs can be further subdivided by the kind of language, and include domain-specific markup languages, domain-specific modeling languages, and domain-specific programming languages. "
      },
      "after": "651e0d895fcbfb96",
      "date": 1523522229167
    },
    {
      "type": "add",
      "id": "515e62cd1f315ad7",
      "item": {
        "type": "paragraph",
        "id": "515e62cd1f315ad7",
        "text": "Special-purpose computer languages have always existed in the computer age, but the term \"domain-specific language\" has become more popular due to the rise of domain-specific modeling. Simpler DSLs, particularly ones used by a single application, are sometimes informally called [[Mini-languages]]."
      },
      "after": "51795825f4970b62",
      "date": 1523522249742
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "64ea1cb8-9472-43ba-a9f1-de3ce6b5d44b",
      "text": "A domain-specific language (DSL) is a computer language specialized to a particular application domain. This is in contrast to a general-purpose language, which is broadly applicable across domains - [https://en.wikipedia.org/wiki/Domain-specific_language wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "651e0d895fcbfb96",
      "text": "There is a wide variety of DSLs, ranging from widely used languages for common domains, such as HTML for web pages, down to languages used by only one or a few pieces of software, such as Emacs Lisp for GNU Emacs and XEmacs. "
    },
    {
      "type": "paragraph",
      "id": "51795825f4970b62",
      "text": "DSLs can be further subdivided by the kind of language, and include domain-specific markup languages, domain-specific modeling languages, and domain-specific programming languages. "
    },
    {
      "type": "paragraph",
      "id": "515e62cd1f315ad7",
      "text": "Special-purpose computer languages have always existed in the computer age, but the term \"domain-specific language\" has become more popular due to the rise of domain-specific modeling. Simpler DSLs, particularly ones used by a single application, are sometimes informally called [[Mini-languages]]."
    },
    {
      "type": "markdown",
      "id": "8c8e9987-96b2-4945-8e3e-536eee6e3255",
      "text": "# Advantages\n\nSome of the advantages:"
    },
    {
      "type": "markdown",
      "id": "ba34487f-b8d7-499d-b7eb-d8ddecd54d00",
      "text": "* Domain-specific languages allow solutions to be expressed in the idiom and at the level of abstraction of the problem domain. The idea is that domain experts themselves may understand, validate, modify, and often even develop domain-specific language programs. However, this is seldom the case.[ Domain Specific Languages in a Customs Information System]\n* Domain-specific languages allow [[Computer security|validation]] at the domain level.  As long as the language constructs are safe any sentence written with them can be considered safe.\n* Domain-specific languages can help to shift the development of business information systems from traditional software developers to the typically larger group of domain-experts who (despite having less technical expertise) have deeper knowledge of the domain.[http://www.jisajournal.com/content/pdf/s13174-015-0030-8.pdf Multilayered analysis of co-development of business information systems]\n* Domain-specific languages are easier to learn, given their limited scope."
    },
    {
      "type": "markdown",
      "id": "ff717ff0-8cec-44b1-b725-ae19fa057b79",
      "text": "# Disadvantages\n\nSome of the disadvantages:"
    },
    {
      "type": "markdown",
      "id": "283f3636-4574-471a-8940-19362733979f",
      "text": "* Cost of learning a new language vs. its limited applicability\n* Cost of designing, implementing, and maintaining a domain-specific language as well as the tools required to develop with it ([[Integrated Development Environment|IDE]])\n* Finding, setting, and maintaining proper scope.\n* Difficulty of balancing trade-offs between domain-specificity and general-purpose programming language constructs.\n* Potential loss of processor [[algorithmic efficiency|efficiency]] compared with hand-coded software.\n* Proliferation of similar non-standard domain-specific languages, for example, a DSL used within one insurance company versus a DSL used within another insurance company.[http://adams-project.org/standrts09/proceedings/miotto_vardanega_standrts09_final.pdf On the integration of domain-specific and scientific bodies of knowledge in Model Driven Engineering]\n* Non-technical domain experts can find it hard to write or modify DSL programs by themselves.<ref name=\"Freudenthal\"/>\n* Increased difficulty of integrating the DSL with other components of the IT system (as compared to integrating with a general-purpose language).\n* Low supply of experts in a particular DSL tends to raise labor costs.\n* Harder to find code examples."
    },
    {
      "type": "markdown",
      "id": "aa24bbd7-7828-4bc4-b691-357a33974b81",
      "text": "# Sections"
    },
    {
      "type": "html",
      "id": "97c72fab-ece0-4efc-b1b2-58133ca67ae7",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Use'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Domain-specific language&action=edit&section=1'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "6e4ea9ca-74f0-425a-b4c8-335f07a5f548",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Overview'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Domain-specific language&action=edit&section=2'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "2ca8194c-abac-4589-8772-51087195030d",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Domain-specific_language_topics'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Domain-specific language&action=edit&section=5'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "4d0e27e5-8bb8-4cb7-a380-18ba2bd88e97",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Examples'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Domain-specific language&action=edit&section=9'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "39ab8e7f-d12f-4d58-bd05-989fa72971aa",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Advantages_and_disadvantages'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Domain-specific language&action=edit&section=24'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "05265bf2-d251-42a4-bc25-877d77f4b987",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Tools_for_designing_domain-specific_languages'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Domain-specific language&action=edit&section=25'>\n<input type=submit value=create></form>"
    },
    {
      "type": "html",
      "id": "a2f8d99e-dee5-4341-ae7b-42d983cef18f",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='See_also'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Domain-specific language&action=edit&section=26'>\n<input type=submit value=create></form>"
    },
    {
      "type": "markdown",
      "id": "8de88bf5-8044-47e2-aee4-5f710c66fada",
      "text": "# See also"
    },
    {
      "type": "markdown",
      "id": "2d1a26cb-8ad2-422a-b6f9-f8a20f144a57",
      "text": "- [[Use]]\n- [[Overview]]\n- [[Domain-specific language topics]]\n- [[Examples]]\n- [[Advantages and disadvantages]]\n- [[Tools for designing domain-specific languages]]\n\n"
    },
    {
      "type": "markdown",
      "id": "22c1451a7c1a54f3",
      "text": "- [[Domain Specific Legal Language]]\n- [[DSLs in Javascript]]"
    }
  ]
}