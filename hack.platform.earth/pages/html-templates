{
  "title": "HTML Templates",
  "story": [
    {
      "type": "paragraph",
      "id": "1946c2db4001cbc8",
      "text": "The HTML <template> element represents a template in your markup. It contains \"template contents\"; essentially inert chunks of cloneable DOM. "
    },
    {
      "type": "paragraph",
      "id": "69fefea507dc4c59",
      "text": "Think of templates as pieces of scaffolding that you can use (and reuse) throughout the lifetime of your app."
    },
    {
      "type": "markdown",
      "id": "ee75aef135245311",
      "text": "# Browser coverage"
    },
    {
      "type": "paragraph",
      "id": "e812aee49ba85881",
      "text": "HTML Templates are supported in the latest desktop and mobile browsers - [https://caniuse.com/#feat=template caniuse.com]"
    },
    {
      "type": "markdown",
      "id": "b2f3e2ffdd1a24ac",
      "text": "# Use"
    },
    {
      "type": "paragraph",
      "id": "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
      "text": "HTML template is a way to create insert chunks of HTML that are stamped at will. The syntax of HTML templates look like this:"
    },
    {
      "type": "code",
      "id": "8938000f14dc2c44",
      "text": "<html>\n <template>\n  <p>The HTML you wish to instantiate at will</p>\n </template>\n</html>"
    },
    {
      "type": "html",
      "id": "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
      "text": "</syntaxhighlight>Scripts will not run, and resources that are inside a template will not be fetched until the template is stamped out -\n [http://webcomponents.org/articles/introduction-to-template-element/ webcomponents.org]"
    },
    {
      "type": "video",
      "id": "495b5237695254e1",
      "text": "YOUTUBE qC5xK6H0GlQ\n[[Web Components]] are a set of technologies that changes the way you develop web apps entirely. By making components scoped and reusable in standardized way, your web development will step up to the next level. In this video, you will learn how to work with Template."
    },
    {
      "type": "paragraph",
      "id": "69d611e164be67e8",
      "text": "To create a templated content, declare some markup and wrap it in the <template> element:"
    },
    {
      "type": "code",
      "id": "4fd20e75a77bb15a",
      "text": "<template id=\"mytemplate\">\n  <img src=\"\" alt=\"great image\">\n  <div class=\"comment\"></div>\n</template>"
    },
    {
      "type": "paragraph",
      "id": "2cd548c0536e20d2",
      "text": "The observant reader may notice the empty image. That's perfectly fine and intentional. A broken image won't 404 or produce console errors because it won't be fetched on page load. We can dynamically generate the source URL later on - [https://www.html5rocks.com/en/tutorials/webcomponents/template/ html5rocks]\n"
    },
    {
      "type": "markdown",
      "id": "e8eaab7469ad255d",
      "text": "# The pillars"
    },
    {
      "type": "paragraph",
      "id": "c3b8c2cc83600fc2",
      "text": "Wrapping content in a <template> gives us few important properties."
    },
    {
      "type": "markdown",
      "id": "010f701338624a03",
      "text": "- Its content is effectively inert until activated. Essentially, your markup is hidden DOM and does not render.\n- Any content within a template won't have side effects. Script doesn't run, images don't load, audio doesn't play,...until the template is used.\n- Content is considered not to be in the document. Using document.getElementById() or querySelector() in the main page won't return child nodes of a template.\n- Templates can be placed anywhere inside of <head>, <body>, or <frameset> and can contain any type of content which is allowed in those elements. Note that \"anywhere\" means that <template> can safely be used in places that the HTML parser disallows...all but content model children. It can also be placed as a child of <table> or <select>:"
    },
    {
      "type": "code",
      "id": "daeaac0e12e5f429",
      "text": "<table>\n<tr>\n  <template id=\"cells-to-repeat\">\n    <td>some content</td>\n  </template>\n</tr>\n</table>"
    },
    {
      "type": "markdown",
      "id": "db8eab26e1819757",
      "text": "# See also\n\n- [[Polymer]]\n- template.js - [https://github.com/webcomponents/template github]\n- Template engines - [https://zellwk.com/blog/nunjucks-with-gulp/ zellwk.com]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "HTML Templates",
        "story": []
      },
      "date": 1520014516902
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
        "text": "HTML template is a way to create insert chunks of HTML that are stamped at will. The syntax of HTML templates look like this:"
      },
      "id": "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
      "date": 1520014519889
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "8938000f14dc2c44",
        "text": "<html>\n    <template>\n        <p>The HTML you wish to instantiate at will</p>\n    </template>\n</html>"
      },
      "after": "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
      "id": "8938000f14dc2c44",
      "date": 1520014523401
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
        "text": "</syntaxhighlight>Scripts will not run, and resources that are inside a template will not be fetched until the template is stamped out -\n [http://webcomponents.org/articles/introduction-to-template-element/ webcomponents.org]"
      },
      "after": "8938000f14dc2c44",
      "id": "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
      "date": 1520014526150
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "17e37877-d9e7-411d-9571-1f42170008ff",
        "text": "<img src='https://www.google.com/s2/favicons?domain=zellwk.com' style='vertical-align: middle; width:16px; height:16px' /><a target=_blank style='vertical-align: middle; padding-left: 10px; padding-right: 12px; text-decoration: none;' href='https://zellwk.com/blog/nunjucks-with-gulp/'>How to Modularize HTML Using Template Engines and Gulp | Zell Liew</a>"
      },
      "after": "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
      "id": "17e37877-d9e7-411d-9571-1f42170008ff",
      "date": 1520014529324
    },
    {
      "item": {
        "type": "factory",
        "id": "495b5237695254e1"
      },
      "id": "495b5237695254e1",
      "type": "add",
      "after": "17e37877-d9e7-411d-9571-1f42170008ff",
      "date": 1520014678281
    },
    {
      "type": "move",
      "order": [
        "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
        "8938000f14dc2c44",
        "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
        "495b5237695254e1",
        "17e37877-d9e7-411d-9571-1f42170008ff"
      ],
      "id": "495b5237695254e1",
      "date": 1520014681507
    },
    {
      "type": "edit",
      "id": "495b5237695254e1",
      "item": {
        "type": "video",
        "id": "495b5237695254e1",
        "text": "YOUTUBE qC5xK6H0GlQ\n(double-click to edit caption)\n"
      },
      "date": 1520014689271
    },
    {
      "type": "edit",
      "id": "495b5237695254e1",
      "item": {
        "type": "video",
        "id": "495b5237695254e1",
        "text": "YOUTUBE qC5xK6H0GlQ\n[[Web Components]] are a set of technologies that changes the way you develop web apps entirely. By making components scoped and reusable in standardized way, your web development will step up to the next level. In this video, you will learn how to work with Template."
      },
      "date": 1520014717373
    },
    {
      "item": {
        "type": "factory",
        "id": "db8eab26e1819757"
      },
      "id": "db8eab26e1819757",
      "type": "add",
      "after": "17e37877-d9e7-411d-9571-1f42170008ff",
      "date": 1520014844983
    },
    {
      "type": "edit",
      "id": "db8eab26e1819757",
      "item": {
        "type": "markdown",
        "id": "db8eab26e1819757",
        "text": "# See also\n- template.js"
      },
      "date": 1520014866096
    },
    {
      "type": "move",
      "order": [
        "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
        "8938000f14dc2c44",
        "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
        "495b5237695254e1",
        "db8eab26e1819757",
        "17e37877-d9e7-411d-9571-1f42170008ff"
      ],
      "id": "17e37877-d9e7-411d-9571-1f42170008ff",
      "date": 1520015204628
    },
    {
      "type": "edit",
      "id": "8938000f14dc2c44",
      "item": {
        "type": "code",
        "id": "8938000f14dc2c44",
        "text": "<html>\n <template>\n  <p>The HTML you wish to instantiate at will</p>\n </template>\n</html>"
      },
      "date": 1520015206365
    },
    {
      "item": {
        "type": "factory",
        "id": "1946c2db4001cbc8"
      },
      "id": "1946c2db4001cbc8",
      "type": "add",
      "after": "17e37877-d9e7-411d-9571-1f42170008ff",
      "date": 1520015208241
    },
    {
      "type": "move",
      "order": [
        "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
        "8938000f14dc2c44",
        "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
        "495b5237695254e1",
        "1946c2db4001cbc8",
        "db8eab26e1819757",
        "17e37877-d9e7-411d-9571-1f42170008ff"
      ],
      "id": "1946c2db4001cbc8",
      "date": 1520015209873
    },
    {
      "type": "edit",
      "id": "1946c2db4001cbc8",
      "item": {
        "type": "paragraph",
        "id": "1946c2db4001cbc8",
        "text": "The HTML <template> element represents a template in your markup. It contains \"template contents\"; essentially inert chunks of cloneable DOM. Think of templates as pieces of scaffolding that you can use (and reuse) throughout the lifetime of your app."
      },
      "date": 1520015227582
    },
    {
      "type": "add",
      "id": "69d611e164be67e8",
      "item": {
        "type": "paragraph",
        "id": "69d611e164be67e8",
        "text": "To create a templated content, declare some markup and wrap it in the <template> element:"
      },
      "after": "1946c2db4001cbc8",
      "date": 1520015232631
    },
    {
      "type": "add",
      "id": "23210f2ae668a351",
      "item": {
        "type": "paragraph",
        "id": "23210f2ae668a351",
        "text": "\n<template id=\"mytemplate\">\n  <img src=\"\" alt=\"great image\">\n  <div class=\"comment\"></div>\n</template>"
      },
      "after": "69d611e164be67e8",
      "date": 1520015235136
    },
    {
      "type": "add",
      "id": "2cd548c0536e20d2",
      "item": {
        "type": "paragraph",
        "id": "2cd548c0536e20d2",
        "text": "The observant reader may notice the empty image. That's perfectly fine and intentional. A broken image won't 404 or produce console errors because it won't be fetched on page load. We can dynamically generate the source URL later on. See the pillars.\n"
      },
      "after": "23210f2ae668a351",
      "date": 1520015239775
    },
    {
      "type": "add",
      "id": "e8eaab7469ad255d",
      "item": {
        "type": "paragraph",
        "id": "e8eaab7469ad255d",
        "text": "# The pillars"
      },
      "after": "2cd548c0536e20d2",
      "date": 1520015244919
    },
    {
      "type": "add",
      "id": "c3b8c2cc83600fc2",
      "item": {
        "type": "paragraph",
        "id": "c3b8c2cc83600fc2",
        "text": "Wrapping content in a <template> gives us few important properties."
      },
      "after": "e8eaab7469ad255d",
      "date": 1520015246655
    },
    {
      "type": "add",
      "id": "010f701338624a03",
      "item": {
        "type": "paragraph",
        "id": "010f701338624a03",
        "text": "\nIts content is effectively inert until activated. Essentially, your markup is hidden DOM and does not render."
      },
      "after": "c3b8c2cc83600fc2",
      "date": 1520015248904
    },
    {
      "type": "add",
      "id": "425be3858880fc53",
      "item": {
        "type": "paragraph",
        "id": "425be3858880fc53",
        "text": "\nAny content within a template won't have side effects. Script doesn't run, images don't load, audio doesn't play,...until the template is used.\n\n"
      },
      "after": "010f701338624a03",
      "date": 1520015251687
    },
    {
      "type": "add",
      "id": "6be4622c85deae8e",
      "item": {
        "type": "paragraph",
        "id": "6be4622c85deae8e",
        "text": "Content is considered not to be in the document. Using document.getElementById() or querySelector() in the main page won't return child nodes of a template.\n\n"
      },
      "after": "425be3858880fc53",
      "date": 1520015255479
    },
    {
      "type": "add",
      "id": "53c47f9c19b657fd",
      "item": {
        "type": "paragraph",
        "id": "53c47f9c19b657fd",
        "text": "Templates can be placed anywhere inside of <head>, <body>, or <frameset> and can contain any type of content which is allowed in those elements. Note that \"anywhere\" means that <template> can safely be used in places that the HTML parser disallows...all but content model children. It can also be placed as a child of <table> or <select>:"
      },
      "after": "6be4622c85deae8e",
      "date": 1520015259426
    },
    {
      "item": {
        "type": "factory",
        "id": "daeaac0e12e5f429"
      },
      "id": "daeaac0e12e5f429",
      "type": "add",
      "after": "17e37877-d9e7-411d-9571-1f42170008ff",
      "date": 1520015266265
    },
    {
      "type": "edit",
      "id": "daeaac0e12e5f429",
      "item": {
        "type": "code",
        "id": "daeaac0e12e5f429",
        "text": "<table>\n<tr>\n  <template id=\"cells-to-repeat\">\n    <td>some content</td>\n  </template>\n</tr>\n</table>"
      },
      "date": 1520015270751
    },
    {
      "type": "move",
      "order": [
        "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
        "8938000f14dc2c44",
        "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
        "495b5237695254e1",
        "1946c2db4001cbc8",
        "69d611e164be67e8",
        "23210f2ae668a351",
        "2cd548c0536e20d2",
        "e8eaab7469ad255d",
        "c3b8c2cc83600fc2",
        "010f701338624a03",
        "425be3858880fc53",
        "6be4622c85deae8e",
        "53c47f9c19b657fd",
        "daeaac0e12e5f429",
        "db8eab26e1819757",
        "17e37877-d9e7-411d-9571-1f42170008ff"
      ],
      "id": "daeaac0e12e5f429",
      "date": 1520015272782
    },
    {
      "type": "edit",
      "id": "e8eaab7469ad255d",
      "item": {
        "type": "markdown",
        "id": "e8eaab7469ad255d",
        "text": "# The pillars"
      },
      "date": 1520015278713
    },
    {
      "item": {
        "type": "factory",
        "id": "4fd20e75a77bb15a"
      },
      "id": "4fd20e75a77bb15a",
      "type": "add",
      "after": "17e37877-d9e7-411d-9571-1f42170008ff",
      "date": 1520015287937
    },
    {
      "type": "move",
      "order": [
        "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
        "8938000f14dc2c44",
        "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
        "495b5237695254e1",
        "1946c2db4001cbc8",
        "69d611e164be67e8",
        "23210f2ae668a351",
        "4fd20e75a77bb15a",
        "2cd548c0536e20d2",
        "e8eaab7469ad255d",
        "c3b8c2cc83600fc2",
        "010f701338624a03",
        "425be3858880fc53",
        "6be4622c85deae8e",
        "53c47f9c19b657fd",
        "daeaac0e12e5f429",
        "db8eab26e1819757",
        "17e37877-d9e7-411d-9571-1f42170008ff"
      ],
      "id": "4fd20e75a77bb15a",
      "date": 1520015289850
    },
    {
      "type": "remove",
      "id": "23210f2ae668a351",
      "date": 1520015293079
    },
    {
      "type": "edit",
      "id": "4fd20e75a77bb15a",
      "item": {
        "type": "code",
        "id": "4fd20e75a77bb15a",
        "text": "<template id=\"mytemplate\">\n  <img src=\"\" alt=\"great image\">\n  <div class=\"comment\"></div>\n</template>"
      },
      "date": 1520015294986
    },
    {
      "type": "move",
      "order": [
        "1946c2db4001cbc8",
        "42f7bbd8-0e44-4482-be37-a7ff9d94f83b",
        "8938000f14dc2c44",
        "6e83fa7f-0d9d-4afe-9938-3c47948ee530",
        "495b5237695254e1",
        "69d611e164be67e8",
        "4fd20e75a77bb15a",
        "2cd548c0536e20d2",
        "e8eaab7469ad255d",
        "c3b8c2cc83600fc2",
        "010f701338624a03",
        "425be3858880fc53",
        "6be4622c85deae8e",
        "53c47f9c19b657fd",
        "daeaac0e12e5f429",
        "db8eab26e1819757",
        "17e37877-d9e7-411d-9571-1f42170008ff"
      ],
      "id": "1946c2db4001cbc8",
      "date": 1520015318119
    },
    {
      "type": "edit",
      "id": "1946c2db4001cbc8",
      "item": {
        "type": "paragraph",
        "id": "1946c2db4001cbc8",
        "text": "The HTML <template> element represents a template in your markup. It contains \"template contents\"; essentially inert chunks of cloneable DOM. "
      },
      "date": 1520015322233
    },
    {
      "type": "add",
      "id": "69fefea507dc4c59",
      "item": {
        "type": "paragraph",
        "id": "69fefea507dc4c59",
        "text": "Think of templates as pieces of scaffolding that you can use (and reuse) throughout the lifetime of your app."
      },
      "after": "1946c2db4001cbc8",
      "date": 1520015322561
    },
    {
      "type": "add",
      "id": "ee75aef135245311",
      "item": {
        "type": "paragraph",
        "id": "ee75aef135245311",
        "text": "# Browser coverage"
      },
      "after": "69fefea507dc4c59",
      "date": 1520015771319
    },
    {
      "type": "add",
      "id": "e812aee49ba85881",
      "item": {
        "type": "paragraph",
        "id": "e812aee49ba85881",
        "text": "HTML Templates are supported in the latest desktop and mobile browsers - [https://caniuse.com/#feat=template caniuse.com"
      },
      "after": "ee75aef135245311",
      "date": 1520015804896
    },
    {
      "type": "add",
      "id": "b2f3e2ffdd1a24ac",
      "item": {
        "type": "paragraph",
        "id": "b2f3e2ffdd1a24ac",
        "text": "# Use"
      },
      "after": "e812aee49ba85881",
      "date": 1520015816665
    },
    {
      "type": "edit",
      "id": "b2f3e2ffdd1a24ac",
      "item": {
        "type": "markdown",
        "id": "b2f3e2ffdd1a24ac",
        "text": "# Use"
      },
      "date": 1520015817500
    },
    {
      "type": "edit",
      "id": "ee75aef135245311",
      "item": {
        "type": "markdown",
        "id": "ee75aef135245311",
        "text": "# Browser coverage"
      },
      "date": 1520015818646
    },
    {
      "type": "edit",
      "id": "e812aee49ba85881",
      "item": {
        "type": "paragraph",
        "id": "e812aee49ba85881",
        "text": "HTML Templates are supported in the latest desktop and mobile browsers - [https://caniuse.com/#feat=template caniuse.com]"
      },
      "date": 1520015822504
    },
    {
      "type": "edit",
      "id": "2cd548c0536e20d2",
      "item": {
        "type": "paragraph",
        "id": "2cd548c0536e20d2",
        "text": "The observant reader may notice the empty image. That's perfectly fine and intentional. A broken image won't 404 or produce console errors because it won't be fetched on page load. We can dynamically generate the source URL later on. See the pillars - [https://www.html5rocks.com/en/tutorials/webcomponents/template/ html5rocks]\n"
      },
      "date": 1520015958388
    },
    {
      "type": "edit",
      "id": "2cd548c0536e20d2",
      "item": {
        "type": "paragraph",
        "id": "2cd548c0536e20d2",
        "text": "The observant reader may notice the empty image. That's perfectly fine and intentional. A broken image won't 404 or produce console errors because it won't be fetched on page load. We can dynamically generate the source URL later on - [https://www.html5rocks.com/en/tutorials/webcomponents/template/ html5rocks]\n"
      },
      "date": 1520015966476
    },
    {
      "type": "edit",
      "id": "010f701338624a03",
      "item": {
        "type": "paragraph",
        "id": "010f701338624a03",
        "text": "- Its content is effectively inert until activated. Essentially, your markup is hidden DOM and does not render."
      },
      "date": 1520016001749
    },
    {
      "type": "remove",
      "id": "425be3858880fc53",
      "date": 1520016003758
    },
    {
      "type": "edit",
      "id": "010f701338624a03",
      "item": {
        "type": "paragraph",
        "id": "010f701338624a03",
        "text": "- Its content is effectively inert until activated. Essentially, your markup is hidden DOM and does not render.- Any content within a template won't have side effects. Script doesn't run, images don't load, audio doesn't play,...until the template is used.\n\n"
      },
      "date": 1520016008247
    },
    {
      "type": "remove",
      "id": "6be4622c85deae8e",
      "date": 1520016009872
    },
    {
      "type": "edit",
      "id": "010f701338624a03",
      "item": {
        "type": "paragraph",
        "id": "010f701338624a03",
        "text": "- Its content is effectively inert until activated. Essentially, your markup is hidden DOM and does not render.- Any content within a template won't have side effects. Script doesn't run, images don't load, audio doesn't play,...until the template is used.\n- Content is considered not to be in the document. Using document.getElementById() or querySelector() in the main page won't return child nodes of a template.\n\n"
      },
      "date": 1520016016289
    },
    {
      "type": "remove",
      "id": "53c47f9c19b657fd",
      "date": 1520016018392
    },
    {
      "type": "edit",
      "id": "010f701338624a03",
      "item": {
        "type": "factory",
        "id": "010f701338624a03",
        "text": "- Its content is effectively inert until activated. Essentially, your markup is hidden DOM and does not render.- Any content within a template won't have side effects. Script doesn't run, images don't load, audio doesn't play,...until the template is used.\n- Content is considered not to be in the document. Using document.getElementById() or querySelector() in the main page won't return child nodes of a template.\n- Templates can be placed anywhere inside of <head>, <body>, or <frameset> and can contain any type of content which is allowed in those elements. Note that \"anywhere\" means that <template> can safely be used in places that the HTML parser disallows...all but content model children. It can also be placed as a child of <table> or <select>:"
      },
      "date": 1520016022801
    },
    {
      "type": "edit",
      "id": "010f701338624a03",
      "item": {
        "type": "markdown",
        "id": "010f701338624a03",
        "text": "- Its content is effectively inert until activated. Essentially, your markup is hidden DOM and does not render.\n- Any content within a template won't have side effects. Script doesn't run, images don't load, audio doesn't play,...until the template is used.\n- Content is considered not to be in the document. Using document.getElementById() or querySelector() in the main page won't return child nodes of a template.\n- Templates can be placed anywhere inside of <head>, <body>, or <frameset> and can contain any type of content which is allowed in those elements. Note that \"anywhere\" means that <template> can safely be used in places that the HTML parser disallows...all but content model children. It can also be placed as a child of <table> or <select>:"
      },
      "date": 1520016028462
    },
    {
      "type": "edit",
      "id": "db8eab26e1819757",
      "item": {
        "type": "markdown",
        "id": "db8eab26e1819757",
        "text": "# See also\n\n- template.js"
      },
      "date": 1520016228573
    },
    {
      "type": "edit",
      "id": "db8eab26e1819757",
      "item": {
        "type": "markdown",
        "id": "db8eab26e1819757",
        "text": "# See also\n\n- template.js\n- Template engines - [https://zellwk.com/blog/nunjucks-with-gulp/ zellwk.com]"
      },
      "date": 1520016252033
    },
    {
      "type": "remove",
      "id": "17e37877-d9e7-411d-9571-1f42170008ff",
      "date": 1520016254649
    },
    {
      "type": "edit",
      "id": "db8eab26e1819757",
      "item": {
        "type": "markdown",
        "id": "db8eab26e1819757",
        "text": "# See also\n\n- [[Polymer]]\n- template.js\n- Template engines - [https://zellwk.com/blog/nunjucks-with-gulp/ zellwk.com]"
      },
      "date": 1520016264283
    },
    {
      "type": "edit",
      "id": "db8eab26e1819757",
      "item": {
        "type": "markdown",
        "id": "db8eab26e1819757",
        "text": "# See also\n\n- [[Polymer]]\n- template.js - [https://github.com/webcomponents/template github]\n- Template engines - [https://zellwk.com/blog/nunjucks-with-gulp/ zellwk.com]"
      },
      "date": 1520017298636
    },
    {
      "type": "fork",
      "site": "plugin.fedwiki.org",
      "date": 1520169211711
    }
  ]
}