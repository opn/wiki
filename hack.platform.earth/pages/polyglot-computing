{
  "title": "Polyglot (computing)",
  "journal": [
    {
      "date": 1523519003621,
      "type": "create",
      "item": {
        "story": "",
        "title": "Polyglot (computing)"
      }
    },
    {
      "type": "fork",
      "date": 1523519203705
    },
    {
      "type": "add",
      "id": "1e59b39f7c4412a6",
      "item": {
        "type": "paragraph",
        "id": "1e59b39f7c4412a6",
        "text": "There are a number of historical takes on polyglot computing that we are not concerned with here. We are not talking about [[polyglot markup]] to create functions that are implemented in a range of languages and called through a single method / handler / function interface. "
      },
      "after": "e170eff6-74c9-4691-8127-3b28a86d95c2",
      "date": 1523521150048
    },
    {
      "type": "add",
      "id": "d61c91c72dbb5f95",
      "item": {
        "type": "paragraph",
        "id": "d61c91c72dbb5f95",
        "text": "Instead we are talking about creating a comfortable maintainable environment for developers to work in, where they can contribute code in a wide range of languages. "
      },
      "after": "1e59b39f7c4412a6",
      "date": 1523521224441
    },
    {
      "type": "add",
      "id": "babe5f06268558f6",
      "item": {
        "type": "paragraph",
        "id": "babe5f06268558f6",
        "text": "It should be possible to easily extend (or reduce) the number of languages that you can code with, and the infrastructure should be transparent to the developer as far as possible and yet be able to scale massively without being prohibitively costly in terms of maintenance (developer time), or hosting cost (physical / cpu demands)."
      },
      "after": "d61c91c72dbb5f95",
      "date": 1523521320947
    },
    {
      "type": "add",
      "id": "00e8cc9b38071358",
      "item": {
        "type": "paragraph",
        "id": "00e8cc9b38071358",
        "text": "In this regard we are really talking about [[serverless computing) here, or more specifically a poly-domain"
      },
      "after": "babe5f06268558f6",
      "date": 1523521381317
    },
    {
      "type": "edit",
      "id": "00e8cc9b38071358",
      "item": {
        "type": "paragraph",
        "id": "00e8cc9b38071358",
        "text": "In this regard we are really talking about [[serverless computing) here, or more specifically a poly-glot and poly-paradigm architecture that supports the easy creation of [[domain specific languages]], while retaining the efficiency and speed of statically-typed languages and modern scaleable devops automation."
      },
      "date": 1523521536408
    },
    {
      "type": "edit",
      "id": "00e8cc9b38071358",
      "item": {
        "type": "paragraph",
        "id": "00e8cc9b38071358",
        "text": "In this regard we are really talking about [[serverless computing]] here, or more specifically a poly-glot and poly-paradigm architecture that supports the easy creation of [[domain specific languages]], while retaining the efficiency and speed of statically-typed languages and modern scaleable devops automation."
      },
      "date": 1523521548536
    }
  ],
  "story": [
    {
      "type": "paragraph",
      "id": "e170eff6-74c9-4691-8127-3b28a86d95c2",
      "text": "In computing, a polyglot is a computer program or script written in a valid form of multiple programming languages, which performs the same operations or output independent of the programming language used to compile or interpret it. - [https://en.wikipedia.org/wiki/Polyglot_(computing) wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "1e59b39f7c4412a6",
      "text": "There are a number of historical takes on polyglot computing that we are not concerned with here. We are not talking about [[polyglot markup]] to create functions that are implemented in a range of languages and called through a single method / handler / function interface. "
    },
    {
      "type": "paragraph",
      "id": "d61c91c72dbb5f95",
      "text": "Instead we are talking about creating a comfortable maintainable environment for developers to work in, where they can contribute code in a wide range of languages. "
    },
    {
      "type": "paragraph",
      "id": "babe5f06268558f6",
      "text": "It should be possible to easily extend (or reduce) the number of languages that you can code with, and the infrastructure should be transparent to the developer as far as possible and yet be able to scale massively without being prohibitively costly in terms of maintenance (developer time), or hosting cost (physical / cpu demands)."
    },
    {
      "type": "paragraph",
      "id": "00e8cc9b38071358",
      "text": "In this regard we are really talking about [[serverless computing]] here, or more specifically a poly-glot and poly-paradigm architecture that supports the easy creation of [[domain specific languages]], while retaining the efficiency and speed of statically-typed languages and modern scaleable devops automation."
    },
    {
      "type": "markdown",
      "id": "01e47460-6965-4db3-820a-ddc70023876b",
      "text": "# Sections"
    },
    {
      "type": "html",
      "id": "a2273d70-5051-42d9-8c27-5b3cb28cdc48",
      "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Methods'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Polyglot (computing)&action=edit&section=1'>\n<input type=submit value=create></form>"
    },
    {
      "type": "markdown",
      "id": "b039166b-de87-4c5f-bbf4-d8862723a9a5",
      "text": "# See also"
    },
    {
      "type": "markdown",
      "id": "93c6f6ee-15c7-473f-8693-3d8715330d50",
      "text": "- [[Methods]]"
    }
  ]
}