{
  "title": "Audioboom API Authentication",
  "story": [
    {
      "type": "paragraph",
      "id": "124cfcec144ab01f",
      "text": "Currently unable to use the [[Livecode oAuth Library]] to authenticate with the [[Audioboom API]]."
    },
    {
      "type": "markdown",
      "id": "b7f5bdf44133e05a",
      "text": "# Hack\n\nIn order to obtain an oAuth Access token you shoud first install audioboo-oauth-cli.rb - [https://github.com/audioBoom/audioboo-ruby-oauth github]"
    },
    {
      "type": "paragraph",
      "id": "d7a6ff32bb96c2ec",
      "text": "Next install the required bundles:"
    },
    {
      "type": "code",
      "id": "08b297cb822fe2db",
      "text": "sudo gem install bundler"
    },
    {
      "type": "paragraph",
      "id": "e73ec9cc01adf7b2",
      "text": "Now (in the terminal) run:"
    },
    {
      "type": "code",
      "id": "26023623e97433ee",
      "text": "./audioboo-oauth-cli.rb"
    },
    {
      "type": "paragraph",
      "id": "afa18ae3b012d4a8",
      "text": "Copy the output line which will have the form:"
    },
    {
      "type": "paragraph",
      "id": "f1617bcf17ebf399",
      "text": "and paste the URL (after \"Open\" cli output ) into a browser and follow the interface to authenticate."
    },
    {
      "type": "code",
      "id": "348b92b11bbcc6ae",
      "text": "Open https://api.audioboom.com/authorize?response_type=code&client_id=XXX to authorize your account\n"
    },
    {
      "type": "paragraph",
      "id": "89369836d56319e4",
      "text": "After authenticating in the browser you should see a web page which can't be reached (as the redirect is to localhost), but you can extract the oAuth access-token from the url in the browser url bar which should look like:"
    },
    {
      "type": "factory",
      "id": "78dc3ac6d15dd186"
    },
    {
      "type": "paragraph",
      "id": "7db7318805f9c944",
      "text": "Paste the request-token you copied from the url bar into the terminal, and the output will contain your oAuth access-token together with the result of an authenticated call to /account."
    },
    {
      "type": "paragraph",
      "id": "8d2bdfad463bc2e7",
      "text": "Store this access token so you can use it for authenticated REST call to the api."
    },
    {
      "type": "markdown",
      "id": "a21e41f7334b7007",
      "text": "# Work in in progress"
    },
    {
      "type": "paragraph",
      "id": "30d9988c6400690e",
      "text": "You should use [[OAuth 2.0]] to make your requests. [[Audioboom]] supports the 'Authorization Code' flow which is described in this article - [https://aaronparecki.com/2012/07/29/2/oauth2-simplified#authorization aaronparecki.com]"
    },
    {
      "type": "markdown",
      "id": "69a0a7fd44ab6026",
      "text": "# Consumer Keys"
    },
    {
      "type": "paragraph",
      "id": "5e38d0276fb5cf9a",
      "text": "To make authenticated requests you'll need to get hold of a consumer-token key and secret. These are long seemingly random strings that ensure we can identify your application when it makes calls."
    },
    {
      "type": "paragraph",
      "id": "9b15692c9eb1d888",
      "text": "To register for key and token, head over to https://audioboom.com/account/services and click \"Request new API Key\". This will ask for some information regarding the application you're writing and, once submitted, should provide you with the token key and secret.\n\n"
    },
    {
      "type": "markdown",
      "id": "32eaff49c74ff308",
      "text": "# OAuth Request URLs"
    },
    {
      "type": "paragraph",
      "id": "7443d05ffddbe7ab",
      "text": "When configuring your OAuth library, you will require URLs to access the OAuth calls. As we use standard paths, most libraries should just request the site's base address, which is https://api.audioboom.com/\n\nFor completeness, the two specific OAuth URLs are;\n\nAuthorization URL: https://api.audioboom.com/oauth/authorize (GET)\n\nAccess Token URL: https://api.audioboom.com/oauth/access_token (POST)"
    },
    {
      "type": "reference",
      "id": "27c3711703879bcb",
      "site": "api.c0de.academy",
      "slug": "oauth-20",
      "title": "OAuth 2.0",
      "text": "OAuth 2.0 is the next evolution of the OAuth protocol and is not backwards compatible with OAuth 1.0. OAuth 2.0 focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices - [https://en.wikipedia.org/wiki/Oauth#OAuth_2.0 wikipedia]"
    },
    {
      "type": "markdown",
      "id": "7d4d96b2bcfc2c7f",
      "text": "# Request Token exchange"
    },
    {
      "type": "markdown",
      "id": "61359f58d954e021",
      "text": "The client makes a request to the token endpoint by sending the following parameters using the \"application/x-www-form-urlencoded\" format per Appendix B with a character encoding of UTF-8 in the HTTP request entity-body:\n\n- grant_type\n         REQUIRED.  Value MUST be set to \"authorization_code\".\n- code\n         REQUIRED.  The authorization code received from the\n         authorization server.\n- redirect_uri\n         REQUIRED, if the \"redirect_uri\" parameter was included in the  authorization request as described in Section 4.1.1, and their values MUST be identical.\n- client_id\n         REQUIRED, if the client is not authenticating with the\n         authorization server as described in Section 3.2.1.\n\n  "
    },
    {
      "type": "paragraph",
      "id": "883e91f624a28b07",
      "text": " If the client type is confidential or the client was issued client credentials (or assigned other authentication requirements), the client MUST authenticate with the authorization server as described"
    },
    {
      "type": "paragraph",
      "id": "f9ceb63621a6f2e1",
      "text": "For example, the client makes the following HTTP request using TLS (with extra line breaks for display purposes only):"
    },
    {
      "type": "code",
      "id": "7f32fa4582c40a39",
      "text": "POST https://api.oauth2server.com/token\n  grant_type=authorization_code&\n  code=AUTH_CODE_HERE&\n  redirect_uri=REDIRECT_URI&\n  client_id=CLIENT_ID&\n  client_secret=CLIENT_SECRET"
    },
    {
      "type": "code",
      "id": "4f778f112b6fe3aa",
      "text": "POST /token HTTP/1.1\nHost: server.example.com\nAuthorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=authorization_code&\ncode=SplxlOBeZQQYbYS6WxSbIA&\nredirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb"
    },
    {
      "type": "code",
      "id": "2f4a17aba10499be",
      "text": "   put \"grant_type=authorization_code\" into tParams\n   put \"&client_id=\" & urlEncode(AudioboomConsumerkey) after tParams\n   put \"&client_secret=\" & urlEncode(AudioboomConsumerSecret) after tParams\n   put \"&code=\" & urlEncode(AudioBoomRequestToken) after tParams\n   put \"&redirect_uri=\" & urlEncode(redirectURL & \"/\") after tParams -- should it go earlier?\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Audioboom API Authentication",
        "story": []
      },
      "date": 1502094228692
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "124cfcec144ab01f",
        "text": "You should use [[OAuth 2.0]] to make your requests. [[Audioboom]] supports the 'Authorization Code' flow which is described in this article - [https://aaronparecki.com/2012/07/29/2/oauth2-simplified#authorization aaronparecki.com]"
      },
      "id": "124cfcec144ab01f",
      "date": 1502094232047
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "69a0a7fd44ab6026",
        "text": "# Consumer Keys"
      },
      "after": "124cfcec144ab01f",
      "id": "69a0a7fd44ab6026",
      "date": 1502094234803
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5e38d0276fb5cf9a",
        "text": "To make authenticated requests you'll need to get hold of a consumer-token key and secret. These are long seemingly random strings that ensure we can identify your application when it makes calls."
      },
      "after": "69a0a7fd44ab6026",
      "id": "5e38d0276fb5cf9a",
      "date": 1502094238694
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9b15692c9eb1d888",
        "text": "To register for key and token, head over to https://audioboom.com/account/services and click \"Request new API Key\". This will ask for some information regarding the application you're writing and, once submitted, should provide you with the token key and secret.\n\nOAuth Request URLs\n\nWhen configuring your OAuth library, you will require URLs to access the OAuth calls. As we use standard paths, most libraries should just request the site's base address, which is https://api.audioboom.com/\n\nFor completeness, the two specific OAuth URLs are;\n\nAuthorization URL: https://api.audioboom.com/oauth/authorize (GET)\n\nAccess Token URL: https://api.audioboom.com/oauth/access_token (POST)"
      },
      "after": "5e38d0276fb5cf9a",
      "id": "9b15692c9eb1d888",
      "date": 1502094241813
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "id": "27c3711703879bcb",
        "site": "api.c0de.academy",
        "slug": "oauth-20",
        "title": "OAuth 2.0",
        "text": "OAuth 2.0 is the next evolution of the OAuth protocol and is not backwards compatible with OAuth 1.0. OAuth 2.0 focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices - [https://en.wikipedia.org/wiki/Oauth#OAuth_2.0 wikipedia]"
      },
      "after": "9b15692c9eb1d888",
      "id": "27c3711703879bcb",
      "date": 1502094245463
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "7d4d96b2bcfc2c7f",
        "text": "# Request Token exchange"
      },
      "after": "27c3711703879bcb",
      "id": "7d4d96b2bcfc2c7f",
      "date": 1502094250264
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "61359f58d954e021",
        "text": "The client makes a request to the token endpoint by sending the following parameters using the \"application/x-www-form-urlencoded\" format per Appendix B with a character encoding of UTF-8 in the HTTP request entity-body:\n\n- grant_type\n         REQUIRED.  Value MUST be set to \"authorization_code\".\n- code\n         REQUIRED.  The authorization code received from the\n         authorization server.\n- redirect_uri\n         REQUIRED, if the \"redirect_uri\" parameter was included in the  authorization request as described in Section 4.1.1, and their values MUST be identical.\n- client_id\n         REQUIRED, if the client is not authenticating with the\n         authorization server as described in Section 3.2.1.\n\n  "
      },
      "after": "27c3711703879bcb",
      "id": "61359f58d954e021",
      "date": 1502094252140
    },
    {
      "type": "move",
      "order": [
        "124cfcec144ab01f",
        "69a0a7fd44ab6026",
        "5e38d0276fb5cf9a",
        "9b15692c9eb1d888",
        "27c3711703879bcb",
        "7d4d96b2bcfc2c7f",
        "61359f58d954e021"
      ],
      "id": "7d4d96b2bcfc2c7f",
      "date": 1502094260600
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "883e91f624a28b07",
        "text": " If the client type is confidential or the client was issued client credentials (or assigned other authentication requirements), the client MUST authenticate with the authorization server as described"
      },
      "after": "61359f58d954e021",
      "id": "883e91f624a28b07",
      "date": 1502094263437
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f9ceb63621a6f2e1",
        "text": "For example, the client makes the following HTTP request using TLS (with extra line breaks for display purposes only):"
      },
      "after": "883e91f624a28b07",
      "id": "f9ceb63621a6f2e1",
      "date": 1502094266184
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "7f32fa4582c40a39",
        "text": "POST https://api.oauth2server.com/token\n  grant_type=authorization_code&\n  code=AUTH_CODE_HERE&\n  redirect_uri=REDIRECT_URI&\n  client_id=CLIENT_ID&\n  client_secret=CLIENT_SECRET"
      },
      "after": "f9ceb63621a6f2e1",
      "id": "7f32fa4582c40a39",
      "date": 1502094271239
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "4f778f112b6fe3aa",
        "text": "POST /token HTTP/1.1\nHost: server.example.com\nAuthorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=authorization_code&\ncode=SplxlOBeZQQYbYS6WxSbIA&\nredirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb"
      },
      "after": "7f32fa4582c40a39",
      "id": "4f778f112b6fe3aa",
      "date": 1502094272810
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "2f4a17aba10499be",
        "text": "   put \"grant_type=authorization_code\" into tParams\n   put \"&client_id=\" & urlEncode(AudioboomConsumerkey) after tParams\n   put \"&client_secret=\" & urlEncode(AudioboomConsumerSecret) after tParams\n   put \"&code=\" & urlEncode(AudioBoomRequestToken) after tParams\n   put \"&redirect_uri=\" & urlEncode(redirectURL & \"/\") after tParams -- should it go earlier?\n"
      },
      "after": "4f778f112b6fe3aa",
      "id": "2f4a17aba10499be",
      "date": 1502094276093
    },
    {
      "type": "edit",
      "id": "124cfcec144ab01f",
      "item": {
        "type": "paragraph",
        "id": "124cfcec144ab01f",
        "text": "Currently unable to use the Livecode oAuth Library to authenticate with the [[Audioboom API]]."
      },
      "date": 1502094494321
    },
    {
      "type": "add",
      "id": "d7a6ff32bb96c2ec",
      "item": {
        "type": "paragraph",
        "id": "d7a6ff32bb96c2ec",
        "text": "You should use [[OAuth 2.0]] to make your requests. [[Audioboom]] supports the 'Authorization Code' flow which is described in this article - [https://aaronparecki.com/2012/07/29/2/oauth2-simplified#authorization aaronparecki.com]"
      },
      "after": "124cfcec144ab01f",
      "date": 1502094504695
    },
    {
      "type": "edit",
      "id": "124cfcec144ab01f",
      "item": {
        "type": "paragraph",
        "id": "124cfcec144ab01f",
        "text": "Currently unable to use the [[Livecode oAuth Library]] to authenticate with the [[Audioboom API]]."
      },
      "date": 1502094626610
    },
    {
      "type": "add",
      "id": "b7f5bdf44133e05a",
      "item": {
        "type": "paragraph",
        "id": "b7f5bdf44133e05a",
        "text": "# Hack"
      },
      "after": "124cfcec144ab01f",
      "date": 1502094790813
    },
    {
      "type": "add",
      "id": "dd122752a914691b",
      "item": {
        "type": "paragraph",
        "id": "dd122752a914691b",
        "text": "In order to obtain an oAuth Access token you can do the following:- Install fdas"
      },
      "after": "b7f5bdf44133e05a",
      "date": 1502094820741
    },
    {
      "type": "edit",
      "id": "dd122752a914691b",
      "item": {
        "type": "markdown",
        "id": "dd122752a914691b",
        "text": "In order to obtain an oAuth Access token you can do the following:- Install fdas"
      },
      "date": 1502094821733
    },
    {
      "type": "edit",
      "id": "b7f5bdf44133e05a",
      "item": {
        "type": "markdown",
        "id": "b7f5bdf44133e05a",
        "text": "# Hack"
      },
      "date": 1502094824835
    },
    {
      "type": "edit",
      "id": "dd122752a914691b",
      "item": {
        "type": "markdown",
        "id": "dd122752a914691b",
        "text": "In order to obtain an oAuth Access token you can do the following:\n\n- Install fdas"
      },
      "date": 1502094830246
    },
    {
      "type": "edit",
      "id": "9b15692c9eb1d888",
      "item": {
        "type": "paragraph",
        "id": "9b15692c9eb1d888",
        "text": "To register for key and token, head over to https://audioboom.com/account/services and click \"Request new API Key\". This will ask for some information regarding the application you're writing and, once submitted, should provide you with the token key and secret.\n\n"
      },
      "date": 1502094841465
    },
    {
      "type": "add",
      "id": "32eaff49c74ff308",
      "item": {
        "type": "paragraph",
        "id": "32eaff49c74ff308",
        "text": "# OAuth Request URLs\n\nWhen configuring your OAuth library, you will require URLs to access the OAuth calls. As we use standard paths, most libraries should just request the site's base address, which is https://api.audioboom.com/\n\nFor completeness, the two specific OAuth URLs are;\n\nAuthorization URL: https://api.audioboom.com/oauth/authorize (GET)\n\nAccess Token URL: https://api.audioboom.com/oauth/access_token (POST)"
      },
      "after": "9b15692c9eb1d888",
      "date": 1502094844654
    },
    {
      "type": "edit",
      "id": "32eaff49c74ff308",
      "item": {
        "type": "paragraph",
        "id": "32eaff49c74ff308",
        "text": "# OAuth Request URLs"
      },
      "date": 1502094848432
    },
    {
      "type": "add",
      "id": "7443d05ffddbe7ab",
      "item": {
        "type": "paragraph",
        "id": "7443d05ffddbe7ab",
        "text": "When configuring your OAuth library, you will require URLs to access the OAuth calls. As we use standard paths, most libraries should just request the site's base address, which is https://api.audioboom.com/\n\nFor completeness, the two specific OAuth URLs are;\n\nAuthorization URL: https://api.audioboom.com/oauth/authorize (GET)\n\nAccess Token URL: https://api.audioboom.com/oauth/access_token (POST)"
      },
      "after": "32eaff49c74ff308",
      "date": 1502094850255
    },
    {
      "type": "edit",
      "id": "32eaff49c74ff308",
      "item": {
        "type": "markdown",
        "id": "32eaff49c74ff308",
        "text": "# OAuth Request URLs"
      },
      "date": 1502094851683
    },
    {
      "type": "edit",
      "id": "dd122752a914691b",
      "item": {
        "type": "markdown",
        "id": "dd122752a914691b",
        "text": "In order to obtain an oAuth Access token you can do the following:\n\n- Install audioboo-oauth-cli.rb - [afsd github]"
      },
      "date": 1502094955168
    },
    {
      "type": "edit",
      "id": "dd122752a914691b",
      "item": {
        "type": "markdown",
        "id": "dd122752a914691b",
        "text": "In order to obtain an oAuth Access token you can do the following:\n\n- Install audioboo-oauth-cli.rb - [https://github.com/audioBoom/audioboo-ruby-oauth github]"
      },
      "date": 1502094974240
    },
    {
      "type": "edit",
      "id": "d7a6ff32bb96c2ec",
      "item": {
        "type": "paragraph",
        "id": "d7a6ff32bb96c2ec",
        "text": "Install the required bundles:"
      },
      "date": 1502095033715
    },
    {
      "type": "add",
      "id": "e73ec9cc01adf7b2",
      "item": {
        "type": "paragraph",
        "id": "e73ec9cc01adf7b2",
        "text": "You should use [[OAuth 2.0]] to make your requests. [[Audioboom]] supports the 'Authorization Code' flow which is described in this article - [https://aaronparecki.com/2012/07/29/2/oauth2-simplified#authorization aaronparecki.com]"
      },
      "after": "d7a6ff32bb96c2ec",
      "date": 1502095034962
    },
    {
      "item": {
        "type": "factory",
        "id": "08b297cb822fe2db"
      },
      "id": "08b297cb822fe2db",
      "type": "add",
      "after": "2f4a17aba10499be",
      "date": 1502095037601
    },
    {
      "type": "move",
      "order": [
        "124cfcec144ab01f",
        "b7f5bdf44133e05a",
        "dd122752a914691b",
        "d7a6ff32bb96c2ec",
        "08b297cb822fe2db",
        "e73ec9cc01adf7b2",
        "69a0a7fd44ab6026",
        "5e38d0276fb5cf9a",
        "9b15692c9eb1d888",
        "32eaff49c74ff308",
        "7443d05ffddbe7ab",
        "27c3711703879bcb",
        "7d4d96b2bcfc2c7f",
        "61359f58d954e021",
        "883e91f624a28b07",
        "f9ceb63621a6f2e1",
        "7f32fa4582c40a39",
        "4f778f112b6fe3aa",
        "2f4a17aba10499be"
      ],
      "id": "08b297cb822fe2db",
      "date": 1502095042820
    },
    {
      "type": "edit",
      "id": "08b297cb822fe2db",
      "item": {
        "type": "code",
        "id": "08b297cb822fe2db",
        "text": "sudo gem install bundler"
      },
      "date": 1502095046985
    },
    {
      "type": "remove",
      "id": "dd122752a914691b",
      "date": 1502095062778
    },
    {
      "type": "edit",
      "id": "b7f5bdf44133e05a",
      "item": {
        "type": "markdown",
        "id": "b7f5bdf44133e05a",
        "text": "# Hack\n\nIn order to obtain an oAuth Access token you shoud first install audioboo-oauth-cli.rb - [https://github.com/audioBoom/audioboo-ruby-oauth github]"
      },
      "date": 1502095082762
    },
    {
      "type": "edit",
      "id": "d7a6ff32bb96c2ec",
      "item": {
        "type": "paragraph",
        "id": "d7a6ff32bb96c2ec",
        "text": "Next install the required bundles:"
      },
      "date": 1502095089562
    },
    {
      "type": "edit",
      "id": "e73ec9cc01adf7b2",
      "item": {
        "type": "paragraph",
        "id": "e73ec9cc01adf7b2",
        "text": "# Work in in progress"
      },
      "date": 1502095145301
    },
    {
      "type": "add",
      "id": "30d9988c6400690e",
      "item": {
        "type": "paragraph",
        "id": "30d9988c6400690e",
        "text": "You should use [[OAuth 2.0]] to make your requests. [[Audioboom]] supports the 'Authorization Code' flow which is described in this article - [https://aaronparecki.com/2012/07/29/2/oauth2-simplified#authorization aaronparecki.com]"
      },
      "after": "e73ec9cc01adf7b2",
      "date": 1502095146351
    },
    {
      "type": "edit",
      "id": "e73ec9cc01adf7b2",
      "item": {
        "type": "paragraph",
        "id": "e73ec9cc01adf7b2",
        "text": "dasf"
      },
      "date": 1502095148316
    },
    {
      "type": "add",
      "id": "a21e41f7334b7007",
      "item": {
        "type": "paragraph",
        "id": "a21e41f7334b7007",
        "text": "# Work in in progress"
      },
      "after": "e73ec9cc01adf7b2",
      "date": 1502095149052
    },
    {
      "type": "edit",
      "id": "a21e41f7334b7007",
      "item": {
        "type": "markdown",
        "id": "a21e41f7334b7007",
        "text": "# Work in in progress"
      },
      "date": 1502095150090
    },
    {
      "type": "edit",
      "id": "e73ec9cc01adf7b2",
      "item": {
        "type": "paragraph",
        "id": "e73ec9cc01adf7b2",
        "text": "Now (in the terminal) run:"
      },
      "date": 1502095175468
    },
    {
      "type": "add",
      "id": "afa18ae3b012d4a8",
      "item": {
        "type": "paragraph",
        "id": "afa18ae3b012d4a8",
        "text": "dafs"
      },
      "after": "e73ec9cc01adf7b2",
      "date": 1502095176811
    },
    {
      "item": {
        "type": "factory",
        "id": "26023623e97433ee"
      },
      "id": "26023623e97433ee",
      "type": "add",
      "after": "2f4a17aba10499be",
      "date": 1502095180329
    },
    {
      "type": "edit",
      "id": "26023623e97433ee",
      "item": {
        "type": "code",
        "id": "26023623e97433ee",
        "text": "./audioboo-oauth-cli.rb"
      },
      "date": 1502095182484
    },
    {
      "type": "move",
      "order": [
        "124cfcec144ab01f",
        "b7f5bdf44133e05a",
        "d7a6ff32bb96c2ec",
        "08b297cb822fe2db",
        "e73ec9cc01adf7b2",
        "26023623e97433ee",
        "afa18ae3b012d4a8",
        "a21e41f7334b7007",
        "30d9988c6400690e",
        "69a0a7fd44ab6026",
        "5e38d0276fb5cf9a",
        "9b15692c9eb1d888",
        "32eaff49c74ff308",
        "7443d05ffddbe7ab",
        "27c3711703879bcb",
        "7d4d96b2bcfc2c7f",
        "61359f58d954e021",
        "883e91f624a28b07",
        "f9ceb63621a6f2e1",
        "7f32fa4582c40a39",
        "4f778f112b6fe3aa",
        "2f4a17aba10499be"
      ],
      "id": "26023623e97433ee",
      "date": 1502095187804
    },
    {
      "type": "edit",
      "id": "afa18ae3b012d4a8",
      "item": {
        "type": "paragraph",
        "id": "afa18ae3b012d4a8",
        "text": "Copy the output line which will have the form:"
      },
      "date": 1502095214164
    },
    {
      "item": {
        "type": "factory",
        "id": "348b92b11bbcc6ae"
      },
      "id": "348b92b11bbcc6ae",
      "type": "add",
      "after": "2f4a17aba10499be",
      "date": 1502095217461
    },
    {
      "type": "edit",
      "id": "348b92b11bbcc6ae",
      "item": {
        "type": "code",
        "id": "348b92b11bbcc6ae",
        "text": "Open https://api.audioboom.com/authorize?response_type=code&client_id=XXX to authorize your account\n"
      },
      "date": 1502095231118
    },
    {
      "type": "move",
      "order": [
        "124cfcec144ab01f",
        "b7f5bdf44133e05a",
        "d7a6ff32bb96c2ec",
        "08b297cb822fe2db",
        "e73ec9cc01adf7b2",
        "26023623e97433ee",
        "afa18ae3b012d4a8",
        "348b92b11bbcc6ae",
        "a21e41f7334b7007",
        "30d9988c6400690e",
        "69a0a7fd44ab6026",
        "5e38d0276fb5cf9a",
        "9b15692c9eb1d888",
        "32eaff49c74ff308",
        "7443d05ffddbe7ab",
        "27c3711703879bcb",
        "7d4d96b2bcfc2c7f",
        "61359f58d954e021",
        "883e91f624a28b07",
        "f9ceb63621a6f2e1",
        "7f32fa4582c40a39",
        "4f778f112b6fe3aa",
        "2f4a17aba10499be"
      ],
      "id": "348b92b11bbcc6ae",
      "date": 1502095238293
    },
    {
      "type": "add",
      "id": "f1617bcf17ebf399",
      "item": {
        "type": "paragraph",
        "id": "f1617bcf17ebf399",
        "text": "and paste the URL (after \"Open\" cli output ) into a browser and follow the interface to authenticate."
      },
      "after": "afa18ae3b012d4a8",
      "date": 1502095322135
    },
    {
      "type": "add",
      "id": "89369836d56319e4",
      "item": {
        "type": "paragraph",
        "id": "89369836d56319e4",
        "text": "After authenticating in the browser you should see a web page which can't be reached (as the redirect is to localhost), but you can extract the oAuth access-token from the url in the browser url bar which should look like:"
      },
      "after": "f1617bcf17ebf399",
      "date": 1502095416384
    },
    {
      "type": "move",
      "order": [
        "124cfcec144ab01f",
        "b7f5bdf44133e05a",
        "d7a6ff32bb96c2ec",
        "08b297cb822fe2db",
        "e73ec9cc01adf7b2",
        "26023623e97433ee",
        "afa18ae3b012d4a8",
        "f1617bcf17ebf399",
        "348b92b11bbcc6ae",
        "89369836d56319e4",
        "a21e41f7334b7007",
        "30d9988c6400690e",
        "69a0a7fd44ab6026",
        "5e38d0276fb5cf9a",
        "9b15692c9eb1d888",
        "32eaff49c74ff308",
        "7443d05ffddbe7ab",
        "27c3711703879bcb",
        "7d4d96b2bcfc2c7f",
        "61359f58d954e021",
        "883e91f624a28b07",
        "f9ceb63621a6f2e1",
        "7f32fa4582c40a39",
        "4f778f112b6fe3aa",
        "2f4a17aba10499be"
      ],
      "id": "89369836d56319e4",
      "date": 1502095468483
    },
    {
      "item": {
        "type": "factory",
        "id": "78dc3ac6d15dd186"
      },
      "id": "78dc3ac6d15dd186",
      "type": "add",
      "after": "2f4a17aba10499be",
      "date": 1502095474424
    },
    {
      "type": "move",
      "order": [
        "124cfcec144ab01f",
        "b7f5bdf44133e05a",
        "d7a6ff32bb96c2ec",
        "08b297cb822fe2db",
        "e73ec9cc01adf7b2",
        "26023623e97433ee",
        "afa18ae3b012d4a8",
        "f1617bcf17ebf399",
        "348b92b11bbcc6ae",
        "89369836d56319e4",
        "78dc3ac6d15dd186",
        "a21e41f7334b7007",
        "30d9988c6400690e",
        "69a0a7fd44ab6026",
        "5e38d0276fb5cf9a",
        "9b15692c9eb1d888",
        "32eaff49c74ff308",
        "7443d05ffddbe7ab",
        "27c3711703879bcb",
        "7d4d96b2bcfc2c7f",
        "61359f58d954e021",
        "883e91f624a28b07",
        "f9ceb63621a6f2e1",
        "7f32fa4582c40a39",
        "4f778f112b6fe3aa",
        "2f4a17aba10499be"
      ],
      "id": "78dc3ac6d15dd186",
      "date": 1502095482765
    },
    {
      "type": "add",
      "id": "7db7318805f9c944",
      "item": {
        "type": "paragraph",
        "id": "7db7318805f9c944",
        "text": "Paste the request-token you copied from the url bar into the terminal, and the output will contain your oAuth access-token together with the result of an authenticated call to /account."
      },
      "after": "89369836d56319e4",
      "date": 1502095573282
    },
    {
      "type": "move",
      "order": [
        "124cfcec144ab01f",
        "b7f5bdf44133e05a",
        "d7a6ff32bb96c2ec",
        "08b297cb822fe2db",
        "e73ec9cc01adf7b2",
        "26023623e97433ee",
        "afa18ae3b012d4a8",
        "f1617bcf17ebf399",
        "348b92b11bbcc6ae",
        "89369836d56319e4",
        "78dc3ac6d15dd186",
        "7db7318805f9c944",
        "a21e41f7334b7007",
        "30d9988c6400690e",
        "69a0a7fd44ab6026",
        "5e38d0276fb5cf9a",
        "9b15692c9eb1d888",
        "32eaff49c74ff308",
        "7443d05ffddbe7ab",
        "27c3711703879bcb",
        "7d4d96b2bcfc2c7f",
        "61359f58d954e021",
        "883e91f624a28b07",
        "f9ceb63621a6f2e1",
        "7f32fa4582c40a39",
        "4f778f112b6fe3aa",
        "2f4a17aba10499be"
      ],
      "id": "78dc3ac6d15dd186",
      "date": 1502095576734
    },
    {
      "type": "add",
      "id": "8d2bdfad463bc2e7",
      "item": {
        "type": "paragraph",
        "id": "8d2bdfad463bc2e7",
        "text": "Store this access token so you can use it for authenticated REST call to the api."
      },
      "after": "7db7318805f9c944",
      "date": 1502095604378
    }
  ]
}