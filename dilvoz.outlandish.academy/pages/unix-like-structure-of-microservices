{
  "title": "Unix-like Structure of Microservices",
  "story": [
    {
      "type": "paragraph",
      "id": "0e65f2e08a17c840",
      "text": "Unix "
    },
    {
      "type": "html",
      "id": "294bca5cfa16d3e2",
      "text": "<img src=\"http://dilgreenarchitect.co.uk/imageStore/unix.jpg\"  width=400\n>\n<p>\nUNIX DIAGRAM</p>\n"
    },
    {
      "type": "html",
      "id": "4956a124e3ceebf3",
      "text": "﻿<i> ... this pattern provides the underlying approach for  [[Microservice Interoperability]] a  </i>"
    },
    {
      "type": "html",
      "id": "ae9fc17ebd9a5eb1",
      "text": "<h2 style=\"font-family:times\">THE STORY: Robust, simple services with well defined interfaces,  .</h2>"
    },
    {
      "type": "paragraph",
      "id": "93bd530283ea24cf",
      "text": "THE ARGUMENT / DISCUSSION Make the case for the Story, and the recommendations which follow."
    },
    {
      "type": "paragraph",
      "id": "7088cc56b50a7b00",
      "text": "FROM a Comment by Chris Reay:\n\"Unix seems to me an excellent model for this. The fundamental design of unix hasnt changed since 1971. The core tenet of unix is written on wikipedia as: \"The Unix philosophy emphasizes building simple, short, clear, modular, and extensible code that can be easily maintained and repurposed by developers other than its creators. The Unix philosophy favors composability as opposed to monolithic design.\"\n\nThis design I think can be very clearly extended into a \"web\" or \"internet\" substrate of microservices linked together through REST api calls. The ubiquity of the http standard, and perhaps webSockets as well have solid metaphors in the *nix universe.\n\nWhat seems to be the core requirements for this flavour of *nix (if you will excuse the aforism), are that we can have some kind of mid-level of services which are composed of lower level services, and that provide a reasonably stable language targeted at certain sets of community requirements.\n\nAs the unix kernel and low level software can evolve, whilst leaving the interface to higher level software (e.g. Media Player running on top of the sound sub-system), so must miscroservices be able to evolve without breaking the ecosystem.\n\nAs the sub-systems evolve, they can offer \"extra\" potential behaviour to end-user products, without breaking backwards compatibility.\n"
    },
    {
      "type": "html",
      "id": "442ea85401b065f8",
      "text": "<h2 style=\"font-family:times\">THE TAKE-AWAY: Recommendations arising from the story and the discussion.</h2> \n<h3  style=\"font-family:times\">These recommendations should be framed in the loosest manner possible that manages to capture what is important. \n<h3  style=\"font-family:times\">If at all possible, try and make a pictorial representation of this to round out the writing.</h3>"
    },
    {
      "type": "html",
      "id": "a74ef15b400584f3",
      "text": "﻿<i> ... this pattern provides the underlying approach for  [[Microservice Interoperability]] and makes  [[Microservice Federation]] practical </i>"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Unix-like Structure of Microservices",
        "story": [
          {
            "type": "paragraph",
            "id": "0e65f2e08a17c840",
            "text": "Here we describe the Pattern or Story in a sentence or two - metadata to support effectiveness of wiki search routine."
          },
          {
            "type": "paragraph",
            "id": "04e1bd29061aedde",
            "text": "A Pattern / Story is a recurring structure within the domain we are considering - but not one that is reductive: - we don't bother to write a Pattern / Story about a nail, but we might well write one about nailing as a recurring approach to fixing things in place."
          },
          {
            "type": "html",
            "id": "294bca5cfa16d3e2",
            "text": "<img src=\"http://dilgreenarchitect.co.uk/imageStore/eddyinstream.jpg\"  width=400\n>\n<p>WE SELECT AN IMAGE WHICH WE BELIEVE CONVEYS THE ESSENCE OF THE PATTERN IN A DIRECT WAY THAT IS INSTANTLY RECOGNISABLE. </p>\n<p>WE DO THIS IN RECOGNITION OF THE FACT THAT THE TEXT OF A PATTERN / STORY OPERATES ONLY IN ONE MODE - THAT OF RATIONALISING DISCOURSE - AND THAT THIS IS INSUFFICIENT. </p><p>\nIF A PATTERN / STORY MEANS ANYTHING, IT SHOULD BE RECOGNISED AT AN EMOTIONAL LEVEL AS HAVING SOME LEVEL OF TRUTHINESS TO IT.</p>\n"
          },
          {
            "type": "html",
            "id": "4956a124e3ceebf3",
            "text": "﻿<i> ... we include [[links to patterns]] / stories that operate at a wider, more diffuse scale - ones which this one can help to instantiate and make more real. </i>"
          },
          {
            "type": "html",
            "id": "ae9fc17ebd9a5eb1",
            "text": "<h2 style=\"font-family:times\">THE STORY: This is the most condensed statement of what it is that this Pattern / Story captures. If you are having trouble writing this, it is often a sign that you have not yet arrived at something that can usefully become a Pattern / Story. It is quite likely that, on further consideration, you will find that you are mixing several ideas together.</h2>"
          },
          {
            "type": "paragraph",
            "id": "93bd530283ea24cf",
            "text": "THE ARGUMENT / DISCUSSION Make the case for the Story, and the recommendations which follow."
          },
          {
            "type": "paragraph",
            "id": "0a0d1c1d69368d0d",
            "text": "The proposition behind the book design is that it can be read in a number of ways - of which 'cover-to-cover' is the least intended."
          },
          {
            "type": "paragraph",
            "id": "e124cbe85c8863b8",
            "text": "There are a total of 253 patterns covering 1166 pages in three section, 'TOWNS', 'BUILDINGS' and 'CONSTRUCTION' - ranging from the widest, most diffuse (INDEPENDENT REGIONS calls for a federated world with 1000 independent regions) to the smallest, most intense (THINGS FROM YOUR LIFE)."
          },
          {
            "type": "paragraph",
            "id": "053fc0db01030d96",
            "text": "Each pattern is structured (just as this page is) with a number of sections."
          },
          {
            "type": "paragraph",
            "id": "87808e5f12ad45c2",
            "text": "PATTERN NAMES here are wiki page names - and have exactly the same character - one wants them to act as a 'meme' (h/t David B); generic but at the same time powerful - so that when one reads the name, one's previous reading of the pattern comes immediately to mind - preferably as a 'feeling' more than as an 'argument'"
          },
          {
            "type": "html",
            "id": "442ea85401b065f8",
            "text": "<h2 style=\"font-family:times\">THE TAKE-AWAY: Recommendations arising from the story and the discussion.</h2> \n<h3  style=\"font-family:times\">These recommendations should be framed in the loosest manner possible that manages to capture what is important. The idea is to convey the character / parameters / style of design/action decisions that tend towards better outcomes, rather than to give prescriptive advice. </h3>\n<h3  style=\"font-family:times\">If at all possible, try and make a pictorial representation of this to round out the writing.</h3>"
          },
          {
            "type": "html",
            "id": "a74ef15b400584f3",
            "text": "﻿<i>Include [[links]] to Patterns / Stories  that are associated with this one - either that might exist alongside/around it and strengthen it by association, or ones which operate at smaller scales and which be constituent or contributory to this one.</i>"
          }
        ]
      },
      "date": 1525904894104
    },
    {
      "type": "edit",
      "id": "0e65f2e08a17c840",
      "item": {
        "type": "paragraph",
        "id": "0e65f2e08a17c840",
        "text": "Unix "
      },
      "date": 1525904918834
    },
    {
      "type": "remove",
      "id": "04e1bd29061aedde",
      "date": 1525904978496
    },
    {
      "type": "edit",
      "id": "294bca5cfa16d3e2",
      "item": {
        "type": "html",
        "id": "294bca5cfa16d3e2",
        "text": "<img src=\"http://dilgreenarchitect.co.uk/imageStore/unix.jpg\"  width=400\n>\n<p>\nUNIX DIAGRAM</p>\n"
      },
      "date": 1525905190840
    },
    {
      "type": "edit",
      "id": "4956a124e3ceebf3",
      "item": {
        "type": "html",
        "id": "4956a124e3ceebf3",
        "text": "﻿<i> ... this pattern provides the underlying approach for  [[Microservice Interoperability]] a  </i>"
      },
      "date": 1525905383358
    },
    {
      "type": "edit",
      "id": "a74ef15b400584f3",
      "item": {
        "type": "html",
        "id": "a74ef15b400584f3",
        "text": "﻿<i> ... this pattern provides the underlying approach for  [[Microservice Interoperability]] and makes  [[Microservice Federation]] practical </i>"
      },
      "date": 1525905425224
    },
    {
      "type": "edit",
      "id": "ae9fc17ebd9a5eb1",
      "item": {
        "type": "html",
        "id": "ae9fc17ebd9a5eb1",
        "text": "<h2 style=\"font-family:times\">THE STORY: Robust, simple services with well defined interfaces,  .</h2>"
      },
      "date": 1525905637208
    },
    {
      "type": "edit",
      "id": "e124cbe85c8863b8",
      "item": {
        "type": "paragraph",
        "id": "e124cbe85c8863b8",
        "text": "\n\nUnix seems to me an excellent model for this. The fundamental design of unix hasnt changed since 1971. The core tenet of unix is written on wikipedia as: \"The Unix philosophy emphasizes building simple, short, clear, modular, and extensible code that can be easily maintained and repurposed by developers other than its creators. The Unix philosophy favors composability as opposed to monolithic design.\"\n\nThis design I think can be very clearly extended into a \"web\" or \"internet\" substrate of microservices linked together through REST api calls. The ubiquity of the http standard, and perhaps webSockets as well have solid metaphors in the *nix universe.\n\nWhat seems to be the core requirements for this flavour of *nix (if you will excuse the aforism), are that we can have some kind of mid-level of services which are composed of lower level services, and that provide a reasonably stable language targeted at certain sets of community requirements.\n\nAs the unix kernel and low level software can evolve, whilst leaving the interface to higher level software (e.g. Media Player running on top of the sound sub-system), so must miscroservices be able to evolve without breaking the ecosystem.\n\nAs the sub-systems evolve, they can offer \"extra\" potential behaviour to end-user products, without breaking backwards compatibility.\n"
      },
      "date": 1525906331900
    },
    {
      "type": "remove",
      "id": "0a0d1c1d69368d0d",
      "date": 1525906335192
    },
    {
      "type": "edit",
      "id": "e124cbe85c8863b8",
      "item": {
        "type": "paragraph",
        "id": "e124cbe85c8863b8",
        "text": "FROM a Comment by Chris Reay:\n\""
      },
      "date": 1525906361974
    },
    {
      "type": "add",
      "id": "7088cc56b50a7b00",
      "item": {
        "type": "paragraph",
        "id": "7088cc56b50a7b00",
        "text": "Unix seems to me an excellent model for this. The fundamental design of unix hasnt changed since 1971. The core tenet of unix is written on wikipedia as: \"The Unix philosophy emphasizes building simple, short, clear, modular, and extensible code that can be easily maintained and repurposed by developers other than its creators. The Unix philosophy favors composability as opposed to monolithic design.\"\n\nThis design I think can be very clearly extended into a \"web\" or \"internet\" substrate of microservices linked together through REST api calls. The ubiquity of the http standard, and perhaps webSockets as well have solid metaphors in the *nix universe.\n\nWhat seems to be the core requirements for this flavour of *nix (if you will excuse the aforism), are that we can have some kind of mid-level of services which are composed of lower level services, and that provide a reasonably stable language targeted at certain sets of community requirements.\n\nAs the unix kernel and low level software can evolve, whilst leaving the interface to higher level software (e.g. Media Player running on top of the sound sub-system), so must miscroservices be able to evolve without breaking the ecosystem.\n\nAs the sub-systems evolve, they can offer \"extra\" potential behaviour to end-user products, without breaking backwards compatibility.\n"
      },
      "after": "e124cbe85c8863b8",
      "date": 1525906367502
    },
    {
      "type": "remove",
      "id": "e124cbe85c8863b8",
      "date": 1525906371812
    },
    {
      "type": "edit",
      "id": "7088cc56b50a7b00",
      "item": {
        "type": "paragraph",
        "id": "7088cc56b50a7b00",
        "text": "FROM a Comment by Chris Reay:\n\"Unix seems to me an excellent model for this. The fundamental design of unix hasnt changed since 1971. The core tenet of unix is written on wikipedia as: \"The Unix philosophy emphasizes building simple, short, clear, modular, and extensible code that can be easily maintained and repurposed by developers other than its creators. The Unix philosophy favors composability as opposed to monolithic design.\"\n\nThis design I think can be very clearly extended into a \"web\" or \"internet\" substrate of microservices linked together through REST api calls. The ubiquity of the http standard, and perhaps webSockets as well have solid metaphors in the *nix universe.\n\nWhat seems to be the core requirements for this flavour of *nix (if you will excuse the aforism), are that we can have some kind of mid-level of services which are composed of lower level services, and that provide a reasonably stable language targeted at certain sets of community requirements.\n\nAs the unix kernel and low level software can evolve, whilst leaving the interface to higher level software (e.g. Media Player running on top of the sound sub-system), so must miscroservices be able to evolve without breaking the ecosystem.\n\nAs the sub-systems evolve, they can offer \"extra\" potential behaviour to end-user products, without breaking backwards compatibility.\n"
      },
      "date": 1525906379408
    },
    {
      "type": "remove",
      "id": "053fc0db01030d96",
      "date": 1525906392318
    },
    {
      "type": "remove",
      "id": "87808e5f12ad45c2",
      "date": 1525906394908
    },
    {
      "type": "edit",
      "id": "442ea85401b065f8",
      "item": {
        "type": "html",
        "id": "442ea85401b065f8",
        "text": "<h2 style=\"font-family:times\">THE TAKE-AWAY: Recommendations arising from the story and the discussion.</h2> \n<h3  style=\"font-family:times\">These recommendations should be framed in the loosest manner possible that manages to capture what is important. \n<h3  style=\"font-family:times\">If at all possible, try and make a pictorial representation of this to round out the writing.</h3>"
      },
      "date": 1525906416602
    }
  ]
}